import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest12 {

    public static boolean debug = false;

    @Test
    public void test06001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06001");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig35.getAtmosphereHandlerConfig();
        atmosphereConfig34.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig42.shutdownHooks = shutdownHookList46;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig42.getproperties();
        atmosphereConfig34.setproperties(strMap49);
        atmosphereConfig33.setproperties(strMap49);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig33.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig54.getAtmosphereHandlerConfig();
        atmosphereConfig53.atmosphereHandlerConfig = atmosphereHandlerConfigList59;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray64 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList65, shutdownHookArray64);
        atmosphereConfig61.shutdownHooks = shutdownHookList65;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig61.getproperties();
        atmosphereConfig53.setproperties(strMap68);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig53.startupHook(startupHook70);
        boolean boolean72 = atmosphereConfig71.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig71.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig74.destroy();
        boolean boolean76 = atmosphereConfig74.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook77 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig74.shutdownHook(shutdownHook77);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig74.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList80 = atmosphereConfig74.shutdownHooks;
        atmosphereConfig71.shutdownHooks = shutdownHookList80;
        atmosphereConfig33.shutdownHooks = shutdownHookList80;
        atmosphereConfig0.shutdownHooks = shutdownHookList80;
        java.lang.String str86 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig87 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig87.destroy();
        boolean boolean89 = atmosphereConfig87.supportSession;
        boolean boolean90 = atmosphereConfig87.isSessionTimeoutRemovalAllowed();
        atmosphereConfig87.setuseServletContextParameters(true);
        int int95 = atmosphereConfig87.getInitParameter("", 0);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList96 = atmosphereConfig87.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList96;
        boolean boolean98 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertNotNull(shutdownHookList80);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertNotNull(shutdownHookList96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test06002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06002");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig18.framework();
        boolean boolean62 = atmosphereConfig18.isThrowExceptionOnCloned();
        boolean boolean63 = atmosphereConfig18.isSupportSession();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap64 = atmosphereConfig18.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(atmosphereFramework61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test06003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06003");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        int int9 = atmosphereConfig4.getInitParameter("", (int) (short) 10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig11.framework = atmosphereFramework18;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig11.shutdownHooks;
        atmosphereConfig4.setshutdownHooks(shutdownHookList20);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory22 = atmosphereConfig4.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(shutdownHookList20);
    }

    @Test
    public void test06004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06004");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.supportSession = false;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean10 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.initComplete();
        boolean boolean12 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework();
        org.slf4j.Logger logger14 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(logger14);
    }

    @Test
    public void test06005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06005");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig0.setframework(atmosphereFramework22);
        atmosphereConfig0.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig0.framework = atmosphereFramework26;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig30.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig29.setproperties(strMap44);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig29.startupHook(startupHook46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig48.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray59 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList60, shutdownHookArray59);
        atmosphereConfig56.shutdownHooks = shutdownHookList60;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig56.getproperties();
        atmosphereConfig48.setproperties(strMap63);
        atmosphereConfig47.setproperties(strMap63);
        atmosphereConfig47.destroy();
        atmosphereConfig47.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList68;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
    }

    @Test
    public void test06006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06006");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties();
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setuseServletContextParameters(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
    }

    @Test
    public void test06007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06007");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean13 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig0.getframework();
        boolean boolean15 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06008");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties();
        atmosphereConfig0.setproperties(strMap16);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("", "");
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.slf4j.Logger logger23 = atmosphereConfig0.getlogger();
        boolean boolean26 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig31.startupHook(startupHook32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig31.properties;
        atmosphereConfig31.sessionTimeoutRemovalAllowed = false;
        boolean boolean37 = atmosphereConfig31.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig42.startupHook(startupHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.destroy();
        boolean boolean47 = atmosphereConfig45.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig51.getstartUpHook();
        atmosphereConfig42.setstartUpHook(startupHookList52);
        atmosphereConfig31.setstartUpHook(startupHookList52);
        atmosphereConfig0.setstartUpHook(startupHookList52);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig0.getshutdownHooks();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration57 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertNotNull(shutdownHookList56);
    }

    @Test
    public void test06009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06009");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig13.getAtmosphereHandlerConfig();
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig20.shutdownHooks = shutdownHookList24;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.getproperties();
        atmosphereConfig12.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig12.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig32.getAtmosphereHandlerConfig();
        atmosphereConfig31.atmosphereHandlerConfig = atmosphereHandlerConfigList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43, shutdownHookArray42);
        atmosphereConfig39.shutdownHooks = shutdownHookList43;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig39.getproperties();
        atmosphereConfig31.setproperties(strMap46);
        atmosphereConfig30.setproperties(strMap46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig30.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList49;
        atmosphereConfig0.supportSession = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(shutdownHookList49);
    }

    @Test
    public void test06010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06010");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig10.framework = atmosphereFramework13;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.shutdownHook(shutdownHook15);
        int int19 = atmosphereConfig10.getInitParameter("hi!", 35);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory20 = atmosphereConfig10.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
    }

    @Test
    public void test06011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06011");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str11 = atmosphereConfig4.getInitParameter("hi!", "hi!");
        atmosphereConfig4.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig15.getAtmosphereHandlerConfig();
        atmosphereConfig14.atmosphereHandlerConfig = atmosphereHandlerConfigList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig22.shutdownHooks = shutdownHookList26;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.getproperties();
        atmosphereConfig14.setproperties(strMap29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig14.startupHook(startupHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig33.atmosphereHandlerConfig = atmosphereHandlerConfigList39;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig41.shutdownHooks = shutdownHookList45;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig41.getproperties();
        atmosphereConfig33.setproperties(strMap48);
        atmosphereConfig32.setproperties(strMap48);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig32.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig32.setframework(atmosphereFramework52);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig32.shutdownHook(shutdownHook54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig56.getAtmosphereHandlerConfig();
        boolean boolean62 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray63 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList64, shutdownHookArray63);
        atmosphereConfig56.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList64);
        atmosphereConfig32.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList64);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig32.startUpHook;
        atmosphereConfig4.setstartUpHook(startupHookList68);
        boolean boolean70 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = atmosphereConfig4.getframework();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap72 = atmosphereConfig4.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(startupHookList68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(atmosphereFramework71);
    }

    @Test
    public void test06012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06012");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        atmosphereConfig9.setuseServletContextParameters(false);
        atmosphereConfig9.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig9.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig0.setframework(atmosphereFramework24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig0.properties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster27 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test06013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06013");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.framework = atmosphereFramework9;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig8.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig8.useServletContextParameters = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig8.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(startupHookList15);
    }

    @Test
    public void test06014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06014");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig0.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig21.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig30.startupHook(startupHook31);
        boolean boolean33 = atmosphereConfig32.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test06015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06015");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.destroy();
        boolean boolean8 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.getframework();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
    }

    @Test
    public void test06016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06016");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework();
        boolean boolean21 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean22 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig0.getstartUpHook();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap24 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
    }

    @Test
    public void test06017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06017");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig12.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig12.setframework(atmosphereFramework21);
        boolean boolean23 = atmosphereConfig12.getuseServletContextParameters();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig12.getproperties();
        atmosphereConfig0.properties = strMap24;
        boolean boolean26 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.lang.String str28 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(atmosphereFramework29);
    }

    @Test
    public void test06018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06018");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework();
        boolean boolean11 = atmosphereConfig0.throwExceptionOnCloned;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider12 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06019");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        atmosphereConfig41.setThrowExceptionOnCloned(false);
        atmosphereConfig41.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig41.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig46.atmosphereHandlerConfig = atmosphereHandlerConfigList52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray57 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList58, shutdownHookArray57);
        atmosphereConfig54.shutdownHooks = shutdownHookList58;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig54.getproperties();
        atmosphereConfig46.setproperties(strMap61);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig46.startupHook(startupHook63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig66.destroy();
        boolean boolean68 = atmosphereConfig66.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig66.shutdownHook(shutdownHook69);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig66.getAtmosphereHandlerConfig();
        atmosphereConfig65.atmosphereHandlerConfig = atmosphereHandlerConfigList71;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        boolean boolean75 = atmosphereConfig73.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray76 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList77, shutdownHookArray76);
        atmosphereConfig73.shutdownHooks = shutdownHookList77;
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = atmosphereConfig73.getproperties();
        atmosphereConfig65.setproperties(strMap80);
        atmosphereConfig64.setproperties(strMap80);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig64.shutdownHooks;
        atmosphereConfig41.shutdownHooks = shutdownHookList83;
        atmosphereConfig41.useServletContextParameters = true;
        atmosphereConfig41.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework89 = atmosphereConfig41.getframework();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNull(atmosphereFramework89);
    }

    @Test
    public void test06020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06020");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig16.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.getproperties();
        atmosphereConfig15.properties = strMap31;
        atmosphereConfig15.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig15.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = null;
        atmosphereConfig15.setproperties(strMap36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        atmosphereConfig38.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        atmosphereConfig38.framework = atmosphereFramework45;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig38.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig48.destroy();
        atmosphereConfig48.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig48.getAtmosphereHandlerConfig();
        atmosphereConfig48.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig48.startupHook(startupHook55);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig48.getstartUpHook();
        atmosphereConfig38.setstartUpHook(startupHookList57);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = atmosphereConfig38.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        atmosphereConfig60.setframework(atmosphereFramework61);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray63 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList64, startupHookArray63);
        atmosphereConfig60.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList64);
        atmosphereConfig60.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = atmosphereConfig60.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig70.destroy();
        boolean boolean72 = atmosphereConfig70.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray73 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList74 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList74, shutdownHookArray73);
        atmosphereConfig70.shutdownHooks = shutdownHookList74;
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig70.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList78 = atmosphereConfig70.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework79 = null;
        atmosphereConfig70.setframework(atmosphereFramework79);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = atmosphereConfig70.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework82 = atmosphereConfig70.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig70.getshutdownHooks();
        atmosphereConfig60.shutdownHooks = shutdownHookList83;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig85 = atmosphereConfig38.populate(atmosphereConfig60);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = atmosphereConfig15.populate(atmosphereConfig85);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig86.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNull(atmosphereFramework59);
        org.junit.Assert.assertNotNull(startupHookArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(atmosphereFramework69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList78);
        org.junit.Assert.assertNotNull(shutdownHookList81);
        org.junit.Assert.assertNull(atmosphereFramework82);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNotNull(atmosphereConfig85);
        org.junit.Assert.assertNotNull(atmosphereConfig86);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
    }

    @Test
    public void test06021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06021");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = null;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList12);
        boolean boolean14 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean15 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int20 = atmosphereConfig0.getInitParameter("hi!", (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test06022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06022");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean11 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06023");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig16.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.getproperties();
        atmosphereConfig15.properties = strMap31;
        atmosphereConfig15.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig15.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig15.startupHook(startupHook36);
        atmosphereConfig15.setuseServletContextParameters(true);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig40 = atmosphereConfig15.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
    }

    @Test
    public void test06024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06024");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        boolean boolean14 = atmosphereConfig13.supportSession;
        boolean boolean15 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        boolean boolean16 = atmosphereConfig13.getuseServletContextParameters();
        boolean boolean17 = atmosphereConfig13.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig13.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList20;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig0.framework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory23 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNull(atmosphereFramework22);
    }

    @Test
    public void test06025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06025");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        boolean boolean14 = atmosphereConfig13.supportSession;
        boolean boolean15 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        boolean boolean16 = atmosphereConfig13.getuseServletContextParameters();
        boolean boolean17 = atmosphereConfig13.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig13.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList20;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig0.framework();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig0.framework;
        boolean boolean26 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = null;
        atmosphereConfig27.setstartUpHook(startupHookList32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        atmosphereConfig27.setstartUpHook(startupHookList39);
        boolean boolean41 = atmosphereConfig27.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig27.startupHook(startupHook42);
        atmosphereConfig27.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig27.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig27.properties();
        atmosphereConfig0.properties = strMap47;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test06026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06026");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig24.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig32.getproperties();
        atmosphereConfig24.setproperties(strMap39);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig24.startupHook(startupHook41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig44.getAtmosphereHandlerConfig();
        atmosphereConfig43.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig51.shutdownHooks = shutdownHookList55;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig51.getproperties();
        atmosphereConfig43.setproperties(strMap58);
        atmosphereConfig42.setproperties(strMap58);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = atmosphereConfig42.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = null;
        atmosphereConfig42.setframework(atmosphereFramework62);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig42.shutdownHook(shutdownHook64);
        boolean boolean66 = atmosphereConfig42.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig0.populate(atmosphereConfig42);
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList69 = atmosphereConfig0.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider70 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(shutdownHookList61);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList69);
    }

    @Test
    public void test06027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06027");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.supportSession = true;
        atmosphereConfig4.useServletContextParameters = false;
        boolean boolean21 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig22.shutdownHooks = shutdownHookList26;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.getproperties();
        org.slf4j.Logger logger30 = atmosphereConfig22.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig22.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList32);
        boolean boolean34 = atmosphereConfig4.useServletContextParameters;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig4.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig4.shutdownHooks;
        java.lang.String str39 = atmosphereConfig4.getInitParameter("", "hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(logger30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test06028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06028");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        boolean boolean11 = atmosphereConfig0.supportSession;
        java.lang.String str13 = atmosphereConfig0.getInitParameter("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory14 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test06029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06029");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        boolean boolean11 = atmosphereConfig0.getuseServletContextParameters();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory16 = atmosphereConfig15.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
    }

    @Test
    public void test06030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06030");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        atmosphereConfig16.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        atmosphereConfig20.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig16.populate(atmosphereConfig20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig26.getAtmosphereHandlerConfig();
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList31;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig25.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34);
        atmosphereConfig16.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig16.setframework(atmosphereFramework38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig16.properties;
        atmosphereConfig4.setproperties(strMap40);
        atmosphereConfig4.throwExceptionOnCloned = false;
        boolean boolean44 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test06031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06031");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        boolean boolean16 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig0.getstartUpHook();
        boolean boolean21 = atmosphereConfig0.getuseServletContextParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration22 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test06032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06032");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.shutdownHook(shutdownHook10);
        atmosphereConfig11.setSupportSession(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        atmosphereConfig11.throwExceptionOnCloned = false;
        atmosphereConfig11.supportSession = false;
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.startupHook(startupHook26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.properties;
        atmosphereConfig25.sessionTimeoutRemovalAllowed = false;
        boolean boolean31 = atmosphereConfig25.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig36.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig43.startupHook(startupHook44);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.getstartUpHook();
        atmosphereConfig36.setstartUpHook(startupHookList46);
        atmosphereConfig25.setstartUpHook(startupHookList46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig25.getstartUpHook();
        atmosphereConfig11.setstartUpHook(startupHookList49);
        java.lang.Class<?> wildcardClass51 = startupHookList49.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test06033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06033");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.framework();
        java.lang.String str21 = atmosphereConfig0.getInitParameter("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test06034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06034");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.lang.Class<?> wildcardClass33 = atmosphereConfig0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test06035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06035");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList14);
        atmosphereConfig4.useServletContextParameters = false;
        int int20 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig21.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig21.shutdownHooks;
        boolean boolean29 = atmosphereConfig21.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        boolean boolean35 = atmosphereConfig34.supportSession;
        boolean boolean36 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        boolean boolean37 = atmosphereConfig34.getuseServletContextParameters();
        boolean boolean38 = atmosphereConfig34.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig34.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig40.shutdownHooks;
        atmosphereConfig21.shutdownHooks = shutdownHookList41;
        int int45 = atmosphereConfig21.getInitParameter("hi!", 32);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig21.getproperties();
        atmosphereConfig4.properties = strMap46;
        atmosphereConfig4.destroy();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 32 + "'", int45 == 32);
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test06036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06036");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig4.setframework(atmosphereFramework6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        atmosphereConfig8.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig8.startupHook(startupHook25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig27.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig35.shutdownHooks = shutdownHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig35.getproperties();
        atmosphereConfig27.setproperties(strMap42);
        atmosphereConfig26.setproperties(strMap42);
        atmosphereConfig4.properties = strMap42;
        java.lang.Class<?> wildcardClass46 = atmosphereConfig4.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test06037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06037");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("", "");
        java.lang.String str11 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig14.getAtmosphereHandlerConfig();
        boolean boolean20 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList22, shutdownHookArray21);
        atmosphereConfig14.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList22);
        java.lang.String str27 = atmosphereConfig14.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig29.getAtmosphereHandlerConfig();
        atmosphereConfig28.atmosphereHandlerConfig = atmosphereHandlerConfigList34;
        atmosphereConfig28.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig42.startupHook(startupHook43);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig42.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig42.getshutdownHooks();
        atmosphereConfig28.setshutdownHooks(shutdownHookList46);
        java.lang.String str49 = atmosphereConfig28.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig28.getproperties();
        atmosphereConfig14.properties = strMap50;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig14.getproperties();
        boolean boolean53 = atmosphereConfig14.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig14.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList54);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap56 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(shutdownHookList46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(startupHookList54);
    }

    @Test
    public void test06038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06038");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList14);
        atmosphereConfig4.useServletContextParameters = false;
        boolean boolean18 = atmosphereConfig4.isSupportSession();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig4.setframework(atmosphereFramework21);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06039");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
    }

    @Test
    public void test06040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06040");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean5 = atmosphereConfig0.getuseServletContextParameters();
        java.lang.String str8 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig13.startupHook(startupHook14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(startupHookList18);
    }

    @Test
    public void test06041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06041");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        boolean boolean34 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        boolean boolean39 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig36.startUpHook;
        atmosphereConfig33.setstartUpHook(startupHookList40);
        atmosphereConfig0.startUpHook = startupHookList40;
        boolean boolean43 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.lang.String str47 = atmosphereConfig0.getInitParameter("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test06042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06042");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.initComplete();
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.initComplete();
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06043");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.getproperties();
        atmosphereConfig22.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig22.startupHook(startupHook39);
        boolean boolean41 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig40.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig43.shutdownHooks;
        atmosphereConfig40.shutdownHooks = shutdownHookList49;
        atmosphereConfig0.shutdownHooks = shutdownHookList49;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig0.startupHook(startupHook53);
        atmosphereConfig54.setuseServletContextParameters(false);
        atmosphereConfig54.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig54.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(startupHookList59);
    }

    @Test
    public void test06044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06044");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig18.properties;
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        boolean boolean27 = atmosphereConfig26.supportSession;
        boolean boolean28 = atmosphereConfig26.isSessionTimeoutRemovalAllowed();
        boolean boolean29 = atmosphereConfig26.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig26.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig26.getshutdownHooks();
        atmosphereConfig18.shutdownHooks = shutdownHookList31;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig18.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig18.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig18.setframework(atmosphereFramework35);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(startupHookList34);
    }

    @Test
    public void test06045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06045");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.slf4j.Logger logger19 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig18.framework;
        atmosphereConfig18.supportSession = true;
        int int25 = atmosphereConfig18.getInitParameter("hi!", (int) (byte) 0);
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig18.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig18.getstartUpHook();
        java.lang.String str31 = atmosphereConfig18.getInitParameter("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test06046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06046");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.slf4j.Logger logger19 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig18.framework;
        atmosphereConfig18.supportSession = true;
        int int25 = atmosphereConfig18.getInitParameter("hi!", (int) (byte) 0);
        atmosphereConfig18.destroy();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig27 = atmosphereConfig18.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test06047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06047");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str11 = atmosphereConfig4.getInitParameter("hi!", "hi!");
        atmosphereConfig4.setSupportSession(true);
        atmosphereConfig4.supportSession = false;
        boolean boolean18 = atmosphereConfig4.getInitParameter("", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06048");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig15.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.startUpHook;
        atmosphereConfig15.destroy();
        boolean boolean20 = atmosphereConfig15.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig15.getframework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig15.shutdownHook(shutdownHook22);
        atmosphereConfig15.setThrowExceptionOnCloned(true);
        atmosphereConfig15.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        atmosphereConfig28.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig35.getAtmosphereHandlerConfig();
        atmosphereConfig28.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig28.startupHook(startupHook42);
        atmosphereConfig28.setSupportSession(true);
        boolean boolean46 = atmosphereConfig28.supportSession;
        boolean boolean47 = atmosphereConfig28.getuseServletContextParameters();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig28.properties();
        atmosphereConfig15.properties = strMap48;
        boolean boolean50 = atmosphereConfig15.supportSession;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test06049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06049");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.lang.String str27 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig0.shutdownHook(shutdownHook28);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(atmosphereConfig29);
    }

    @Test
    public void test06050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06050");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList2 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        atmosphereConfig9.useServletContextParameters = true;
        atmosphereConfig9.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
    }

    @Test
    public void test06051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06051");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8, shutdownHookArray7);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig16.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig16.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.populate(atmosphereConfig34);
        int int39 = atmosphereConfig34.getInitParameter("hi!", (int) (short) 1);
        atmosphereConfig34.throwExceptionOnCloned = true;
        atmosphereConfig34.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig34.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
    }

    @Test
    public void test06052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06052");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig18.framework();
        boolean boolean62 = atmosphereConfig18.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig18.getproperties();
        atmosphereConfig18.supportSession = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(atmosphereFramework61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap63);
    }

    @Test
    public void test06053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06053");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.framework = atmosphereFramework9;
        atmosphereConfig8.destroy();
        boolean boolean12 = atmosphereConfig8.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig8.framework = atmosphereFramework13;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.properties();
        boolean boolean16 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        atmosphereConfig8.initComplete();
        java.lang.String str20 = atmosphereConfig8.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = null;
        atmosphereConfig21.setstartUpHook(startupHookList26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig21.framework();
        atmosphereConfig21.throwExceptionOnCloned = true;
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig37.startupHook(startupHook38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig37.properties;
        java.lang.String str42 = atmosphereConfig37.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig37.getproperties();
        atmosphereConfig21.setproperties(strMap43);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig21.atmosphereHandlerConfig;
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList45;
        atmosphereConfig8.setSupportSession(false);
        boolean boolean51 = atmosphereConfig8.getInitParameter("hi!", false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test06054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06054");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        atmosphereConfig9.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig23.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig23.getshutdownHooks();
        atmosphereConfig9.setshutdownHooks(shutdownHookList27);
        atmosphereConfig0.setshutdownHooks(shutdownHookList27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        boolean boolean35 = atmosphereConfig34.supportSession;
        atmosphereConfig34.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList39, startupHookArray38);
        atmosphereConfig34.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList39);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList39);
        atmosphereConfig0.useServletContextParameters = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(startupHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test06055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06055");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        boolean boolean14 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.slf4j.Logger logger17 = atmosphereConfig0.getlogger();
        org.slf4j.Logger logger18 = atmosphereConfig0.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig0.properties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test06056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06056");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        boolean boolean7 = atmosphereConfig4.isThrowExceptionOnCloned();
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test06057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06057");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        atmosphereConfig4.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray8 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList9, startupHookArray8);
        atmosphereConfig4.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList9);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig4.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        atmosphereConfig13.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        boolean boolean27 = atmosphereConfig13.throwExceptionOnCloned;
        java.lang.String str30 = atmosphereConfig13.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        boolean boolean33 = atmosphereConfig31.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        atmosphereConfig31.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig38.getAtmosphereHandlerConfig();
        atmosphereConfig31.atmosphereHandlerConfig = atmosphereHandlerConfigList43;
        atmosphereConfig31.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig31.atmosphereHandlerConfig;
        boolean boolean48 = atmosphereConfig31.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        boolean boolean55 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray56 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList57, shutdownHookArray56);
        atmosphereConfig49.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList57);
        atmosphereConfig31.shutdownHooks = shutdownHookList57;
        atmosphereConfig13.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList57);
        atmosphereConfig4.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList57);
        boolean boolean63 = atmosphereConfig4.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test06058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06058");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean5 = atmosphereConfig0.getuseServletContextParameters();
        java.lang.String str8 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.getshutdownHooks();
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig0.getuseServletContextParameters();
        java.lang.String str13 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.shutdownHooks;
        boolean boolean15 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        atmosphereConfig16.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig26.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig26.properties();
        atmosphereConfig16.setproperties(strMap32);
        atmosphereConfig16.sessionTimeoutRemovalAllowed = false;
        java.lang.String str37 = atmosphereConfig16.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig39.getAtmosphereHandlerConfig();
        atmosphereConfig38.atmosphereHandlerConfig = atmosphereHandlerConfigList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray49 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50, shutdownHookArray49);
        atmosphereConfig46.shutdownHooks = shutdownHookList50;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig46.getproperties();
        atmosphereConfig38.setproperties(strMap53);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig38.startupHook(startupHook55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig58.destroy();
        boolean boolean60 = atmosphereConfig58.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig58.shutdownHook(shutdownHook61);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig58.getAtmosphereHandlerConfig();
        atmosphereConfig57.atmosphereHandlerConfig = atmosphereHandlerConfigList63;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig65.destroy();
        boolean boolean67 = atmosphereConfig65.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray68 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList69, shutdownHookArray68);
        atmosphereConfig65.shutdownHooks = shutdownHookList69;
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig65.getproperties();
        atmosphereConfig57.setproperties(strMap72);
        atmosphereConfig56.setproperties(strMap72);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig56.startupHook(startupHook75);
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig56.properties();
        atmosphereConfig16.properties = strMap77;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework79 = null;
        atmosphereConfig16.setframework(atmosphereFramework79);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig0.populate(atmosphereConfig16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList82 = atmosphereConfig81.getshutdownHooks();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertNotNull(shutdownHookList82);
    }

    @Test
    public void test06059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06059");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        boolean boolean10 = atmosphereConfig4.getInitParameter("hi!", true);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.setSupportSession(true);
        boolean boolean15 = atmosphereConfig4.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig4.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig17.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList29, shutdownHookArray28);
        atmosphereConfig25.shutdownHooks = shutdownHookList29;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig25.getproperties();
        atmosphereConfig17.setproperties(strMap32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig17.startupHook(startupHook34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig37.getAtmosphereHandlerConfig();
        atmosphereConfig36.atmosphereHandlerConfig = atmosphereHandlerConfigList42;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray47 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList48, shutdownHookArray47);
        atmosphereConfig44.shutdownHooks = shutdownHookList48;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig44.getproperties();
        atmosphereConfig36.setproperties(strMap51);
        atmosphereConfig35.setproperties(strMap51);
        int int56 = atmosphereConfig35.getInitParameter("", 100);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig35.shutdownHooks;
        boolean boolean58 = atmosphereConfig35.isSupportSession();
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig35.properties;
        atmosphereConfig4.properties = strMap61;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig63 = atmosphereConfig4.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMap61);
    }

    @Test
    public void test06060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06060");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean13 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06061");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig6.getframework();
        atmosphereConfig6.throwExceptionOnCloned = false;
        boolean boolean10 = atmosphereConfig6.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig6.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig6.framework = atmosphereFramework12;
        boolean boolean14 = atmosphereConfig6.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.startupHook(startupHook27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.getstartUpHook();
        atmosphereConfig19.setstartUpHook(startupHookList29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        atmosphereConfig31.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        atmosphereConfig35.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig31.populate(atmosphereConfig35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig41.getAtmosphereHandlerConfig();
        atmosphereConfig40.atmosphereHandlerConfig = atmosphereHandlerConfigList46;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList49, shutdownHookArray48);
        atmosphereConfig40.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList49);
        atmosphereConfig31.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList49);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        atmosphereConfig31.setframework(atmosphereFramework53);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig31.properties;
        atmosphereConfig19.setproperties(strMap55);
        atmosphereConfig19.throwExceptionOnCloned = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig19.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig19.properties();
        atmosphereConfig6.setproperties(strMap60);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(shutdownHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(strMap60);
    }

    @Test
    public void test06062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06062");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        atmosphereConfig8.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig8.startupHook(startupHook25);
        java.lang.String str28 = atmosphereConfig8.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig8.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig8.setframework(atmosphereFramework30);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig8.shutdownHook(shutdownHook32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig33.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        boolean boolean37 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = null;
        atmosphereConfig0.shutdownHooks = shutdownHookList39;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test06063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06063");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19, startupHookArray18);
        atmosphereConfig8.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19);
        boolean boolean22 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig8.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.startupHook(startupHook30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig29.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig29.getshutdownHooks();
        java.lang.String str36 = atmosphereConfig29.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig29.getshutdownHooks();
        atmosphereConfig8.shutdownHooks = shutdownHookList37;
        atmosphereConfig0.setshutdownHooks(shutdownHookList37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig0.shutdownHooks = shutdownHookList42;
        boolean boolean45 = atmosphereConfig0.useServletContextParameters;
        int int48 = atmosphereConfig0.getInitParameter("hi!", 100);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(startupHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
    }

    @Test
    public void test06064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06064");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean13 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean14 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.startupHook(startupHook21);
        int int25 = atmosphereConfig20.getInitParameter("", (int) (short) 10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig20.atmosphereHandlerConfig;
        org.slf4j.Logger logger27 = atmosphereConfig20.getlogger();
        atmosphereConfig20.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig20.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig20.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig20.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig20.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList35;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(logger27);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
    }

    @Test
    public void test06065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06065");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(startupHookList18);
    }

    @Test
    public void test06066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06066");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig13.getAtmosphereHandlerConfig();
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig20.shutdownHooks = shutdownHookList24;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.getproperties();
        atmosphereConfig12.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig12.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig32.getAtmosphereHandlerConfig();
        atmosphereConfig31.atmosphereHandlerConfig = atmosphereHandlerConfigList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43, shutdownHookArray42);
        atmosphereConfig39.shutdownHooks = shutdownHookList43;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig39.getproperties();
        atmosphereConfig31.setproperties(strMap46);
        atmosphereConfig30.setproperties(strMap46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig30.shutdownHooks;
        atmosphereConfig30.useServletContextParameters = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig30.startUpHook;
        atmosphereConfig4.setstartUpHook(startupHookList52);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext54 = atmosphereConfig4.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertNotNull(startupHookList52);
    }

    @Test
    public void test06067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06067");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig18.startupHook(startupHook37);
        org.slf4j.Logger logger39 = atmosphereConfig18.getlogger();
        int int42 = atmosphereConfig18.getInitParameter("", (int) (byte) 1);
        boolean boolean43 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        atmosphereConfig18.initComplete();
        int int47 = atmosphereConfig18.getInitParameter("", 100);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig48 = atmosphereConfig18.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(logger39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
    }

    @Test
    public void test06068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06068");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig59.setframework(atmosphereFramework60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63, startupHookArray62);
        atmosphereConfig59.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63);
        atmosphereConfig59.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig59.framework();
        java.lang.String str71 = atmosphereConfig59.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig18.populate(atmosphereConfig59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        boolean boolean75 = atmosphereConfig73.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig73.shutdownHook(shutdownHook76);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList78 = atmosphereConfig77.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = atmosphereConfig77.getshutdownHooks();
        boolean boolean80 = atmosphereConfig77.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = atmosphereConfig77.shutdownHooks;
        atmosphereConfig59.shutdownHooks = shutdownHookList81;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList83 = atmosphereConfig59.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig84 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig84.destroy();
        boolean boolean86 = atmosphereConfig84.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray87 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList88 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList88, shutdownHookArray87);
        atmosphereConfig84.shutdownHooks = shutdownHookList88;
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = atmosphereConfig84.getproperties();
        org.slf4j.Logger logger92 = atmosphereConfig84.getlogger();
        atmosphereConfig84.setuseServletContextParameters(true);
        org.slf4j.Logger logger95 = atmosphereConfig84.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList96 = atmosphereConfig84.startUpHook;
        atmosphereConfig59.startUpHook = startupHookList96;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList98 = atmosphereConfig59.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList99 = atmosphereConfig59.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(startupHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(startupHookList78);
        org.junit.Assert.assertNotNull(shutdownHookList79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(shutdownHookList81);
        org.junit.Assert.assertNotNull(startupHookList83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(logger92);
        org.junit.Assert.assertNotNull(logger95);
        org.junit.Assert.assertNotNull(startupHookList96);
        org.junit.Assert.assertNotNull(startupHookList98);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList99);
    }

    @Test
    public void test06069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06069");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList3 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(atmosphereFramework8);
    }

    @Test
    public void test06070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06070");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig16.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig16.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig34.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig37.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig40.shutdownHooks = shutdownHookList44;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig40.getproperties();
        atmosphereConfig39.properties = strMap47;
        atmosphereConfig34.setproperties(strMap47);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig34.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList50);
        atmosphereConfig0.destroy();
        boolean boolean53 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig0.shutdownHook(shutdownHook54);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        atmosphereConfig0.framework = atmosphereFramework56;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
        org.junit.Assert.assertNotNull(shutdownHookList59);
    }

    @Test
    public void test06071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06071");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig15.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.startupHook(startupHook23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.startupHook(startupHook30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.getstartUpHook();
        atmosphereConfig22.setstartUpHook(startupHookList32);
        atmosphereConfig15.startUpHook = startupHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig15.properties();
        boolean boolean36 = atmosphereConfig15.isSupportSession();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster37 = atmosphereConfig15.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test06072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06072");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        boolean boolean38 = atmosphereConfig18.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig18.shutdownHook(shutdownHook39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig18.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        atmosphereConfig18.setframework(atmosphereFramework42);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNull(atmosphereFramework41);
    }

    @Test
    public void test06073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06073");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookList8);
    }

    @Test
    public void test06074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06074");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig4.getframework();
        boolean boolean9 = atmosphereConfig4.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig4.throwExceptionOnCloned = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
    }

    @Test
    public void test06075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06075");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        atmosphereConfig4.supportSession = false;
        boolean boolean8 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig4.getInitParameter("hi!", false);
        atmosphereConfig4.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig14.setframework(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList18, startupHookArray17);
        atmosphereConfig14.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList18);
        atmosphereConfig14.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig14.framework();
        atmosphereConfig14.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig27.getAtmosphereHandlerConfig();
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray37 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList38, shutdownHookArray37);
        atmosphereConfig34.shutdownHooks = shutdownHookList38;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig34.getproperties();
        atmosphereConfig26.setproperties(strMap41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray46 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList47, shutdownHookArray46);
        atmosphereConfig43.shutdownHooks = shutdownHookList47;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig43.getproperties();
        atmosphereConfig26.properties = strMap50;
        atmosphereConfig26.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig14.populate(atmosphereConfig26);
        atmosphereConfig54.setuseServletContextParameters(true);
        atmosphereConfig54.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = atmosphereConfig54.shutdownHooks;
        atmosphereConfig4.shutdownHooks = shutdownHookList59;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(shutdownHookList59);
    }

    @Test
    public void test06076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06076");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.slf4j.Logger logger19 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig18.framework;
        boolean boolean21 = atmosphereConfig18.isThrowExceptionOnCloned();
        atmosphereConfig18.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig18.framework;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(atmosphereFramework24);
    }

    @Test
    public void test06077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06077");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig6.useServletContextParameters;
        atmosphereConfig6.initComplete();
        boolean boolean9 = atmosphereConfig6.throwExceptionOnCloned;
        int int12 = atmosphereConfig6.getInitParameter("", (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap13 = atmosphereConfig6.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
    }

    @Test
    public void test06078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06078");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig18.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.getproperties();
        atmosphereConfig20.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig20.properties = strMap44;
        atmosphereConfig20.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig20.setSupportSession(false);
        boolean boolean50 = atmosphereConfig20.isThrowExceptionOnCloned();
        boolean boolean51 = atmosphereConfig20.isSupportSession();
        boolean boolean52 = atmosphereConfig20.throwExceptionOnCloned;
        boolean boolean53 = atmosphereConfig20.throwExceptionOnCloned;
        java.lang.String str55 = atmosphereConfig20.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.sessionTimeoutRemovalAllowed;
        boolean boolean59 = atmosphereConfig56.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig20.populate(atmosphereConfig56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig18.populate(atmosphereConfig20);
        atmosphereConfig18.supportSession = true;
        atmosphereConfig18.destroy();
        java.lang.String str67 = atmosphereConfig18.getInitParameter("", "");
        boolean boolean68 = atmosphereConfig18.getuseServletContextParameters();
        boolean boolean69 = atmosphereConfig18.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test06079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06079");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        boolean boolean20 = atmosphereConfig19.useServletContextParameters;
        atmosphereConfig19.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig19.startUpHook;
        boolean boolean23 = atmosphereConfig19.isSupportSession();
        boolean boolean24 = atmosphereConfig19.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig19.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList25);
        boolean boolean27 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06080");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        int int8 = atmosphereConfig0.getInitParameter("", 0);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.getshutdownHooks();
        java.lang.Class<?> wildcardClass10 = atmosphereConfig0.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test06081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06081");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig4.destroy();
        org.slf4j.Logger logger11 = atmosphereConfig4.getlogger();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(logger11);
    }

    @Test
    public void test06082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06082");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig12.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig12.setframework(atmosphereFramework21);
        boolean boolean23 = atmosphereConfig12.getuseServletContextParameters();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig12.getproperties();
        atmosphereConfig0.properties = strMap24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig26.setframework(atmosphereFramework27);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30, startupHookArray29);
        atmosphereConfig26.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30);
        atmosphereConfig26.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig26.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig26.startupHook(startupHook36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig37.setproperties(strMap45);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig37.properties;
        atmosphereConfig0.setproperties(strMap47);
        java.lang.String str51 = atmosphereConfig0.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig0.startUpHook;
        java.lang.String str55 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(startupHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
    }

    @Test
    public void test06083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06083");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        boolean boolean14 = atmosphereConfig13.supportSession;
        boolean boolean15 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        boolean boolean16 = atmosphereConfig13.getuseServletContextParameters();
        boolean boolean17 = atmosphereConfig13.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig13.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList20;
        int int24 = atmosphereConfig0.getInitParameter("hi!", 32);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        boolean boolean27 = atmosphereConfig0.useServletContextParameters;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test06084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06084");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig18.shutdownHooks;
        java.lang.String str43 = atmosphereConfig18.getInitParameter("hi!", "");
        org.slf4j.Logger logger44 = atmosphereConfig18.getlogger();
        atmosphereConfig18.throwExceptionOnCloned = true;
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig18.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        boolean boolean55 = atmosphereConfig54.supportSession;
        boolean boolean56 = atmosphereConfig54.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig58.destroy();
        boolean boolean60 = atmosphereConfig58.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig58.shutdownHook(shutdownHook61);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig58.getAtmosphereHandlerConfig();
        atmosphereConfig57.atmosphereHandlerConfig = atmosphereHandlerConfigList63;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig65.destroy();
        boolean boolean67 = atmosphereConfig65.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray68 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList69, shutdownHookArray68);
        atmosphereConfig65.shutdownHooks = shutdownHookList69;
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig65.getproperties();
        atmosphereConfig57.setproperties(strMap72);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig74.destroy();
        boolean boolean76 = atmosphereConfig74.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray77 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList78, shutdownHookArray77);
        atmosphereConfig74.shutdownHooks = shutdownHookList78;
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = atmosphereConfig74.getproperties();
        atmosphereConfig57.properties = strMap81;
        atmosphereConfig54.setproperties(strMap81);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList84 = atmosphereConfig54.getshutdownHooks();
        boolean boolean85 = atmosphereConfig54.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = atmosphereConfig18.populate(atmosphereConfig54);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext87 = atmosphereConfig18.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(logger44);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(shutdownHookList84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig86);
    }

    @Test
    public void test06085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06085");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        atmosphereConfig16.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        atmosphereConfig20.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig16.populate(atmosphereConfig20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig26.getAtmosphereHandlerConfig();
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList31;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig25.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34);
        atmosphereConfig16.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig16.setframework(atmosphereFramework38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig16.properties;
        atmosphereConfig4.setproperties(strMap40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig42.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig42.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig42.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig42.framework = atmosphereFramework60;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        boolean boolean64 = atmosphereConfig62.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig62.shutdownHook(shutdownHook65);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig66.startupHook(startupHook67);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig66.properties;
        atmosphereConfig42.properties = strMap69;
        atmosphereConfig4.properties = strMap69;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = atmosphereConfig4.startUpHook;
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(startupHookList72);
    }

    @Test
    public void test06086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06086");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        java.lang.Class<?> wildcardClass7 = atmosphereConfig6.getClass();
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test06087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06087");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig15.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.startUpHook;
        boolean boolean19 = atmosphereConfig15.isSessionTimeoutRemovalAllowed();
        atmosphereConfig15.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig15.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig15.startupHook(startupHook22);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig15.getshutdownHooks();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
    }

    @Test
    public void test06088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06088");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig23.properties = strMap31;
        atmosphereConfig18.setproperties(strMap31);
        java.lang.String str36 = atmosphereConfig18.getInitParameter("", "hi!");
        java.lang.String str39 = atmosphereConfig18.getInitParameter("", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test06089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06089");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig15.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.startUpHook;
        atmosphereConfig15.destroy();
        boolean boolean20 = atmosphereConfig15.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig15.getframework();
        int int24 = atmosphereConfig15.getInitParameter("", (-1));
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig25.getAtmosphereHandlerConfig();
        boolean boolean31 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig25.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33);
        java.lang.String str38 = atmosphereConfig25.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig25.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig25.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig25.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig46.startupHook(startupHook47);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig46.properties;
        org.slf4j.Logger logger50 = atmosphereConfig46.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig51.shutdownHook(shutdownHook54);
        atmosphereConfig51.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig58.destroy();
        boolean boolean60 = atmosphereConfig58.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig58.shutdownHook(shutdownHook61);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig58.getAtmosphereHandlerConfig();
        atmosphereConfig51.atmosphereHandlerConfig = atmosphereHandlerConfigList63;
        atmosphereConfig51.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig51.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig51.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = null;
        atmosphereConfig51.framework = atmosphereFramework69;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig46.populate(atmosphereConfig51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig72.destroy();
        boolean boolean74 = atmosphereConfig72.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig72.shutdownHook(shutdownHook75);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList77 = atmosphereConfig72.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = atmosphereConfig72.shutdownHooks;
        atmosphereConfig46.setshutdownHooks(shutdownHookList78);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = atmosphereConfig25.populate(atmosphereConfig46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig15.populate(atmosphereConfig46);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework82 = null;
        atmosphereConfig15.framework = atmosphereFramework82;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(logger50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList77);
        org.junit.Assert.assertNotNull(shutdownHookList78);
        org.junit.Assert.assertNotNull(atmosphereConfig80);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
    }

    @Test
    public void test06090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06090");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        boolean boolean8 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig10.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.startupHook(startupHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig10.startUpHook;
        boolean boolean16 = atmosphereConfig10.supportSession;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06091");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        atmosphereConfig18.destroy();
        java.lang.String str40 = atmosphereConfig18.getInitParameter("", "");
        atmosphereConfig18.supportSession = true;
        atmosphereConfig18.destroy();
        atmosphereConfig18.setThrowExceptionOnCloned(true);
        atmosphereConfig18.destroy();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test06092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06092");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.framework;
        atmosphereConfig4.supportSession = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(atmosphereFramework9);
    }

    @Test
    public void test06093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06093");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList3 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test06094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06094");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        boolean boolean25 = atmosphereConfig11.throwExceptionOnCloned;
        java.lang.String str28 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig29.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig29.atmosphereHandlerConfig;
        boolean boolean46 = atmosphereConfig29.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        atmosphereConfig29.shutdownHooks = shutdownHookList55;
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig11);
        atmosphereConfig60.setThrowExceptionOnCloned(true);
        java.lang.String str65 = atmosphereConfig60.getInitParameter("hi!", "");
        atmosphereConfig60.setSessionTimeoutRemovalAllowed(false);
        org.slf4j.Logger logger68 = atmosphereConfig60.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList69 = atmosphereConfig60.getstartUpHook();
        atmosphereConfig60.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(logger68);
        org.junit.Assert.assertNotNull(startupHookList69);
    }

    @Test
    public void test06095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06095");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setuseServletContextParameters(true);
        int int8 = atmosphereConfig0.getInitParameter("", 0);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        org.slf4j.Logger logger12 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(logger12);
    }

    @Test
    public void test06096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06096");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        atmosphereConfig18.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray53 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList54, shutdownHookArray53);
        atmosphereConfig50.shutdownHooks = shutdownHookList54;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig50.getproperties();
        atmosphereConfig42.setproperties(strMap57);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig42.startupHook(startupHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        boolean boolean64 = atmosphereConfig62.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig62.shutdownHook(shutdownHook65);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig62.getAtmosphereHandlerConfig();
        atmosphereConfig61.atmosphereHandlerConfig = atmosphereHandlerConfigList67;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig69.destroy();
        boolean boolean71 = atmosphereConfig69.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray72 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList73, shutdownHookArray72);
        atmosphereConfig69.shutdownHooks = shutdownHookList73;
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig69.getproperties();
        atmosphereConfig61.setproperties(strMap76);
        atmosphereConfig60.setproperties(strMap76);
        int int81 = atmosphereConfig60.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig60.startupHook(startupHook82);
        atmosphereConfig83.setThrowExceptionOnCloned(false);
        atmosphereConfig83.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig83.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = atmosphereConfig18.populate(atmosphereConfig83);
        atmosphereConfig18.destroy();
        boolean boolean90 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework91 = atmosphereConfig18.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook92 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig93 = atmosphereConfig18.startupHook(startupHook92);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList94 = atmosphereConfig93.getAtmosphereHandlerConfig();
        boolean boolean95 = atmosphereConfig93.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertNotNull(atmosphereConfig88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(atmosphereFramework91);
        org.junit.Assert.assertNotNull(atmosphereConfig93);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test06097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06097");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig18.shutdownHooks;
        java.lang.String str43 = atmosphereConfig18.getInitParameter("hi!", "");
        org.slf4j.Logger logger44 = atmosphereConfig18.getlogger();
        atmosphereConfig18.throwExceptionOnCloned = true;
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig18.properties();
        boolean boolean50 = atmosphereConfig18.isSupportSession();
        int int53 = atmosphereConfig18.getInitParameter("hi!", (int) '4');
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig58.startUpHook;
        boolean boolean60 = atmosphereConfig58.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig58.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        boolean boolean64 = atmosphereConfig62.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig62.shutdownHook(shutdownHook65);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig66.startupHook(startupHook67);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = atmosphereConfig68.getshutdownHooks();
        atmosphereConfig58.setshutdownHooks(shutdownHookList69);
        java.lang.String str72 = atmosphereConfig58.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList73 = atmosphereConfig58.startUpHook;
        atmosphereConfig18.setstartUpHook(startupHookList73);
        java.lang.String str77 = atmosphereConfig18.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework78 = null;
        atmosphereConfig18.setframework(atmosphereFramework78);
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = atmosphereConfig18.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = null;
        atmosphereConfig18.framework = atmosphereFramework81;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(logger44);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(shutdownHookList69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(startupHookList73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(strMap80);
    }

    @Test
    public void test06098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06098");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        int int45 = atmosphereConfig41.getInitParameter("", (int) (short) 100);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig46.getAtmosphereHandlerConfig();
        boolean boolean52 = atmosphereConfig46.supportSession;
        atmosphereConfig46.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig46.shutdownHook(shutdownHook54);
        atmosphereConfig46.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig41.populate(atmosphereConfig46);
        boolean boolean59 = atmosphereConfig41.isSupportSession();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test06099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06099");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        atmosphereConfig41.sessionTimeoutRemovalAllowed = false;
        boolean boolean44 = atmosphereConfig41.useServletContextParameters;
        boolean boolean45 = atmosphereConfig41.isThrowExceptionOnCloned();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test06100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06100");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.isSupportSession();
        java.lang.String str10 = atmosphereConfig4.getInitParameter("hi!", "");
        atmosphereConfig4.useServletContextParameters = false;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration13 = atmosphereConfig4.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test06101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06101");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig6.properties;
        boolean boolean8 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test06102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06102");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8, shutdownHookArray7);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig0.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig0.startUpHook;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory18 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(startupHookList17);
    }

    @Test
    public void test06103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06103");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8, shutdownHookArray7);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig16.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig16.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.populate(atmosphereConfig34);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig36.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig42.startupHook(startupHook43);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig42.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig42.getshutdownHooks();
        java.lang.String str49 = atmosphereConfig42.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig42.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig42.getproperties();
        atmosphereConfig36.setproperties(strMap51);
        atmosphereConfig36.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig36.properties;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(shutdownHookList46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test06104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06104");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.slf4j.Logger logger13 = atmosphereConfig0.getlogger();
        boolean boolean14 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig15.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig15.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig22.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        boolean boolean34 = atmosphereConfig33.supportSession;
        boolean boolean35 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig37.getAtmosphereHandlerConfig();
        atmosphereConfig36.atmosphereHandlerConfig = atmosphereHandlerConfigList42;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray47 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList48, shutdownHookArray47);
        atmosphereConfig44.shutdownHooks = shutdownHookList48;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig44.getproperties();
        atmosphereConfig36.setproperties(strMap51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.destroy();
        boolean boolean55 = atmosphereConfig53.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray56 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList57, shutdownHookArray56);
        atmosphereConfig53.shutdownHooks = shutdownHookList57;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig53.getproperties();
        atmosphereConfig36.properties = strMap60;
        atmosphereConfig33.setproperties(strMap60);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList63;
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList63;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig66.destroy();
        boolean boolean68 = atmosphereConfig66.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray69 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList70 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList70, startupHookArray69);
        atmosphereConfig66.startUpHook = startupHookList70;
        atmosphereConfig15.startUpHook = startupHookList70;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList74 = atmosphereConfig15.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList74);
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(startupHookArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shutdownHookList74);
    }

    @Test
    public void test06105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06105");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray9 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList10, shutdownHookArray9);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        boolean boolean21 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.shutdownHook(shutdownHook22);
        boolean boolean24 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig26.getAtmosphereHandlerConfig();
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList31;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList37, shutdownHookArray36);
        atmosphereConfig33.shutdownHooks = shutdownHookList37;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig33.getproperties();
        atmosphereConfig25.setproperties(strMap40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig42.shutdownHooks = shutdownHookList46;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig42.getproperties();
        atmosphereConfig25.properties = strMap49;
        atmosphereConfig25.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig25.setSupportSession(false);
        boolean boolean55 = atmosphereConfig25.isThrowExceptionOnCloned();
        boolean boolean56 = atmosphereConfig25.isSupportSession();
        boolean boolean57 = atmosphereConfig25.throwExceptionOnCloned;
        atmosphereConfig25.useServletContextParameters = false;
        atmosphereConfig25.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList62);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(shutdownHookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(shutdownHookList62);
    }

    @Test
    public void test06106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06106");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.framework = atmosphereFramework9;
        boolean boolean11 = atmosphereConfig8.useServletContextParameters;
        atmosphereConfig8.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig8.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26, startupHookArray25);
        atmosphereConfig15.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig15.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        boolean boolean33 = atmosphereConfig31.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig31.getAtmosphereHandlerConfig();
        atmosphereConfig30.atmosphereHandlerConfig = atmosphereHandlerConfigList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig30.setproperties(strMap45);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig30.startupHook(startupHook47);
        boolean boolean49 = atmosphereConfig48.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig48.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        boolean boolean54 = atmosphereConfig51.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig51.startUpHook;
        atmosphereConfig48.setstartUpHook(startupHookList55);
        atmosphereConfig15.startUpHook = startupHookList55;
        boolean boolean58 = atmosphereConfig15.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig59.shutdownHook(shutdownHook62);
        atmosphereConfig59.setuseServletContextParameters(false);
        atmosphereConfig59.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig59.getstartUpHook();
        boolean boolean69 = atmosphereConfig59.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig70.destroy();
        boolean boolean72 = atmosphereConfig70.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig70.shutdownHook(shutdownHook73);
        boolean boolean75 = atmosphereConfig74.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig74.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig74.properties;
        atmosphereConfig74.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig74.shutdownHook(shutdownHook80);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig81.properties;
        atmosphereConfig59.properties = strMap82;
        atmosphereConfig15.properties = strMap82;
        atmosphereConfig8.setproperties(strMap82);
        boolean boolean86 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        atmosphereConfig8.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(startupHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(startupHookList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test06107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06107");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        boolean boolean26 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        atmosphereConfig29.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList34, startupHookArray33);
        atmosphereConfig29.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList34);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        atmosphereConfig38.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        atmosphereConfig42.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig38.populate(atmosphereConfig42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig51.startupHook(startupHook52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig58.startupHook(startupHook59);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig60.getstartUpHook();
        atmosphereConfig51.setstartUpHook(startupHookList61);
        atmosphereConfig46.startUpHook = startupHookList61;
        boolean boolean64 = atmosphereConfig46.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig0.populate(atmosphereConfig46);
        atmosphereConfig65.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig65.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig69.destroy();
        boolean boolean71 = atmosphereConfig69.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig69.shutdownHook(shutdownHook72);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = atmosphereConfig69.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList75 = atmosphereConfig69.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList76 = atmosphereConfig69.shutdownHooks;
        boolean boolean77 = atmosphereConfig69.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig78.destroy();
        boolean boolean80 = atmosphereConfig78.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook81 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig78.shutdownHook(shutdownHook81);
        boolean boolean83 = atmosphereConfig82.supportSession;
        boolean boolean84 = atmosphereConfig82.isSessionTimeoutRemovalAllowed();
        boolean boolean85 = atmosphereConfig82.getuseServletContextParameters();
        boolean boolean86 = atmosphereConfig82.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook87 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = atmosphereConfig82.shutdownHook(shutdownHook87);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList89 = atmosphereConfig88.shutdownHooks;
        atmosphereConfig69.shutdownHooks = shutdownHookList89;
        int int93 = atmosphereConfig69.getInitParameter("hi!", 32);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList94 = atmosphereConfig69.atmosphereHandlerConfig;
        atmosphereConfig65.atmosphereHandlerConfig = atmosphereHandlerConfigList94;
        java.util.Map<java.lang.String, java.lang.Object> strMap96 = atmosphereConfig65.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework97 = null;
        atmosphereConfig65.framework = atmosphereFramework97;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList74);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList75);
        org.junit.Assert.assertNotNull(shutdownHookList76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig88);
        org.junit.Assert.assertNotNull(shutdownHookList89);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 32 + "'", int93 == 32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList94);
        org.junit.Assert.assertNotNull(strMap96);
    }

    @Test
    public void test06108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06108");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig10.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig0.framework = atmosphereFramework17;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
    }

    @Test
    public void test06109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06109");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig12.getproperties();
        atmosphereConfig11.setproperties(strMap19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        atmosphereConfig21.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig21.startupHook(startupHook35);
        atmosphereConfig21.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        atmosphereConfig21.framework = atmosphereFramework39;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig21.startUpHook;
        atmosphereConfig11.startUpHook = startupHookList41;
        atmosphereConfig11.setSupportSession(false);
        atmosphereConfig11.setuseServletContextParameters(true);
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(startupHookList41);
    }

    @Test
    public void test06110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06110");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig15.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.startUpHook;
        atmosphereConfig15.destroy();
        boolean boolean20 = atmosphereConfig15.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig15.getframework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig15.shutdownHook(shutdownHook22);
        boolean boolean24 = atmosphereConfig23.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig23.getshutdownHooks();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookList25);
    }

    @Test
    public void test06111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06111");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        boolean boolean5 = atmosphereConfig3.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig3.shutdownHooks = shutdownHookList7;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig3.getproperties();
        atmosphereConfig2.properties = strMap10;
        boolean boolean12 = atmosphereConfig2.useServletContextParameters;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig2.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig2.setframework(atmosphereFramework14);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig2.properties;
        atmosphereConfig2.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig2.properties();
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test06112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06112");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig7.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        boolean boolean19 = atmosphereConfig18.supportSession;
        boolean boolean20 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig29.shutdownHooks = shutdownHookList33;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig29.getproperties();
        atmosphereConfig21.setproperties(strMap36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig21.properties = strMap45;
        atmosphereConfig18.setproperties(strMap45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        java.lang.String str52 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean53 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean54 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test06113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06113");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.getproperties();
        atmosphereConfig22.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig22.startupHook(startupHook39);
        boolean boolean41 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig40.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig43.shutdownHooks;
        atmosphereConfig40.shutdownHooks = shutdownHookList49;
        atmosphereConfig0.shutdownHooks = shutdownHookList49;
        boolean boolean52 = atmosphereConfig0.useServletContextParameters;
        boolean boolean53 = atmosphereConfig0.useServletContextParameters;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test06114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06114");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList3 = atmosphereConfig2.getAtmosphereHandlerConfig();
        boolean boolean4 = atmosphereConfig2.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig2.setframework(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test06115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06115");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        int int9 = atmosphereConfig4.getInitParameter("", (int) (short) 10);
        java.lang.String str11 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig4.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig4.getstartUpHook();
        java.lang.String str16 = atmosphereConfig4.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig4.atmosphereHandlerConfig;
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider20 = atmosphereConfig4.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
    }

    @Test
    public void test06116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06116");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
    }

    @Test
    public void test06117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06117");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig17.getframework();
        atmosphereConfig17.throwExceptionOnCloned = false;
        boolean boolean21 = atmosphereConfig17.isThrowExceptionOnCloned();
        java.lang.String str23 = atmosphereConfig17.getInitParameter("hi!");
        java.lang.String str25 = atmosphereConfig17.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        boolean boolean31 = atmosphereConfig30.supportSession;
        boolean boolean32 = atmosphereConfig30.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig33.atmosphereHandlerConfig = atmosphereHandlerConfigList39;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig41.shutdownHooks = shutdownHookList45;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig41.getproperties();
        atmosphereConfig33.setproperties(strMap48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray53 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList54, shutdownHookArray53);
        atmosphereConfig50.shutdownHooks = shutdownHookList54;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig50.getproperties();
        atmosphereConfig33.properties = strMap57;
        atmosphereConfig30.setproperties(strMap57);
        atmosphereConfig30.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig63.destroy();
        boolean boolean65 = atmosphereConfig63.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig63.shutdownHook(shutdownHook66);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig63.getAtmosphereHandlerConfig();
        atmosphereConfig62.atmosphereHandlerConfig = atmosphereHandlerConfigList68;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig70.destroy();
        boolean boolean72 = atmosphereConfig70.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray73 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList74 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList74, shutdownHookArray73);
        atmosphereConfig70.shutdownHooks = shutdownHookList74;
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig70.getproperties();
        atmosphereConfig62.setproperties(strMap77);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook79 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = atmosphereConfig62.startupHook(startupHook79);
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = atmosphereConfig80.properties;
        atmosphereConfig30.setproperties(strMap81);
        atmosphereConfig17.properties = strMap81;
        atmosphereConfig0.setproperties(strMap81);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(atmosphereConfig80);
        org.junit.Assert.assertNotNull(strMap81);
    }

    @Test
    public void test06118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06118");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        int int8 = atmosphereConfig0.getInitParameter("", 0);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setuseServletContextParameters(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(startupHookList10);
    }

    @Test
    public void test06119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06119");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig15.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.startUpHook;
        atmosphereConfig15.destroy();
        boolean boolean20 = atmosphereConfig15.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig15.getframework();
        int int24 = atmosphereConfig15.getInitParameter("", (-1));
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig15.shutdownHook(shutdownHook25);
        boolean boolean27 = atmosphereConfig15.isSupportSession();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test06120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06120");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework();
        boolean boolean14 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        atmosphereConfig18.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig18.framework = atmosphereFramework23;
        boolean boolean25 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        atmosphereConfig18.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig18.shutdownHooks;
        atmosphereConfig15.shutdownHooks = shutdownHookList27;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig15.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig15.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.populate(atmosphereConfig15);
        java.lang.String str33 = atmosphereConfig0.getInitParameter("hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test06121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06121");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        atmosphereConfig8.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig8.startupHook(startupHook25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig27.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig35.shutdownHooks = shutdownHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig35.getproperties();
        atmosphereConfig27.setproperties(strMap42);
        atmosphereConfig26.setproperties(strMap42);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig26.shutdownHooks;
        int int48 = atmosphereConfig26.getInitParameter("", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig26.getproperties();
        boolean boolean50 = atmosphereConfig26.supportSession;
        atmosphereConfig26.sessionTimeoutRemovalAllowed = false;
        int int55 = atmosphereConfig26.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig0.populate(atmosphereConfig26);
        atmosphereConfig26.setSupportSession(true);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap59 = atmosphereConfig26.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig56);
    }

    @Test
    public void test06122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06122");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        boolean boolean25 = atmosphereConfig11.throwExceptionOnCloned;
        java.lang.String str28 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig29.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig29.atmosphereHandlerConfig;
        boolean boolean46 = atmosphereConfig29.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        atmosphereConfig29.shutdownHooks = shutdownHookList55;
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig11);
        atmosphereConfig60.setThrowExceptionOnCloned(true);
        java.lang.String str65 = atmosphereConfig60.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = atmosphereConfig60.framework();
        atmosphereConfig60.sessionTimeoutRemovalAllowed = true;
        boolean boolean69 = atmosphereConfig60.getuseServletContextParameters();
        java.lang.String str71 = atmosphereConfig60.getInitParameter("");
        boolean boolean72 = atmosphereConfig60.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework73 = null;
        atmosphereConfig60.framework = atmosphereFramework73;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(atmosphereFramework66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test06123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06123");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(atmosphereFramework8);
    }

    @Test
    public void test06124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06124");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.destroy();
        boolean boolean7 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList13, shutdownHookArray12);
        atmosphereConfig5.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList13);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList13);
        atmosphereConfig0.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.getframework();
        org.slf4j.Logger logger20 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        boolean boolean23 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean24 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test06125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06125");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        boolean boolean26 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.throwExceptionOnCloned = false;
        boolean boolean29 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig30.getAtmosphereHandlerConfig();
        boolean boolean36 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig30.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig0.populate(atmosphereConfig30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig30.startupHook(startupHook40);
        atmosphereConfig30.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig30.destroy();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
    }

    @Test
    public void test06126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06126");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str11 = atmosphereConfig4.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig4.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig4.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        boolean boolean16 = atmosphereConfig14.getuseServletContextParameters();
        boolean boolean17 = atmosphereConfig14.supportSession;
        int int20 = atmosphereConfig14.getInitParameter("", (int) (byte) 1);
        atmosphereConfig14.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test06127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06127");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties();
        atmosphereConfig0.setproperties(strMap16);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("", "");
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.slf4j.Logger logger23 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig0.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.shutdownHook(shutdownHook26);
        atmosphereConfig27.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        atmosphereConfig32.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig32.getAtmosphereHandlerConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig32.startupHook(startupHook39);
        atmosphereConfig32.setuseServletContextParameters(true);
        atmosphereConfig32.useServletContextParameters = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig32.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig32.getshutdownHooks();
        atmosphereConfig27.setshutdownHooks(shutdownHookList46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        atmosphereConfig48.setframework(atmosphereFramework49);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray51 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList52, startupHookArray51);
        atmosphereConfig48.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList52);
        atmosphereConfig48.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = atmosphereConfig48.framework();
        java.lang.String str60 = atmosphereConfig48.getInitParameter("", "");
        boolean boolean61 = atmosphereConfig48.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig48.atmosphereHandlerConfig;
        atmosphereConfig27.atmosphereHandlerConfig = atmosphereHandlerConfigList62;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(shutdownHookList46);
        org.junit.Assert.assertNotNull(startupHookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(atmosphereFramework57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
    }

    @Test
    public void test06128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06128");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig0.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig21.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.populate(atmosphereConfig21);
        boolean boolean33 = atmosphereConfig30.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig30.setframework(atmosphereFramework34);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig30.atmosphereHandlerConfig;
        boolean boolean37 = atmosphereConfig30.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        boolean boolean43 = atmosphereConfig42.supportSession;
        boolean boolean44 = atmosphereConfig42.isSessionTimeoutRemovalAllowed();
        boolean boolean45 = atmosphereConfig42.getuseServletContextParameters();
        boolean boolean46 = atmosphereConfig42.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig42.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig48.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig48.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = atmosphereConfig51.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.destroy();
        atmosphereConfig53.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig53.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = null;
        atmosphereConfig53.framework = atmosphereFramework58;
        boolean boolean60 = atmosphereConfig53.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig53.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig53.startupHook(startupHook62);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = atmosphereConfig53.getstartUpHook();
        atmosphereConfig51.startUpHook = startupHookList64;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig51.getproperties();
        atmosphereConfig30.setproperties(strMap66);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNull(atmosphereFramework52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(startupHookList64);
        org.junit.Assert.assertNotNull(strMap66);
    }

    @Test
    public void test06129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06129");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        boolean boolean25 = atmosphereConfig24.supportSession;
        atmosphereConfig24.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        boolean boolean33 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        int int36 = atmosphereConfig0.getInitParameter("", (int) (byte) 10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        boolean boolean42 = atmosphereConfig41.supportSession;
        boolean boolean43 = atmosphereConfig41.isSessionTimeoutRemovalAllowed();
        boolean boolean44 = atmosphereConfig41.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig41.properties();
        atmosphereConfig0.setproperties(strMap45);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig0.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig51.shutdownHook(shutdownHook54);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig51.getAtmosphereHandlerConfig();
        atmosphereConfig50.atmosphereHandlerConfig = atmosphereHandlerConfigList56;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig58.destroy();
        boolean boolean60 = atmosphereConfig58.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray61 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList62, shutdownHookArray61);
        atmosphereConfig58.shutdownHooks = shutdownHookList62;
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig58.getproperties();
        atmosphereConfig50.setproperties(strMap65);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig67.destroy();
        boolean boolean69 = atmosphereConfig67.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray70 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList71 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList71, shutdownHookArray70);
        atmosphereConfig67.shutdownHooks = shutdownHookList71;
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig67.getproperties();
        atmosphereConfig50.properties = strMap74;
        atmosphereConfig50.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig50.setSupportSession(false);
        boolean boolean80 = atmosphereConfig50.isThrowExceptionOnCloned();
        org.slf4j.Logger logger81 = atmosphereConfig50.getlogger();
        atmosphereConfig50.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework84 = null;
        atmosphereConfig50.setframework(atmosphereFramework84);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList86 = atmosphereConfig50.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList86);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(logger81);
        org.junit.Assert.assertNotNull(startupHookList86);
    }

    @Test
    public void test06130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06130");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        int int9 = atmosphereConfig4.getInitParameter("", (int) (short) 10);
        java.lang.String str11 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig4.startupHook(startupHook12);
        atmosphereConfig13.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig13.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig13.startUpHook;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext17 = atmosphereConfig13.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(startupHookList16);
    }

    @Test
    public void test06131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06131");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.slf4j.Logger logger31 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig0.framework();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertNull(atmosphereFramework32);
    }

    @Test
    public void test06132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06132");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig13.getAtmosphereHandlerConfig();
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig20.shutdownHooks = shutdownHookList24;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.getproperties();
        atmosphereConfig12.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig12.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig32.getAtmosphereHandlerConfig();
        atmosphereConfig31.atmosphereHandlerConfig = atmosphereHandlerConfigList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43, shutdownHookArray42);
        atmosphereConfig39.shutdownHooks = shutdownHookList43;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig39.getproperties();
        atmosphereConfig31.setproperties(strMap46);
        atmosphereConfig30.setproperties(strMap46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig30.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList49;
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(shutdownHookList49);
    }

    @Test
    public void test06133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06133");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.supportSession = true;
        boolean boolean6 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.slf4j.Logger logger7 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.startupHook(startupHook20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.properties;
        atmosphereConfig19.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig19.initComplete();
        java.lang.String str27 = atmosphereConfig19.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig8.populate(atmosphereConfig19);
        java.lang.String str30 = atmosphereConfig19.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig32.getproperties();
        org.slf4j.Logger logger40 = atmosphereConfig32.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig32.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig32.getframework();
        java.lang.String str44 = atmosphereConfig32.getInitParameter("hi!");
        boolean boolean45 = atmosphereConfig32.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig46.atmosphereHandlerConfig = atmosphereHandlerConfigList52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray57 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList58, shutdownHookArray57);
        atmosphereConfig54.shutdownHooks = shutdownHookList58;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig54.getproperties();
        atmosphereConfig46.setproperties(strMap61);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig46.startupHook(startupHook63);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig64.properties;
        atmosphereConfig32.properties = strMap65;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig32.getstartUpHook();
        boolean boolean68 = atmosphereConfig32.isSupportSession();
        boolean boolean71 = atmosphereConfig32.getInitParameter("", false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList72 = atmosphereConfig32.getAtmosphereHandlerConfig();
        atmosphereConfig31.atmosphereHandlerConfig = atmosphereHandlerConfigList72;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(logger40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNull(atmosphereFramework42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(startupHookList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList72);
    }

    @Test
    public void test06134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06134");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        boolean boolean34 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        boolean boolean39 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig36.startUpHook;
        atmosphereConfig33.setstartUpHook(startupHookList40);
        atmosphereConfig0.startUpHook = startupHookList40;
        boolean boolean43 = atmosphereConfig0.getuseServletContextParameters();
        java.lang.String str46 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
    }

    @Test
    public void test06135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06135");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray22 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList23, shutdownHookArray22);
        atmosphereConfig19.shutdownHooks = shutdownHookList23;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig19.getproperties();
        org.slf4j.Logger logger27 = atmosphereConfig19.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig19.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig19.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        boolean boolean33 = atmosphereConfig31.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig31.getAtmosphereHandlerConfig();
        boolean boolean37 = atmosphereConfig31.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig31.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39);
        java.lang.String str44 = atmosphereConfig31.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        atmosphereConfig31.framework = atmosphereFramework45;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig48.destroy();
        boolean boolean50 = atmosphereConfig48.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig48.shutdownHook(shutdownHook51);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig48.getAtmosphereHandlerConfig();
        atmosphereConfig47.atmosphereHandlerConfig = atmosphereHandlerConfigList53;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.destroy();
        boolean boolean57 = atmosphereConfig55.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray58 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList59, shutdownHookArray58);
        atmosphereConfig55.shutdownHooks = shutdownHookList59;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig55.getproperties();
        atmosphereConfig47.setproperties(strMap62);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig47.startupHook(startupHook64);
        boolean boolean66 = atmosphereConfig65.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig31.populate(atmosphereConfig65);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig67.getAtmosphereHandlerConfig();
        atmosphereConfig67.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig0.populate(atmosphereConfig67);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory72 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(logger27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
    }

    @Test
    public void test06136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06136");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        boolean boolean6 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig4.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig8.startupHook(startupHook9);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList11;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig0.startUpHook;
        boolean boolean18 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean19 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06137");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8, shutdownHookArray7);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig19.getAtmosphereHandlerConfig();
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30, shutdownHookArray29);
        atmosphereConfig26.shutdownHooks = shutdownHookList30;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig26.getproperties();
        atmosphereConfig18.setproperties(strMap33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig18.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig38.getAtmosphereHandlerConfig();
        atmosphereConfig37.atmosphereHandlerConfig = atmosphereHandlerConfigList43;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.destroy();
        boolean boolean47 = atmosphereConfig45.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList49, shutdownHookArray48);
        atmosphereConfig45.shutdownHooks = shutdownHookList49;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig45.getproperties();
        atmosphereConfig37.setproperties(strMap52);
        atmosphereConfig36.setproperties(strMap52);
        atmosphereConfig36.destroy();
        java.lang.String str58 = atmosphereConfig36.getInitParameter("", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = atmosphereConfig36.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList59);
        int int63 = atmosphereConfig0.getInitParameter("", (-1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(shutdownHookList59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test06138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06138");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        boolean boolean8 = atmosphereConfig6.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        boolean boolean11 = atmosphereConfig10.supportSession;
        boolean boolean12 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        boolean boolean13 = atmosphereConfig10.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig10.framework;
        boolean boolean15 = atmosphereConfig10.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        boolean boolean21 = atmosphereConfig16.isSessionTimeoutRemovalAllowed();
        atmosphereConfig16.initComplete();
        atmosphereConfig16.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = null;
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig16.startUpHook;
        atmosphereConfig10.startUpHook = startupHookList27;
        atmosphereConfig0.setstartUpHook(startupHookList27);
        atmosphereConfig0.destroy();
        java.lang.String str33 = atmosphereConfig0.getInitParameter("", "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
    }

    @Test
    public void test06139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06139");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        boolean boolean34 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        boolean boolean39 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig36.startUpHook;
        atmosphereConfig33.setstartUpHook(startupHookList40);
        atmosphereConfig0.startUpHook = startupHookList40;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig0.framework = atmosphereFramework44;
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
    }

    @Test
    public void test06140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06140");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig9.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig9.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.populate(atmosphereConfig9);
        java.lang.String str19 = atmosphereConfig17.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig17.getframework();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = atmosphereConfig17.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(atmosphereFramework20);
    }

    @Test
    public void test06141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06141");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = false;
        int int15 = atmosphereConfig0.getInitParameter("hi!", (int) (byte) 100);
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.getproperties();
        atmosphereConfig20.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig20.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig40.getAtmosphereHandlerConfig();
        atmosphereConfig39.atmosphereHandlerConfig = atmosphereHandlerConfigList45;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51, shutdownHookArray50);
        atmosphereConfig47.shutdownHooks = shutdownHookList51;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig47.getproperties();
        atmosphereConfig39.setproperties(strMap54);
        atmosphereConfig38.setproperties(strMap54);
        int int59 = atmosphereConfig38.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig38.startupHook(startupHook60);
        java.lang.String str63 = atmosphereConfig61.getInitParameter("hi!");
        atmosphereConfig61.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig66.destroy();
        boolean boolean68 = atmosphereConfig66.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig66.shutdownHook(shutdownHook69);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook71 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig70.startupHook(startupHook71);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework73 = atmosphereConfig72.getframework();
        org.slf4j.Logger logger74 = atmosphereConfig72.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig75.destroy();
        boolean boolean77 = atmosphereConfig75.supportSession;
        boolean boolean78 = atmosphereConfig75.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList79 = atmosphereConfig75.startUpHook;
        atmosphereConfig72.startUpHook = startupHookList79;
        atmosphereConfig61.startUpHook = startupHookList79;
        atmosphereConfig0.setstartUpHook(startupHookList79);
        boolean boolean83 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(shutdownHookList19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNull(atmosphereFramework73);
        org.junit.Assert.assertNotNull(logger74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(startupHookList79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test06142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06142");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        boolean boolean10 = atmosphereConfig4.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.startupHook(startupHook23);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.getstartUpHook();
        atmosphereConfig15.setstartUpHook(startupHookList25);
        atmosphereConfig4.setstartUpHook(startupHookList25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        atmosphereConfig28.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig28.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig28.framework = atmosphereFramework33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig35.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig37.properties = strMap45;
        atmosphereConfig28.properties = strMap45;
        boolean boolean48 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig50.getAtmosphereHandlerConfig();
        atmosphereConfig49.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray60 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList61, shutdownHookArray60);
        atmosphereConfig57.shutdownHooks = shutdownHookList61;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig57.getproperties();
        atmosphereConfig49.setproperties(strMap64);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig49.startupHook(startupHook66);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        atmosphereConfig49.framework = atmosphereFramework68;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig70.destroy();
        boolean boolean72 = atmosphereConfig70.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig70.shutdownHook(shutdownHook73);
        boolean boolean75 = atmosphereConfig74.supportSession;
        boolean boolean76 = atmosphereConfig74.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework77 = null;
        atmosphereConfig74.framework = atmosphereFramework77;
        java.lang.String str80 = atmosphereConfig74.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig81.destroy();
        boolean boolean83 = atmosphereConfig81.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook84 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig85 = atmosphereConfig81.shutdownHook(shutdownHook84);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook86 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig87 = atmosphereConfig85.startupHook(startupHook86);
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = atmosphereConfig85.properties;
        java.lang.String str90 = atmosphereConfig85.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = atmosphereConfig85.getproperties();
        atmosphereConfig74.properties = strMap91;
        atmosphereConfig49.properties = strMap91;
        atmosphereConfig28.setproperties(strMap91);
        atmosphereConfig4.setproperties(strMap91);
        boolean boolean96 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean97 = atmosphereConfig4.isThrowExceptionOnCloned();
        boolean boolean98 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig85);
        org.junit.Assert.assertNotNull(atmosphereConfig87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test06143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06143");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.supportSession = true;
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.startUpHook;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory13 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
    }

    @Test
    public void test06144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06144");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig18.startupHook(startupHook37);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig38.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig38.properties;
        atmosphereConfig38.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig38.getframework();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(atmosphereFramework43);
    }

    @Test
    public void test06145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06145");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig31.getproperties();
        atmosphereConfig0.properties = strMap32;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig34.setframework(atmosphereFramework35);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray37 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList38, startupHookArray37);
        atmosphereConfig34.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList38);
        atmosphereConfig34.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig34.framework();
        atmosphereConfig34.sessionTimeoutRemovalAllowed = true;
        java.lang.String str47 = atmosphereConfig34.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig48.destroy();
        boolean boolean50 = atmosphereConfig48.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig48.shutdownHook(shutdownHook51);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig52.startUpHook;
        boolean boolean54 = atmosphereConfig52.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig52.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig60.startupHook(startupHook61);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig62.getshutdownHooks();
        atmosphereConfig52.setshutdownHooks(shutdownHookList63);
        java.lang.String str66 = atmosphereConfig52.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig52.startUpHook;
        atmosphereConfig34.startUpHook = startupHookList67;
        atmosphereConfig0.setstartUpHook(startupHookList67);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(startupHookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(startupHookList67);
    }

    @Test
    public void test06146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06146");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        java.lang.String str43 = atmosphereConfig41.getInitParameter("hi!");
        atmosphereConfig41.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig50.startupHook(startupHook51);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = atmosphereConfig52.getframework();
        org.slf4j.Logger logger54 = atmosphereConfig52.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.destroy();
        boolean boolean57 = atmosphereConfig55.supportSession;
        boolean boolean58 = atmosphereConfig55.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig55.startUpHook;
        atmosphereConfig52.startUpHook = startupHookList59;
        atmosphereConfig41.startUpHook = startupHookList59;
        boolean boolean62 = atmosphereConfig41.isThrowExceptionOnCloned();
        atmosphereConfig41.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig41.getAtmosphereHandlerConfig();
        atmosphereConfig41.setuseServletContextParameters(false);
        boolean boolean68 = atmosphereConfig41.getuseServletContextParameters();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNull(atmosphereFramework53);
        org.junit.Assert.assertNotNull(logger54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test06147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06147");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        org.slf4j.Logger logger8 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        atmosphereConfig9.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        atmosphereConfig9.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig9.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig9.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig9.framework = atmosphereFramework27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig4.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig30.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig30.shutdownHooks;
        atmosphereConfig4.setshutdownHooks(shutdownHookList36);
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(shutdownHookList40);
    }

    @Test
    public void test06148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06148");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        atmosphereConfig8.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList29, shutdownHookArray28);
        atmosphereConfig25.shutdownHooks = shutdownHookList29;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig25.getproperties();
        atmosphereConfig8.properties = strMap32;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig8.startupHook(startupHook34);
        atmosphereConfig35.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig38.getAtmosphereHandlerConfig();
        atmosphereConfig37.atmosphereHandlerConfig = atmosphereHandlerConfigList43;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.destroy();
        boolean boolean47 = atmosphereConfig45.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList49, shutdownHookArray48);
        atmosphereConfig45.shutdownHooks = shutdownHookList49;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig45.getproperties();
        atmosphereConfig37.setproperties(strMap52);
        boolean boolean56 = atmosphereConfig37.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig57.shutdownHook(shutdownHook60);
        boolean boolean62 = atmosphereConfig61.supportSession;
        atmosphereConfig61.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray65 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList66 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList66, startupHookArray65);
        atmosphereConfig61.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList66);
        atmosphereConfig37.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList66);
        atmosphereConfig35.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList66);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList66);
        boolean boolean72 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig75.destroy();
        atmosphereConfig75.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig75.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework80 = null;
        atmosphereConfig75.framework = atmosphereFramework80;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook83 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig84 = atmosphereConfig82.shutdownHook(shutdownHook83);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig85 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig85.destroy();
        boolean boolean87 = atmosphereConfig85.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray88 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList89 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList89, shutdownHookArray88);
        atmosphereConfig85.shutdownHooks = shutdownHookList89;
        java.util.Map<java.lang.String, java.lang.Object> strMap92 = atmosphereConfig85.getproperties();
        atmosphereConfig84.properties = strMap92;
        atmosphereConfig75.properties = strMap92;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework95 = atmosphereConfig75.framework();
        atmosphereConfig75.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig98 = atmosphereConfig0.populate(atmosphereConfig75);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster99 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(startupHookArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertNotNull(atmosphereConfig84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNull(atmosphereFramework95);
        org.junit.Assert.assertNotNull(atmosphereConfig98);
    }

    @Test
    public void test06149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06149");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties();
        atmosphereConfig0.setproperties(strMap16);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("", "");
        atmosphereConfig0.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig24.getAtmosphereHandlerConfig();
        atmosphereConfig23.atmosphereHandlerConfig = atmosphereHandlerConfigList29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        boolean boolean33 = atmosphereConfig31.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray34 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList35, shutdownHookArray34);
        atmosphereConfig31.shutdownHooks = shutdownHookList35;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig31.getproperties();
        atmosphereConfig23.setproperties(strMap38);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig23.startupHook(startupHook40);
        boolean boolean42 = atmosphereConfig41.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        boolean boolean47 = atmosphereConfig44.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig44.startUpHook;
        atmosphereConfig41.setstartUpHook(startupHookList48);
        atmosphereConfig0.setstartUpHook(startupHookList48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig51.shutdownHook(shutdownHook54);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig55.startupHook(startupHook56);
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig55.properties;
        org.slf4j.Logger logger59 = atmosphereConfig55.getlogger();
        boolean boolean60 = atmosphereConfig55.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig0.populate(atmosphereConfig55);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = null;
        atmosphereConfig0.framework = atmosphereFramework62;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(logger59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
    }

    @Test
    public void test06150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06150");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean31 = atmosphereConfig0.isSupportSession();
        boolean boolean32 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.shutdownHook(shutdownHook35);
        atmosphereConfig36.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig36.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig36.shutdownHook(shutdownHook40);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
    }

    @Test
    public void test06151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06151");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig13 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
    }

    @Test
    public void test06152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06152");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig0.framework = atmosphereFramework18;
        boolean boolean20 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig0.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider22 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
    }

    @Test
    public void test06153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06153");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig31.getproperties();
        atmosphereConfig0.properties = strMap32;
        atmosphereConfig0.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.startupHook(startupHook36);
        org.slf4j.Logger logger38 = atmosphereConfig37.getlogger();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = atmosphereConfig37.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(logger38);
    }

    @Test
    public void test06154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06154");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        boolean boolean3 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
    }

    @Test
    public void test06155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06155");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str37 = atmosphereConfig4.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = null;
        atmosphereConfig4.startUpHook = startupHookList38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        boolean boolean46 = atmosphereConfig44.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig44.startUpHook;
        atmosphereConfig4.startUpHook = startupHookList47;
        atmosphereConfig4.setuseServletContextParameters(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(startupHookList47);
    }

    @Test
    public void test06156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06156");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.destroy();
        boolean boolean7 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList10;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList10;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig19.getframework();
        atmosphereConfig19.throwExceptionOnCloned = false;
        boolean boolean23 = atmosphereConfig19.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig19.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList24);
        boolean boolean26 = atmosphereConfig0.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test06157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06157");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray9 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList10, shutdownHookArray9);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean14 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean15 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean16 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(shutdownHookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06158");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.supportSession = true;
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.getproperties();
        boolean boolean15 = atmosphereConfig0.getInitParameter("hi!", true);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
    }

    @Test
    public void test06159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06159");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str11 = atmosphereConfig4.getInitParameter("hi!", "hi!");
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig4.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig4.getframework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory16 = atmosphereConfig4.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNull(atmosphereFramework15);
    }

    @Test
    public void test06160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06160");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig6.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig6.atmosphereHandlerConfig;
        java.lang.String str11 = atmosphereConfig6.getInitParameter("hi!", "");
        boolean boolean12 = atmosphereConfig6.supportSession;
        org.slf4j.Logger logger13 = atmosphereConfig6.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig6.shutdownHook(shutdownHook14);
        atmosphereConfig6.sessionTimeoutRemovalAllowed = false;
        boolean boolean18 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06161");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig9.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig15.properties();
        atmosphereConfig0.setproperties(strMap23);
        boolean boolean27 = atmosphereConfig0.getInitParameter("hi!", true);
        boolean boolean28 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory32 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
    }

    @Test
    public void test06162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06162");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        int int23 = atmosphereConfig18.getInitParameter("hi!", (-1));
        int int26 = atmosphereConfig18.getInitParameter("hi!", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        atmosphereConfig27.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig27.framework();
        atmosphereConfig27.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig27.startUpHook;
        atmosphereConfig18.setstartUpHook(startupHookList34);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig18.getproperties();
        atmosphereConfig0.setproperties(strMap36);
        boolean boolean38 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test06163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06163");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean13 = atmosphereConfig0.getInitParameter("", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test06164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06164");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig16.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.getproperties();
        atmosphereConfig15.properties = strMap31;
        atmosphereConfig15.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig15.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig15.startupHook(startupHook36);
        boolean boolean40 = atmosphereConfig37.getInitParameter("", true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory41 = atmosphereConfig37.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test06165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06165");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig4.setframework(atmosphereFramework6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        atmosphereConfig8.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig8.startupHook(startupHook25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig27.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig35.shutdownHooks = shutdownHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig35.getproperties();
        atmosphereConfig27.setproperties(strMap42);
        atmosphereConfig26.setproperties(strMap42);
        atmosphereConfig4.properties = strMap42;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig4.shutdownHook(shutdownHook46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig48.destroy();
        boolean boolean50 = atmosphereConfig48.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig48.shutdownHook(shutdownHook51);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig52.startupHook(startupHook53);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig54.getframework();
        atmosphereConfig54.throwExceptionOnCloned = false;
        boolean boolean58 = atmosphereConfig54.isThrowExceptionOnCloned();
        java.lang.String str60 = atmosphereConfig54.getInitParameter("hi!");
        java.lang.String str62 = atmosphereConfig54.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig47.populate(atmosphereConfig54);
        boolean boolean66 = atmosphereConfig63.getInitParameter("", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNull(atmosphereFramework55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test06166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06166");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(shutdownHookList9);
    }

    @Test
    public void test06167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06167");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig16.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.getproperties();
        atmosphereConfig15.properties = strMap31;
        atmosphereConfig15.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig15.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig15.startupHook(startupHook36);
        boolean boolean38 = atmosphereConfig15.isThrowExceptionOnCloned();
        atmosphereConfig15.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = null;
        atmosphereConfig15.setshutdownHooks(shutdownHookList41);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        atmosphereConfig15.setframework(atmosphereFramework43);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig15.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig50.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig50.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig50.getproperties();
        atmosphereConfig15.setproperties(strMap54);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(strMap54);
    }

    @Test
    public void test06168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06168");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig16.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.getproperties();
        atmosphereConfig15.properties = strMap31;
        atmosphereConfig15.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig15.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig15.startupHook(startupHook36);
        boolean boolean38 = atmosphereConfig37.useServletContextParameters;
        boolean boolean39 = atmosphereConfig37.getuseServletContextParameters();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig37.properties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test06169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06169");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig9.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig16.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        boolean boolean28 = atmosphereConfig27.supportSession;
        boolean boolean29 = atmosphereConfig27.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        boolean boolean33 = atmosphereConfig31.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig31.getAtmosphereHandlerConfig();
        atmosphereConfig30.atmosphereHandlerConfig = atmosphereHandlerConfigList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig30.setproperties(strMap45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51, shutdownHookArray50);
        atmosphereConfig47.shutdownHooks = shutdownHookList51;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig47.getproperties();
        atmosphereConfig30.properties = strMap54;
        atmosphereConfig27.setproperties(strMap54);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig27.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig0.startupHook(startupHook61);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
    }

    @Test
    public void test06170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06170");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig4.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig4.framework = atmosphereFramework8;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig4.framework = atmosphereFramework10;
        boolean boolean14 = atmosphereConfig4.getInitParameter("", true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test06171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06171");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        boolean boolean8 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.shutdownHook(shutdownHook9);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        java.lang.String str14 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig4.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig16.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig16.framework = atmosphereFramework28;
        boolean boolean30 = atmosphereConfig16.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        atmosphereConfig31.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig31.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig31.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig31.getstartUpHook();
        atmosphereConfig16.setstartUpHook(startupHookList38);
        atmosphereConfig4.startUpHook = startupHookList38;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig4.setframework(atmosphereFramework41);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory43 = atmosphereConfig4.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(startupHookList38);
    }

    @Test
    public void test06172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06172");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        boolean boolean14 = atmosphereConfig13.supportSession;
        boolean boolean15 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        boolean boolean16 = atmosphereConfig13.getuseServletContextParameters();
        boolean boolean17 = atmosphereConfig13.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig13.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        boolean boolean27 = atmosphereConfig26.supportSession;
        boolean boolean28 = atmosphereConfig26.isSessionTimeoutRemovalAllowed();
        boolean boolean29 = atmosphereConfig26.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig26.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig26.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = null;
        atmosphereConfig26.setframework(atmosphereFramework32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig34.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig34.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
    }

    @Test
    public void test06173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06173");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        atmosphereConfig41.setThrowExceptionOnCloned(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = atmosphereConfig41.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
    }

    @Test
    public void test06174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06174");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.shutdownHooks;
        boolean boolean7 = atmosphereConfig4.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        boolean boolean11 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        java.lang.String str13 = atmosphereConfig8.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig15.getAtmosphereHandlerConfig();
        atmosphereConfig14.atmosphereHandlerConfig = atmosphereHandlerConfigList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig22.shutdownHooks = shutdownHookList26;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.getproperties();
        atmosphereConfig14.setproperties(strMap29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig14.startupHook(startupHook31);
        org.slf4j.Logger logger33 = atmosphereConfig32.getlogger();
        atmosphereConfig32.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig8.populate(atmosphereConfig32);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig8.getshutdownHooks();
        atmosphereConfig4.shutdownHooks = shutdownHookList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig43.startupHook(startupHook44);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig45.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig45.atmosphereHandlerConfig;
        java.lang.String str50 = atmosphereConfig45.getInitParameter("hi!", "");
        boolean boolean51 = atmosphereConfig45.supportSession;
        org.slf4j.Logger logger52 = atmosphereConfig45.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig45.shutdownHook(shutdownHook53);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig54.getproperties();
        atmosphereConfig4.setproperties(strMap55);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration57 = atmosphereConfig4.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(logger33);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(logger52);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test06175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06175");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework;
        boolean boolean10 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = null;
        atmosphereConfig0.setstartUpHook(startupHookList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap13 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test06176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06176");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.lang.String str13 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        boolean boolean20 = atmosphereConfig18.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig18.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.startupHook(startupHook27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig28.getshutdownHooks();
        atmosphereConfig18.setshutdownHooks(shutdownHookList29);
        java.lang.String str32 = atmosphereConfig18.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig18.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList33;
        atmosphereConfig0.destroy();
        int int38 = atmosphereConfig0.getInitParameter("", (int) (byte) -1);
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test06177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06177");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig16.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.getproperties();
        atmosphereConfig15.properties = strMap31;
        atmosphereConfig15.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig15.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig15.startupHook(startupHook36);
        boolean boolean38 = atmosphereConfig37.supportSession;
        atmosphereConfig37.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test06178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06178");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig18.properties;
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        boolean boolean27 = atmosphereConfig26.supportSession;
        boolean boolean28 = atmosphereConfig26.isSessionTimeoutRemovalAllowed();
        boolean boolean29 = atmosphereConfig26.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig26.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig26.getshutdownHooks();
        atmosphereConfig18.shutdownHooks = shutdownHookList31;
        java.lang.String str35 = atmosphereConfig18.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig18.setframework(atmosphereFramework36);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig18.startUpHook;
        java.lang.String str41 = atmosphereConfig18.getInitParameter("", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test06179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06179");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        int int40 = atmosphereConfig18.getInitParameter("", 0);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig18.setSupportSession(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig18.framework();
        java.lang.String str47 = atmosphereConfig18.getInitParameter("");
        java.lang.Class<?> wildcardClass48 = atmosphereConfig18.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test06180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06180");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        int int14 = atmosphereConfig0.getInitParameter("", (int) (byte) 10);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.shutdownHook(shutdownHook17);
        boolean boolean19 = atmosphereConfig18.isSupportSession();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06181");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        atmosphereConfig14.setproperties(strMap17);
        atmosphereConfig14.initComplete();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test06182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06182");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        int int9 = atmosphereConfig4.getInitParameter("", (int) (short) 10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig11.framework = atmosphereFramework18;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig11.shutdownHooks;
        atmosphereConfig4.setshutdownHooks(shutdownHookList20);
        atmosphereConfig4.initComplete();
        boolean boolean25 = atmosphereConfig4.getInitParameter("", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig4.getproperties();
        atmosphereConfig4.useServletContextParameters = false;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test06183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06183");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.getstartUpHook();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig16.properties = strMap24;
        atmosphereConfig16.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig16.properties;
        atmosphereConfig11.properties = strMap28;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig11.setframework(atmosphereFramework30);
        atmosphereConfig11.destroy();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test06184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06184");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setuseServletContextParameters(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(shutdownHookList17);
    }

    @Test
    public void test06185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06185");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.getframework();
        boolean boolean9 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean10 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        atmosphereConfig0.properties = strMap12;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
    }

    @Test
    public void test06186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06186");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        atmosphereConfig18.destroy();
        boolean boolean38 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        atmosphereConfig39.setSupportSession(true);
        boolean boolean45 = atmosphereConfig39.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig39.atmosphereHandlerConfig;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList46;
        atmosphereConfig18.supportSession = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory50 = atmosphereConfig18.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
    }

    @Test
    public void test06187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06187");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig13.getAtmosphereHandlerConfig();
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig20.shutdownHooks = shutdownHookList24;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.getproperties();
        atmosphereConfig12.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig29.shutdownHooks = shutdownHookList33;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig29.getproperties();
        atmosphereConfig12.properties = strMap36;
        atmosphereConfig12.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig0.populate(atmosphereConfig12);
        atmosphereConfig40.setuseServletContextParameters(true);
        atmosphereConfig40.setuseServletContextParameters(false);
        atmosphereConfig40.useServletContextParameters = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig40.getproperties();
        atmosphereConfig40.setThrowExceptionOnCloned(true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster50 = atmosphereConfig40.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test06188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06188");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig18.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.getproperties();
        atmosphereConfig20.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig20.properties = strMap44;
        atmosphereConfig20.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig20.setSupportSession(false);
        boolean boolean50 = atmosphereConfig20.isThrowExceptionOnCloned();
        boolean boolean51 = atmosphereConfig20.isSupportSession();
        boolean boolean52 = atmosphereConfig20.throwExceptionOnCloned;
        boolean boolean53 = atmosphereConfig20.throwExceptionOnCloned;
        java.lang.String str55 = atmosphereConfig20.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.sessionTimeoutRemovalAllowed;
        boolean boolean59 = atmosphereConfig56.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig20.populate(atmosphereConfig56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig18.populate(atmosphereConfig20);
        atmosphereConfig18.supportSession = true;
        atmosphereConfig18.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig18.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig18.startupHook(startupHook66);
        java.lang.Class<?> wildcardClass68 = atmosphereConfig67.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test06189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06189");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        boolean boolean25 = atmosphereConfig24.supportSession;
        atmosphereConfig24.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig33 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test06190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06190");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        boolean boolean6 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig4.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig8.startupHook(startupHook9);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList11;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        boolean boolean15 = atmosphereConfig14.isSupportSession();
        atmosphereConfig14.setSessionTimeoutRemovalAllowed(true);
        boolean boolean18 = atmosphereConfig14.throwExceptionOnCloned;
        atmosphereConfig14.throwExceptionOnCloned = true;
        java.lang.String str23 = atmosphereConfig14.getInitParameter("hi!", "hi!");
        int int26 = atmosphereConfig14.getInitParameter("", 10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
    }

    @Test
    public void test06191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06191");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList11, shutdownHookArray10);
        atmosphereConfig7.shutdownHooks = shutdownHookList11;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig7.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList22, shutdownHookArray21);
        atmosphereConfig18.shutdownHooks = shutdownHookList22;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig18.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig18.setframework(atmosphereFramework27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig18.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig18.getproperties();
        atmosphereConfig17.properties = strMap32;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig35.getAtmosphereHandlerConfig();
        atmosphereConfig34.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig42.shutdownHooks = shutdownHookList46;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig42.getproperties();
        atmosphereConfig34.setproperties(strMap49);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig34.startupHook(startupHook51);
        java.lang.String str54 = atmosphereConfig34.getInitParameter("");
        boolean boolean57 = atmosphereConfig34.getInitParameter("hi!", true);
        int int60 = atmosphereConfig34.getInitParameter("", (int) ' ');
        atmosphereConfig34.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = atmosphereConfig34.getshutdownHooks();
        atmosphereConfig17.setshutdownHooks(shutdownHookList62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 32 + "'", int60 == 32);
        org.junit.Assert.assertNotNull(shutdownHookList62);
    }

    @Test
    public void test06192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06192");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig9.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig9.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.populate(atmosphereConfig9);
        atmosphereConfig9.sessionTimeoutRemovalAllowed = false;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap20 = atmosphereConfig9.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
    }

    @Test
    public void test06193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06193");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean13 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig15.getAtmosphereHandlerConfig();
        atmosphereConfig14.atmosphereHandlerConfig = atmosphereHandlerConfigList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig22.shutdownHooks = shutdownHookList26;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.getproperties();
        atmosphereConfig14.setproperties(strMap29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig14.startupHook(startupHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig32.properties;
        atmosphereConfig0.properties = strMap33;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig0.getstartUpHook();
        boolean boolean36 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig0.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory38 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(shutdownHookList37);
    }

    @Test
    public void test06194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06194");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        boolean boolean12 = atmosphereConfig9.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig9.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig16.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        atmosphereConfig31.supportSession = false;
        boolean boolean35 = atmosphereConfig31.getuseServletContextParameters();
        atmosphereConfig31.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig31.properties;
        atmosphereConfig16.properties = strMap38;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig16.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig0.populate(atmosphereConfig16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig16.startupHook(startupHook42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig48.startupHook(startupHook49);
        boolean boolean51 = atmosphereConfig50.useServletContextParameters;
        atmosphereConfig50.initComplete();
        boolean boolean53 = atmosphereConfig50.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig16.populate(atmosphereConfig50);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory55 = atmosphereConfig16.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
    }

    @Test
    public void test06195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06195");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.properties;
        atmosphereConfig11.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig11.initComplete();
        java.lang.String str19 = atmosphereConfig11.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig0.populate(atmosphereConfig11);
        java.lang.String str22 = atmosphereConfig11.getInitParameter("hi!");
        atmosphereConfig11.supportSession = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test06196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06196");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str17 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean18 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        atmosphereConfig19.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig19.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig19.framework = atmosphereFramework24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig30.startupHook(startupHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig30.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig30.getshutdownHooks();
        atmosphereConfig19.shutdownHooks = shutdownHookList34;
        atmosphereConfig0.shutdownHooks = shutdownHookList34;
        boolean boolean37 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig39.getAtmosphereHandlerConfig();
        boolean boolean45 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray46 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList47, shutdownHookArray46);
        atmosphereConfig39.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList47);
        java.lang.String str52 = atmosphereConfig39.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = atmosphereConfig39.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig39.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList54;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework53);
        org.junit.Assert.assertNotNull(startupHookList54);
    }

    @Test
    public void test06197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06197");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        int int8 = atmosphereConfig0.getInitParameter("", 0);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        boolean boolean11 = atmosphereConfig0.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.supportSession = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookList12);
    }

    @Test
    public void test06198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06198");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        boolean boolean6 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig4.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig8.startupHook(startupHook9);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList11;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        atmosphereConfig15.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        boolean boolean29 = atmosphereConfig15.throwExceptionOnCloned;
        java.lang.String str32 = atmosphereConfig15.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        atmosphereConfig33.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig40.getAtmosphereHandlerConfig();
        atmosphereConfig33.atmosphereHandlerConfig = atmosphereHandlerConfigList45;
        atmosphereConfig33.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig33.atmosphereHandlerConfig;
        boolean boolean50 = atmosphereConfig33.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig51.shutdownHook(shutdownHook54);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig51.getAtmosphereHandlerConfig();
        boolean boolean57 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray58 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList59, shutdownHookArray58);
        atmosphereConfig51.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList59);
        atmosphereConfig33.shutdownHooks = shutdownHookList59;
        atmosphereConfig15.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList59);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList59);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList66 = atmosphereConfig0.getstartUpHook();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext67 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(startupHookList66);
    }

    @Test
    public void test06199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06199");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        int int40 = atmosphereConfig18.getInitParameter("", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig18.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig18.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig18.startupHook(startupHook43);
        boolean boolean45 = atmosphereConfig18.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test06200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06200");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties();
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setuseServletContextParameters(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = null;
        atmosphereConfig14.setstartUpHook(startupHookList15);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
    }

    @Test
    public void test06201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06201");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        boolean boolean9 = atmosphereConfig8.useServletContextParameters;
        atmosphereConfig8.setSupportSession(true);
        atmosphereConfig8.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig8.properties;
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test06202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06202");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray9 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList10, startupHookArray9);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17, shutdownHookArray16);
        atmosphereConfig13.shutdownHooks = shutdownHookList17;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig13.getproperties();
        org.slf4j.Logger logger21 = atmosphereConfig13.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig13.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig13.getframework();
        atmosphereConfig13.supportSession = false;
        atmosphereConfig13.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig13.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.populate(atmosphereConfig29);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        atmosphereConfig33.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        atmosphereConfig37.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig33.populate(atmosphereConfig37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51, shutdownHookArray50);
        atmosphereConfig42.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51);
        atmosphereConfig33.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig33.properties();
        atmosphereConfig0.properties = strMap55;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(startupHookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(logger21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(shutdownHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test06203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06203");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean31 = atmosphereConfig0.isSupportSession();
        boolean boolean32 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean33 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig0.framework();
        atmosphereConfig0.setuseServletContextParameters(false);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory37 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(atmosphereFramework34);
    }

    @Test
    public void test06204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06204");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean31 = atmosphereConfig0.isSupportSession();
        boolean boolean34 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig0.framework = atmosphereFramework37;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test06205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06205");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.setframework(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.startupHook(startupHook19);
        boolean boolean21 = atmosphereConfig20.useServletContextParameters;
        atmosphereConfig20.initComplete();
        boolean boolean23 = atmosphereConfig20.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        boolean boolean27 = atmosphereConfig24.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig24.startUpHook;
        atmosphereConfig20.startUpHook = startupHookList28;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig20.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig20.atmosphereHandlerConfig;
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList31;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig13.framework();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNull(atmosphereFramework33);
    }

    @Test
    public void test06206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06206");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        boolean boolean16 = atmosphereConfig14.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig14.shutdownHooks;
        atmosphereConfig4.setshutdownHooks(shutdownHookList17);
        boolean boolean19 = atmosphereConfig4.isSupportSession();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06207");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray14 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList15, shutdownHookArray14);
        atmosphereConfig11.shutdownHooks = shutdownHookList15;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig11.getproperties();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22, startupHookArray21);
        atmosphereConfig11.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList25;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig0.framework();
        boolean boolean28 = atmosphereConfig0.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        atmosphereConfig30.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig37.getAtmosphereHandlerConfig();
        atmosphereConfig30.atmosphereHandlerConfig = atmosphereHandlerConfigList42;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig30.startupHook(startupHook44);
        atmosphereConfig30.setSupportSession(true);
        boolean boolean48 = atmosphereConfig30.supportSession;
        boolean boolean49 = atmosphereConfig30.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray53 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList54, shutdownHookArray53);
        atmosphereConfig50.shutdownHooks = shutdownHookList54;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig50.getproperties();
        org.slf4j.Logger logger58 = atmosphereConfig50.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig50.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = atmosphereConfig50.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig50.startupHook(startupHook61);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig64.destroy();
        boolean boolean66 = atmosphereConfig64.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig64.shutdownHook(shutdownHook67);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList69 = atmosphereConfig64.getAtmosphereHandlerConfig();
        atmosphereConfig63.atmosphereHandlerConfig = atmosphereHandlerConfigList69;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig71.destroy();
        boolean boolean73 = atmosphereConfig71.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray74 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList75 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList75, shutdownHookArray74);
        atmosphereConfig71.shutdownHooks = shutdownHookList75;
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = atmosphereConfig71.getproperties();
        atmosphereConfig63.setproperties(strMap78);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig80.destroy();
        boolean boolean82 = atmosphereConfig80.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray83 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList84 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList84, shutdownHookArray83);
        atmosphereConfig80.shutdownHooks = shutdownHookList84;
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = atmosphereConfig80.getproperties();
        atmosphereConfig63.properties = strMap87;
        atmosphereConfig62.properties = strMap87;
        atmosphereConfig30.setproperties(strMap87);
        atmosphereConfig30.supportSession = false;
        java.lang.String str94 = atmosphereConfig30.getInitParameter("hi!");
        java.lang.String str97 = atmosphereConfig30.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList98 = atmosphereConfig30.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList98);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(logger58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNull(atmosphereFramework60);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "hi!" + "'", str97, "hi!");
        org.junit.Assert.assertNotNull(startupHookList98);
    }

    @Test
    public void test06208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06208");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig0.setframework(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig24.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig32.getproperties();
        atmosphereConfig24.setproperties(strMap39);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig24.startupHook(startupHook41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig44.getAtmosphereHandlerConfig();
        atmosphereConfig43.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig51.shutdownHooks = shutdownHookList55;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig51.getproperties();
        atmosphereConfig43.setproperties(strMap58);
        atmosphereConfig42.setproperties(strMap58);
        int int63 = atmosphereConfig42.getInitParameter("", 100);
        atmosphereConfig42.useServletContextParameters = false;
        atmosphereConfig42.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig0.populate(atmosphereConfig42);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework74 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(shutdownHookList69);
        org.junit.Assert.assertNull(atmosphereFramework74);
    }

    @Test
    public void test06209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06209");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        atmosphereConfig9.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig9.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig25.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig25.properties();
        atmosphereConfig15.setproperties(strMap31);
        java.lang.String str35 = atmosphereConfig15.getInitParameter("", "");
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig15.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig15.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig15.getproperties();
        atmosphereConfig4.properties = strMap40;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = atmosphereConfig4.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test06210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06210");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean31 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        atmosphereConfig34.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig41.getAtmosphereHandlerConfig();
        atmosphereConfig34.atmosphereHandlerConfig = atmosphereHandlerConfigList46;
        atmosphereConfig34.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig34.atmosphereHandlerConfig;
        boolean boolean51 = atmosphereConfig34.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.destroy();
        boolean boolean54 = atmosphereConfig52.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig52.getAtmosphereHandlerConfig();
        boolean boolean58 = atmosphereConfig52.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray59 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList60, shutdownHookArray59);
        atmosphereConfig52.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList60);
        atmosphereConfig34.shutdownHooks = shutdownHookList60;
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList60);
        atmosphereConfig0.setSupportSession(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test06211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06211");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig6.useServletContextParameters;
        atmosphereConfig6.initComplete();
        boolean boolean9 = atmosphereConfig6.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.getshutdownHooks();
        boolean boolean11 = atmosphereConfig6.supportSession;
        atmosphereConfig6.setThrowExceptionOnCloned(true);
        int int16 = atmosphereConfig6.getInitParameter("", (int) (byte) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig6.properties;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext18 = atmosphereConfig6.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test06212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06212");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig0.getInitParameter("", true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test06213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06213");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig18.framework();
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        atmosphereConfig18.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(atmosphereFramework61);
    }

    @Test
    public void test06214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06214");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
    }

    @Test
    public void test06215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06215");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        boolean boolean6 = atmosphereConfig0.getInitParameter("hi!", true);
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean8 = atmosphereConfig0.supportSession;
        java.lang.Class<?> wildcardClass9 = atmosphereConfig0.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test06216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06216");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig0.setSupportSession(true);
        boolean boolean18 = atmosphereConfig0.supportSession;
        boolean boolean19 = atmosphereConfig0.getuseServletContextParameters();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig0.getproperties();
        atmosphereConfig0.supportSession = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test06217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06217");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig7.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        boolean boolean19 = atmosphereConfig18.supportSession;
        boolean boolean20 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig29.shutdownHooks = shutdownHookList33;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig29.getproperties();
        atmosphereConfig21.setproperties(strMap36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig21.properties = strMap45;
        atmosphereConfig18.setproperties(strMap45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList55, startupHookArray54);
        atmosphereConfig51.startUpHook = startupHookList55;
        atmosphereConfig0.startUpHook = startupHookList55;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.useServletContextParameters = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(startupHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shutdownHookList59);
        org.junit.Assert.assertNotNull(startupHookList60);
    }

    @Test
    public void test06218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06218");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig8.framework;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        boolean boolean17 = atmosphereConfig16.supportSession;
        atmosphereConfig16.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21, startupHookArray20);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig16.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        atmosphereConfig26.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig26.startupHook(startupHook40);
        atmosphereConfig41.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig48.startupHook(startupHook49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig51.shutdownHook(shutdownHook54);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig55.startupHook(startupHook56);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig57.getstartUpHook();
        atmosphereConfig48.setstartUpHook(startupHookList58);
        atmosphereConfig41.startUpHook = startupHookList58;
        atmosphereConfig25.startUpHook = startupHookList58;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = null;
        atmosphereConfig62.setframework(atmosphereFramework63);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray65 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList66 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList66, startupHookArray65);
        atmosphereConfig62.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList66);
        atmosphereConfig62.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = atmosphereConfig62.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig62.startupHook(startupHook72);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig74.destroy();
        boolean boolean76 = atmosphereConfig74.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray77 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList78, shutdownHookArray77);
        atmosphereConfig74.shutdownHooks = shutdownHookList78;
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = atmosphereConfig74.getproperties();
        atmosphereConfig73.setproperties(strMap81);
        boolean boolean83 = atmosphereConfig73.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook84 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig85 = atmosphereConfig73.startupHook(startupHook84);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig86.destroy();
        atmosphereConfig86.supportSession = false;
        boolean boolean90 = atmosphereConfig86.getuseServletContextParameters();
        atmosphereConfig86.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook93 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig94 = atmosphereConfig86.startupHook(startupHook93);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList95 = atmosphereConfig94.shutdownHooks;
        atmosphereConfig73.shutdownHooks = shutdownHookList95;
        atmosphereConfig25.setshutdownHooks(shutdownHookList95);
        atmosphereConfig11.shutdownHooks = shutdownHookList95;
        java.util.Map<java.lang.String, java.lang.Object> strMap99 = atmosphereConfig11.properties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertNotNull(startupHookArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(atmosphereFramework71);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig85);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig94);
        org.junit.Assert.assertNotNull(shutdownHookList95);
        org.junit.Assert.assertNotNull(strMap99);
    }

    @Test
    public void test06219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06219");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        boolean boolean10 = atmosphereConfig4.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.startupHook(startupHook23);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.getstartUpHook();
        atmosphereConfig15.setstartUpHook(startupHookList25);
        atmosphereConfig4.setstartUpHook(startupHookList25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        atmosphereConfig28.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig28.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig28.framework = atmosphereFramework33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig35.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig37.properties = strMap45;
        atmosphereConfig28.properties = strMap45;
        boolean boolean48 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig50.getAtmosphereHandlerConfig();
        atmosphereConfig49.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray60 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList61, shutdownHookArray60);
        atmosphereConfig57.shutdownHooks = shutdownHookList61;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig57.getproperties();
        atmosphereConfig49.setproperties(strMap64);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig49.startupHook(startupHook66);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        atmosphereConfig49.framework = atmosphereFramework68;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig70.destroy();
        boolean boolean72 = atmosphereConfig70.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig70.shutdownHook(shutdownHook73);
        boolean boolean75 = atmosphereConfig74.supportSession;
        boolean boolean76 = atmosphereConfig74.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework77 = null;
        atmosphereConfig74.framework = atmosphereFramework77;
        java.lang.String str80 = atmosphereConfig74.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig81.destroy();
        boolean boolean83 = atmosphereConfig81.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook84 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig85 = atmosphereConfig81.shutdownHook(shutdownHook84);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook86 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig87 = atmosphereConfig85.startupHook(startupHook86);
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = atmosphereConfig85.properties;
        java.lang.String str90 = atmosphereConfig85.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = atmosphereConfig85.getproperties();
        atmosphereConfig74.properties = strMap91;
        atmosphereConfig49.properties = strMap91;
        atmosphereConfig28.setproperties(strMap91);
        atmosphereConfig4.setproperties(strMap91);
        boolean boolean96 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap97 = atmosphereConfig4.properties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig85);
        org.junit.Assert.assertNotNull(atmosphereConfig87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(strMap97);
    }

    @Test
    public void test06220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06220");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        atmosphereConfig13.setproperties(strMap28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig13.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig32.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig40.shutdownHooks = shutdownHookList44;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig40.getproperties();
        atmosphereConfig32.setproperties(strMap47);
        atmosphereConfig31.setproperties(strMap47);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig31.shutdownHooks;
        int int53 = atmosphereConfig31.getInitParameter("", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig31.getproperties();
        atmosphereConfig0.setproperties(strMap54);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig0.shutdownHook(shutdownHook56);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(shutdownHookList60);
    }

    @Test
    public void test06221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06221");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = null;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList12);
        boolean boolean14 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean15 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig0.properties;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test06222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06222");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        boolean boolean42 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        boolean boolean43 = atmosphereConfig18.getuseServletContextParameters();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test06223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06223");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig4.populate(atmosphereConfig18);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.shutdownHook(shutdownHook21);
        atmosphereConfig20.throwExceptionOnCloned = false;
        boolean boolean25 = atmosphereConfig20.isSupportSession();
        atmosphereConfig20.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig33.properties();
        atmosphereConfig33.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig42.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig42.startUpHook;
        atmosphereConfig33.setstartUpHook(startupHookList46);
        atmosphereConfig28.setstartUpHook(startupHookList46);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig28.startupHook(startupHook49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig51.shutdownHook(shutdownHook54);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig55.startupHook(startupHook56);
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig55.properties;
        atmosphereConfig55.setThrowExceptionOnCloned(false);
        atmosphereConfig55.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig55.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig55.properties;
        atmosphereConfig28.properties = strMap64;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = atmosphereConfig28.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig20.populate(atmosphereConfig28);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration68 = atmosphereConfig20.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(atmosphereFramework66);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
    }

    @Test
    public void test06224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06224");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        boolean boolean24 = atmosphereConfig0.getInitParameter("hi!", false);
        atmosphereConfig0.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig0.setframework(atmosphereFramework28);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(shutdownHookList30);
    }

    @Test
    public void test06225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06225");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        atmosphereConfig0.setuseServletContextParameters(true);
        atmosphereConfig0.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig0.properties;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test06226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06226");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList13, shutdownHookArray12);
        atmosphereConfig9.shutdownHooks = shutdownHookList13;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig9.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig4.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig21 = atmosphereConfig4.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
    }

    @Test
    public void test06227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06227");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig12.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig12.supportSession;
        atmosphereConfig12.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.getproperties();
        atmosphereConfig20.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig20.properties = strMap44;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig20.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig51.getproperties();
        atmosphereConfig20.properties = strMap52;
        atmosphereConfig12.properties = strMap52;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig12.framework();
        boolean boolean56 = atmosphereConfig12.supportSession;
        boolean boolean57 = atmosphereConfig12.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig58.destroy();
        boolean boolean60 = atmosphereConfig58.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig58.shutdownHook(shutdownHook61);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = null;
        atmosphereConfig58.setstartUpHook(startupHookList63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig65.destroy();
        boolean boolean67 = atmosphereConfig65.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig65.shutdownHook(shutdownHook68);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList70 = atmosphereConfig69.startUpHook;
        atmosphereConfig58.setstartUpHook(startupHookList70);
        boolean boolean72 = atmosphereConfig58.isSessionTimeoutRemovalAllowed();
        boolean boolean73 = atmosphereConfig58.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig74.destroy();
        boolean boolean76 = atmosphereConfig74.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray77 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList78, shutdownHookArray77);
        atmosphereConfig74.shutdownHooks = shutdownHookList78;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = atmosphereConfig74.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig74.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig74.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList84 = atmosphereConfig74.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList85 = atmosphereConfig74.startUpHook;
        atmosphereConfig58.startUpHook = startupHookList85;
        atmosphereConfig12.startUpHook = startupHookList85;
        atmosphereConfig0.startUpHook = startupHookList85;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(atmosphereFramework55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(startupHookList70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(atmosphereFramework81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList84);
        org.junit.Assert.assertNotNull(startupHookList85);
    }

    @Test
    public void test06228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06228");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        java.lang.String str43 = atmosphereConfig41.getInitParameter("hi!");
        atmosphereConfig41.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig41.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig41.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig50.getAtmosphereHandlerConfig();
        atmosphereConfig49.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray60 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList61, shutdownHookArray60);
        atmosphereConfig57.shutdownHooks = shutdownHookList61;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig57.getproperties();
        atmosphereConfig49.setproperties(strMap64);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig49.startupHook(startupHook66);
        java.lang.String str69 = atmosphereConfig49.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig49.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = null;
        atmosphereConfig49.setframework(atmosphereFramework71);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig49.shutdownHook(shutdownHook73);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = atmosphereConfig74.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig74.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig41.populate(atmosphereConfig74);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
    }

    @Test
    public void test06229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06229");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig8.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig8.framework();
        boolean boolean11 = atmosphereConfig8.throwExceptionOnCloned;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig8.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
    }

    @Test
    public void test06230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06230");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        boolean boolean14 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.slf4j.Logger logger17 = atmosphereConfig0.getlogger();
        boolean boolean18 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(startupHookList19);
    }

    @Test
    public void test06231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06231");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean6 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        boolean boolean12 = atmosphereConfig11.supportSession;
        boolean boolean13 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        boolean boolean14 = atmosphereConfig11.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig11.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.populate(atmosphereConfig11);
        java.lang.String str19 = atmosphereConfig11.getInitParameter("", "");
        boolean boolean20 = atmosphereConfig11.isSupportSession();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06232");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.destroy();
        boolean boolean20 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig0.framework = atmosphereFramework21;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06233");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig4.framework = atmosphereFramework7;
        java.lang.String str10 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig15.properties;
        java.lang.String str20 = atmosphereConfig15.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig15.getproperties();
        atmosphereConfig4.properties = strMap21;
        atmosphereConfig4.supportSession = false;
        java.lang.String str26 = atmosphereConfig4.getInitParameter("hi!");
        boolean boolean27 = atmosphereConfig4.throwExceptionOnCloned;
        atmosphereConfig4.destroy();
        int int31 = atmosphereConfig4.getInitParameter("hi!", 10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
    }

    @Test
    public void test06234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06234");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig6.getframework();
        atmosphereConfig6.throwExceptionOnCloned = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig6.atmosphereHandlerConfig;
        boolean boolean11 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        boolean boolean12 = atmosphereConfig6.isSupportSession();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06235");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        atmosphereConfig4.setSupportSession(true);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
    }

    @Test
    public void test06236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06236");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNull(atmosphereFramework26);
    }

    @Test
    public void test06237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06237");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        atmosphereConfig9.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig9.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList13);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        boolean boolean17 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06238");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        boolean boolean9 = atmosphereConfig4.getInitParameter("", false);
        boolean boolean10 = atmosphereConfig4.getuseServletContextParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory11 = atmosphereConfig4.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test06239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06239");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.slf4j.Logger logger19 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig24.startupHook(startupHook25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig24.properties;
        atmosphereConfig24.sessionTimeoutRemovalAllowed = false;
        boolean boolean30 = atmosphereConfig24.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig24.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList31);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig0.framework = atmosphereFramework33;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.setuseServletContextParameters(true);
        boolean boolean38 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test06240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06240");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties;
        atmosphereConfig18.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig18.properties;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster23 = atmosphereConfig18.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test06241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06241");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        boolean boolean14 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        boolean boolean17 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean18 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test06242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06242");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        atmosphereConfig4.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray8 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList9, startupHookArray8);
        atmosphereConfig4.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList9);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig4.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        atmosphereConfig14.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig14.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig14.startupHook(startupHook28);
        atmosphereConfig29.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig36.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig43.startupHook(startupHook44);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.getstartUpHook();
        atmosphereConfig36.setstartUpHook(startupHookList46);
        atmosphereConfig29.startUpHook = startupHookList46;
        atmosphereConfig13.startUpHook = startupHookList46;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = atmosphereConfig13.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig13.setframework(atmosphereFramework51);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext53 = atmosphereConfig13.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNull(atmosphereFramework50);
    }

    @Test
    public void test06243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06243");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        boolean boolean20 = atmosphereConfig18.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig18.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.startupHook(startupHook27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig28.getshutdownHooks();
        atmosphereConfig18.setshutdownHooks(shutdownHookList29);
        java.lang.String str32 = atmosphereConfig18.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig18.startUpHook;
        atmosphereConfig18.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig18.startupHook(startupHook36);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig37.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList38);
        boolean boolean40 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig0.framework();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(shutdownHookList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(atmosphereFramework41);
    }

    @Test
    public void test06244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06244");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = null;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.shutdownHook(shutdownHook9);
        boolean boolean11 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        org.slf4j.Logger logger13 = atmosphereConfig10.getlogger();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(logger13);
    }

    @Test
    public void test06245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06245");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        boolean boolean25 = atmosphereConfig11.throwExceptionOnCloned;
        java.lang.String str28 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig29.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig29.atmosphereHandlerConfig;
        boolean boolean46 = atmosphereConfig29.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        atmosphereConfig29.shutdownHooks = shutdownHookList55;
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig11);
        atmosphereConfig60.supportSession = true;
        atmosphereConfig60.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = atmosphereConfig60.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig60.getproperties();
        atmosphereConfig60.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig60.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNull(atmosphereFramework65);
        org.junit.Assert.assertNotNull(strMap66);
    }

    @Test
    public void test06246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06246");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig6.shutdownHook(shutdownHook7);
        boolean boolean9 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        atmosphereConfig8.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig8.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        atmosphereConfig17.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22, startupHookArray21);
        atmosphereConfig17.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22);
        atmosphereConfig14.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22);
        java.lang.String str28 = atmosphereConfig14.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig14.atmosphereHandlerConfig;
        boolean boolean30 = atmosphereConfig14.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList31;
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(startupHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
    }

    @Test
    public void test06247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06247");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig0.setframework(atmosphereFramework12);
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(startupHookList11);
    }

    @Test
    public void test06248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06248");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        java.lang.String str12 = atmosphereConfig0.getInitParameter("", "");
        atmosphereConfig0.throwExceptionOnCloned = true;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean19 = atmosphereConfig0.getInitParameter("hi!", true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test06249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06249");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        boolean boolean5 = atmosphereConfig3.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig3.shutdownHooks = shutdownHookList7;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig3.getproperties();
        atmosphereConfig2.properties = strMap10;
        boolean boolean12 = atmosphereConfig2.useServletContextParameters;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig2.atmosphereHandlerConfig;
        atmosphereConfig2.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig2.framework = atmosphereFramework16;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig2.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
    }

    @Test
    public void test06250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06250");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig0.setframework(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig0.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        atmosphereConfig26.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        boolean boolean40 = atmosphereConfig26.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig0.populate(atmosphereConfig26);
        boolean boolean42 = atmosphereConfig41.isThrowExceptionOnCloned();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster43 = atmosphereConfig41.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test06251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06251");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig0.framework;
        boolean boolean18 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        atmosphereConfig19.setuseServletContextParameters(false);
        atmosphereConfig19.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig19.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig19.properties();
        atmosphereConfig0.properties = strMap30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        atmosphereConfig32.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        atmosphereConfig36.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig32.populate(atmosphereConfig36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig42.getAtmosphereHandlerConfig();
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray52 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList53, shutdownHookArray52);
        atmosphereConfig49.shutdownHooks = shutdownHookList53;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig49.getproperties();
        atmosphereConfig41.setproperties(strMap56);
        boolean boolean60 = atmosphereConfig41.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig32.populate(atmosphereConfig41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig0.populate(atmosphereConfig61);
        atmosphereConfig62.sessionTimeoutRemovalAllowed = false;
        boolean boolean65 = atmosphereConfig62.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test06252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06252");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str17 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean18 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig0.getframework();
        java.lang.String str26 = atmosphereConfig0.getInitParameter("", "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test06253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06253");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
    }

    @Test
    public void test06254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06254");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray14 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList15, shutdownHookArray14);
        atmosphereConfig11.shutdownHooks = shutdownHookList15;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig11.getproperties();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22, startupHookArray21);
        atmosphereConfig11.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList25;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig0.framework();
        boolean boolean28 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean29 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
    }

    @Test
    public void test06255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06255");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig6.useServletContextParameters;
        atmosphereConfig6.initComplete();
        atmosphereConfig6.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig6.startUpHook;
        java.lang.String str12 = atmosphereConfig6.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig6.getshutdownHooks();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(shutdownHookList13);
    }

    @Test
    public void test06256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06256");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        boolean boolean5 = atmosphereConfig3.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig3.shutdownHooks = shutdownHookList7;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig3.getproperties();
        atmosphereConfig2.properties = strMap10;
        boolean boolean12 = atmosphereConfig2.useServletContextParameters;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig2.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig2.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig2.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig2.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        atmosphereConfig17.setuseServletContextParameters(false);
        atmosphereConfig17.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig17.supportSession = true;
        boolean boolean28 = atmosphereConfig17.throwExceptionOnCloned;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig2.atmosphereHandlerConfig = atmosphereHandlerConfigList29;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig2.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig2.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig2.framework();
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNull(atmosphereFramework34);
    }

    @Test
    public void test06257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06257");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig0.setframework(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig0.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        atmosphereConfig26.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        boolean boolean40 = atmosphereConfig26.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig0.populate(atmosphereConfig26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean43 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test06258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06258");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig18.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig42.getAtmosphereHandlerConfig();
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray52 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList53, shutdownHookArray52);
        atmosphereConfig49.shutdownHooks = shutdownHookList53;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig49.getproperties();
        atmosphereConfig41.setproperties(strMap56);
        boolean boolean60 = atmosphereConfig41.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig61.shutdownHook(shutdownHook64);
        boolean boolean66 = atmosphereConfig65.supportSession;
        atmosphereConfig65.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray69 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList70 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList70, startupHookArray69);
        atmosphereConfig65.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList70);
        atmosphereConfig41.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList70);
        atmosphereConfig18.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList70);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework75 = null;
        atmosphereConfig18.setframework(atmosphereFramework75);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory77 = atmosphereConfig18.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(startupHookArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test06259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06259");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig4.populate(atmosphereConfig18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig20.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean23 = atmosphereConfig20.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig20.setframework(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        atmosphereConfig26.supportSession = false;
        atmosphereConfig26.throwExceptionOnCloned = true;
        boolean boolean32 = atmosphereConfig26.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        boolean boolean38 = atmosphereConfig37.supportSession;
        boolean boolean39 = atmosphereConfig37.isSessionTimeoutRemovalAllowed();
        boolean boolean40 = atmosphereConfig37.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig37.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig26.populate(atmosphereConfig37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig43.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig43.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig51.shutdownHooks = shutdownHookList55;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig51.getproperties();
        atmosphereConfig51.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray61 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList62, startupHookArray61);
        atmosphereConfig51.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList62);
        boolean boolean65 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = null;
        atmosphereConfig51.setframework(atmosphereFramework66);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig68.destroy();
        boolean boolean70 = atmosphereConfig68.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook71 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig68.shutdownHook(shutdownHook71);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig72.startupHook(startupHook73);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = atmosphereConfig72.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList76 = atmosphereConfig72.getshutdownHooks();
        java.lang.String str79 = atmosphereConfig72.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList80 = atmosphereConfig72.getshutdownHooks();
        atmosphereConfig51.shutdownHooks = shutdownHookList80;
        atmosphereConfig43.setshutdownHooks(shutdownHookList80);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework83 = atmosphereConfig43.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray84 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList85 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList85, shutdownHookArray84);
        atmosphereConfig43.shutdownHooks = shutdownHookList85;
        atmosphereConfig42.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList85);
        atmosphereConfig20.shutdownHooks = shutdownHookList85;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(startupHookArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(shutdownHookList76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList80);
        org.junit.Assert.assertNull(atmosphereFramework83);
        org.junit.Assert.assertNotNull(shutdownHookArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test06260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06260");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = false;
        int int15 = atmosphereConfig0.getInitParameter("hi!", (int) (byte) 100);
        atmosphereConfig0.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookList19);
    }

    @Test
    public void test06261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06261");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        boolean boolean10 = atmosphereConfig4.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        atmosphereConfig11.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig11.getstartUpHook();
        boolean boolean21 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        boolean boolean22 = atmosphereConfig11.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig11.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig4.populate(atmosphereConfig11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig4.framework = atmosphereFramework25;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster27 = atmosphereConfig4.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
    }

    @Test
    public void test06262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06262");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig15.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.startupHook(startupHook23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.startupHook(startupHook30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.getstartUpHook();
        atmosphereConfig22.setstartUpHook(startupHookList32);
        atmosphereConfig15.startUpHook = startupHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig15.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray39 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList40, shutdownHookArray39);
        atmosphereConfig36.shutdownHooks = shutdownHookList40;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig36.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig36.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        atmosphereConfig36.setframework(atmosphereFramework45);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig36.getshutdownHooks();
        atmosphereConfig15.setshutdownHooks(shutdownHookList47);
        org.slf4j.Logger logger49 = atmosphereConfig15.getlogger();
        java.lang.String str52 = atmosphereConfig15.getInitParameter("", "");
        boolean boolean53 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(logger49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test06263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06263");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig4.framework();
        java.lang.String str11 = atmosphereConfig4.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        atmosphereConfig12.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig19.getAtmosphereHandlerConfig();
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig12.startupHook(startupHook26);
        atmosphereConfig12.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        boolean boolean32 = atmosphereConfig29.isSessionTimeoutRemovalAllowed();
        java.lang.String str34 = atmosphereConfig29.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig35.shutdownHooks = shutdownHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig35.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig35.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList45, startupHookArray44);
        atmosphereConfig35.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList45);
        atmosphereConfig29.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList45);
        atmosphereConfig12.startUpHook = startupHookList45;
        atmosphereConfig4.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList45);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory51 = atmosphereConfig4.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(startupHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test06264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06264");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.getproperties();
        atmosphereConfig22.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43, shutdownHookArray42);
        atmosphereConfig39.shutdownHooks = shutdownHookList43;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig39.getproperties();
        atmosphereConfig22.properties = strMap46;
        atmosphereConfig22.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig22.setSupportSession(false);
        boolean boolean52 = atmosphereConfig22.isThrowExceptionOnCloned();
        org.slf4j.Logger logger53 = atmosphereConfig22.getlogger();
        atmosphereConfig22.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        atmosphereConfig22.setframework(atmosphereFramework56);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig22.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList58);
        org.slf4j.Logger logger60 = atmosphereConfig0.getlogger();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster61 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(logger53);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertNotNull(logger60);
    }

    @Test
    public void test06265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06265");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.framework();
        boolean boolean9 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        atmosphereConfig10.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.getstartUpHook();
        org.slf4j.Logger logger15 = atmosphereConfig10.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        atmosphereConfig16.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21, startupHookArray20);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig24.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig32.getproperties();
        atmosphereConfig24.setproperties(strMap39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig41.shutdownHooks = shutdownHookList45;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig41.getproperties();
        atmosphereConfig24.properties = strMap48;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig24.startupHook(startupHook50);
        atmosphereConfig51.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig54.getAtmosphereHandlerConfig();
        atmosphereConfig53.atmosphereHandlerConfig = atmosphereHandlerConfigList59;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray64 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList65, shutdownHookArray64);
        atmosphereConfig61.shutdownHooks = shutdownHookList65;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig61.getproperties();
        atmosphereConfig53.setproperties(strMap68);
        boolean boolean72 = atmosphereConfig53.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        boolean boolean75 = atmosphereConfig73.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig73.shutdownHook(shutdownHook76);
        boolean boolean78 = atmosphereConfig77.supportSession;
        atmosphereConfig77.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray81 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList82 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList82, startupHookArray81);
        atmosphereConfig77.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList82);
        atmosphereConfig53.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList82);
        atmosphereConfig51.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList82);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList82);
        atmosphereConfig10.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList82);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig89 = atmosphereConfig0.populate(atmosphereConfig10);
        int int92 = atmosphereConfig10.getInitParameter("", (int) (short) -1);
        boolean boolean93 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertNotNull(startupHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(startupHookArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test06266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06266");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray64 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList65, shutdownHookArray64);
        atmosphereConfig61.shutdownHooks = shutdownHookList65;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig61.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList69 = atmosphereConfig61.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = null;
        atmosphereConfig61.setframework(atmosphereFramework70);
        boolean boolean72 = atmosphereConfig61.getuseServletContextParameters();
        atmosphereConfig61.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig18.populate(atmosphereConfig61);
        java.lang.String str78 = atmosphereConfig18.getInitParameter("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap79 = atmosphereConfig18.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
    }

    @Test
    public void test06267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06267");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8, shutdownHookArray7);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig16.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig16.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.populate(atmosphereConfig34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = null;
        atmosphereConfig34.startUpHook = startupHookList37;
        org.slf4j.Logger logger39 = atmosphereConfig34.getlogger();
        boolean boolean40 = atmosphereConfig34.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig34.framework;
        boolean boolean42 = atmosphereConfig34.isThrowExceptionOnCloned();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(logger39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test06268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06268");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        boolean boolean34 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        boolean boolean39 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig36.startUpHook;
        atmosphereConfig33.setstartUpHook(startupHookList40);
        atmosphereConfig0.startUpHook = startupHookList40;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory46 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
    }

    @Test
    public void test06269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06269");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig4.setSupportSession(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test06270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06270");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig0.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig21.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.populate(atmosphereConfig21);
        boolean boolean33 = atmosphereConfig30.getInitParameter("hi!", true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory34 = atmosphereConfig30.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test06271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06271");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean30 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig0.framework;
        java.lang.String str37 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig39.getAtmosphereHandlerConfig();
        atmosphereConfig38.atmosphereHandlerConfig = atmosphereHandlerConfigList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray49 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50, shutdownHookArray49);
        atmosphereConfig46.shutdownHooks = shutdownHookList50;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig46.getproperties();
        atmosphereConfig38.setproperties(strMap53);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig38.startupHook(startupHook55);
        org.slf4j.Logger logger57 = atmosphereConfig56.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig58.destroy();
        atmosphereConfig58.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        atmosphereConfig62.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig58.populate(atmosphereConfig62);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig67.destroy();
        boolean boolean69 = atmosphereConfig67.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig67.shutdownHook(shutdownHook70);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig71.startupHook(startupHook72);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig74.destroy();
        boolean boolean76 = atmosphereConfig74.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook77 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig74.shutdownHook(shutdownHook77);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook79 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = atmosphereConfig78.startupHook(startupHook79);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList81 = atmosphereConfig80.getstartUpHook();
        atmosphereConfig71.setstartUpHook(startupHookList81);
        atmosphereConfig66.startUpHook = startupHookList81;
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = atmosphereConfig66.properties;
        atmosphereConfig56.properties = strMap84;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList86 = atmosphereConfig56.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework87 = null;
        atmosphereConfig56.framework = atmosphereFramework87;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework89 = null;
        atmosphereConfig56.framework = atmosphereFramework89;
        atmosphereConfig56.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList92 = atmosphereConfig56.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration94 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(logger57);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(atmosphereConfig80);
        org.junit.Assert.assertNotNull(startupHookList81);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList86);
        org.junit.Assert.assertNotNull(shutdownHookList92);
    }

    @Test
    public void test06272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06272");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.lang.String str13 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig0.framework;
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNull(atmosphereFramework15);
    }

    @Test
    public void test06273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06273");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig0.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig21.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.populate(atmosphereConfig21);
        boolean boolean31 = atmosphereConfig21.sessionTimeoutRemovalAllowed;
        atmosphereConfig21.setThrowExceptionOnCloned(true);
        atmosphereConfig21.initComplete();
        atmosphereConfig21.setSupportSession(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test06274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06274");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str37 = atmosphereConfig4.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = null;
        atmosphereConfig4.startUpHook = startupHookList38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        boolean boolean46 = atmosphereConfig44.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig44.startUpHook;
        atmosphereConfig4.startUpHook = startupHookList47;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig4.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig51.shutdownHook(shutdownHook54);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig51.getAtmosphereHandlerConfig();
        atmosphereConfig50.atmosphereHandlerConfig = atmosphereHandlerConfigList56;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig58.destroy();
        boolean boolean60 = atmosphereConfig58.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray61 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList62, shutdownHookArray61);
        atmosphereConfig58.shutdownHooks = shutdownHookList62;
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig58.getproperties();
        atmosphereConfig50.setproperties(strMap65);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig50.startupHook(startupHook67);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig70.destroy();
        boolean boolean72 = atmosphereConfig70.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig70.shutdownHook(shutdownHook73);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList75 = atmosphereConfig70.getAtmosphereHandlerConfig();
        atmosphereConfig69.atmosphereHandlerConfig = atmosphereHandlerConfigList75;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig77.destroy();
        boolean boolean79 = atmosphereConfig77.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray80 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList81, shutdownHookArray80);
        atmosphereConfig77.shutdownHooks = shutdownHookList81;
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = atmosphereConfig77.getproperties();
        atmosphereConfig69.setproperties(strMap84);
        atmosphereConfig68.setproperties(strMap84);
        int int89 = atmosphereConfig68.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook90 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig91 = atmosphereConfig68.startupHook(startupHook90);
        atmosphereConfig91.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList94 = atmosphereConfig91.getstartUpHook();
        atmosphereConfig91.setuseServletContextParameters(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap97 = atmosphereConfig91.properties();
        atmosphereConfig4.properties = strMap97;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 100 + "'", int89 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig91);
        org.junit.Assert.assertNotNull(startupHookList94);
        org.junit.Assert.assertNotNull(strMap97);
    }

    @Test
    public void test06275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06275");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig0.framework = atmosphereFramework6;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig8 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test06276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06276");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        boolean boolean26 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig27.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig35.shutdownHooks = shutdownHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig35.getproperties();
        atmosphereConfig27.setproperties(strMap42);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig27.startupHook(startupHook44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig46.atmosphereHandlerConfig = atmosphereHandlerConfigList52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray57 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList58, shutdownHookArray57);
        atmosphereConfig54.shutdownHooks = shutdownHookList58;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig54.getproperties();
        atmosphereConfig46.setproperties(strMap61);
        atmosphereConfig45.setproperties(strMap61);
        atmosphereConfig45.destroy();
        java.lang.String str67 = atmosphereConfig45.getInitParameter("", "");
        atmosphereConfig45.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig0.populate(atmosphereConfig45);
        boolean boolean73 = atmosphereConfig45.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig74.shutdownHook(shutdownHook75);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig77.destroy();
        boolean boolean79 = atmosphereConfig77.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray80 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList81, shutdownHookArray80);
        atmosphereConfig77.shutdownHooks = shutdownHookList81;
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = atmosphereConfig77.getproperties();
        atmosphereConfig76.properties = strMap84;
        atmosphereConfig76.setSessionTimeoutRemovalAllowed(false);
        java.lang.String str89 = atmosphereConfig76.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList90 = atmosphereConfig76.getstartUpHook();
        atmosphereConfig45.startUpHook = startupHookList90;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList92 = atmosphereConfig45.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(startupHookList90);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList92);
    }

    @Test
    public void test06277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06277");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig0.framework = atmosphereFramework18;
        boolean boolean20 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        atmosphereConfig21.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig21.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig21.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig21.getproperties();
        atmosphereConfig0.properties = strMap27;
        boolean boolean29 = atmosphereConfig0.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig0.properties;
        // The following exception was thrown during execution in test generation
        try {
            atmosphereConfig0.destroy();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap32);
    }

    @Test
    public void test06278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06278");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList11, shutdownHookArray10);
        atmosphereConfig7.shutdownHooks = shutdownHookList11;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig7.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        atmosphereConfig0.initComplete();
        boolean boolean17 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig19.getAtmosphereHandlerConfig();
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30, shutdownHookArray29);
        atmosphereConfig26.shutdownHooks = shutdownHookList30;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig26.getproperties();
        atmosphereConfig18.setproperties(strMap33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig18.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig38.getAtmosphereHandlerConfig();
        atmosphereConfig37.atmosphereHandlerConfig = atmosphereHandlerConfigList43;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.destroy();
        boolean boolean47 = atmosphereConfig45.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList49, shutdownHookArray48);
        atmosphereConfig45.shutdownHooks = shutdownHookList49;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig45.getproperties();
        atmosphereConfig37.setproperties(strMap52);
        atmosphereConfig36.setproperties(strMap52);
        int int57 = atmosphereConfig36.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig36.startupHook(startupHook58);
        atmosphereConfig59.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig59.getstartUpHook();
        boolean boolean63 = atmosphereConfig59.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig59.shutdownHook(shutdownHook64);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = null;
        atmosphereConfig65.framework = atmosphereFramework66;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig0.populate(atmosphereConfig65);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList69 = atmosphereConfig68.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(startupHookList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList69);
    }

    @Test
    public void test06279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06279");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        atmosphereConfig18.useServletContextParameters = false;
        boolean boolean40 = atmosphereConfig18.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig18.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig18.getstartUpHook();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(startupHookList42);
    }

    @Test
    public void test06280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06280");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig4.setframework(atmosphereFramework6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        atmosphereConfig8.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig8.startupHook(startupHook25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig27.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig35.shutdownHooks = shutdownHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig35.getproperties();
        atmosphereConfig27.setproperties(strMap42);
        atmosphereConfig26.setproperties(strMap42);
        atmosphereConfig4.properties = strMap42;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig4.shutdownHook(shutdownHook46);
        boolean boolean48 = atmosphereConfig4.getuseServletContextParameters();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test06281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06281");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig4.framework;
        boolean boolean9 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06282");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig18.shutdownHooks;
        java.lang.String str43 = atmosphereConfig18.getInitParameter("hi!", "");
        org.slf4j.Logger logger44 = atmosphereConfig18.getlogger();
        atmosphereConfig18.throwExceptionOnCloned = true;
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig18.properties();
        boolean boolean50 = atmosphereConfig18.isSupportSession();
        int int53 = atmosphereConfig18.getInitParameter("hi!", (int) '4');
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig58.startUpHook;
        boolean boolean60 = atmosphereConfig58.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig58.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        boolean boolean64 = atmosphereConfig62.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig62.shutdownHook(shutdownHook65);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig66.startupHook(startupHook67);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = atmosphereConfig68.getshutdownHooks();
        atmosphereConfig58.setshutdownHooks(shutdownHookList69);
        java.lang.String str72 = atmosphereConfig58.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList73 = atmosphereConfig58.startUpHook;
        atmosphereConfig18.setstartUpHook(startupHookList73);
        java.lang.String str77 = atmosphereConfig18.getInitParameter("", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = atmosphereConfig18.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig79.destroy();
        boolean boolean81 = atmosphereConfig79.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray82 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList83, shutdownHookArray82);
        atmosphereConfig79.shutdownHooks = shutdownHookList83;
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = atmosphereConfig79.getproperties();
        org.slf4j.Logger logger87 = atmosphereConfig79.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList88 = atmosphereConfig79.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework89 = atmosphereConfig79.getframework();
        atmosphereConfig79.supportSession = false;
        int int94 = atmosphereConfig79.getInitParameter("hi!", (int) (byte) 100);
        atmosphereConfig79.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList97 = atmosphereConfig79.atmosphereHandlerConfig;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList97;
        atmosphereConfig18.destroy();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(logger44);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(shutdownHookList69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(startupHookList73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(logger87);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList88);
        org.junit.Assert.assertNull(atmosphereFramework89);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList97);
    }

    @Test
    public void test06283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06283");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.destroy();
        boolean boolean7 = atmosphereConfig5.supportSession;
        boolean boolean8 = atmosphereConfig5.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig13.startupHook(startupHook14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.getstartUpHook();
        atmosphereConfig5.startUpHook = startupHookList16;
        atmosphereConfig0.setstartUpHook(startupHookList16);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig27.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig27.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.populate(atmosphereConfig27);
        org.slf4j.Logger logger38 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(logger38);
    }

    @Test
    public void test06284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06284");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework();
        boolean boolean21 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean22 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig0.getstartUpHook();
        boolean boolean24 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.useServletContextParameters = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test06285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06285");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        org.slf4j.Logger logger7 = atmosphereConfig0.getlogger();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setSupportSession(false);
        boolean boolean11 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig15.getAtmosphereHandlerConfig();
        atmosphereConfig14.atmosphereHandlerConfig = atmosphereHandlerConfigList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig22.shutdownHooks = shutdownHookList26;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.getproperties();
        atmosphereConfig14.setproperties(strMap29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig14.startupHook(startupHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig33.atmosphereHandlerConfig = atmosphereHandlerConfigList39;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig41.shutdownHooks = shutdownHookList45;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig41.getproperties();
        atmosphereConfig33.setproperties(strMap48);
        atmosphereConfig32.setproperties(strMap48);
        int int53 = atmosphereConfig32.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig32.startupHook(startupHook54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        atmosphereConfig56.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig63.destroy();
        boolean boolean65 = atmosphereConfig63.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig63.shutdownHook(shutdownHook66);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig63.getAtmosphereHandlerConfig();
        atmosphereConfig56.atmosphereHandlerConfig = atmosphereHandlerConfigList68;
        atmosphereConfig32.atmosphereHandlerConfig = atmosphereHandlerConfigList68;
        java.lang.String str72 = atmosphereConfig32.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig32.properties;
        atmosphereConfig32.destroy();
        atmosphereConfig32.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig0.populate(atmosphereConfig32);
        boolean boolean78 = atmosphereConfig32.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook79 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = atmosphereConfig32.shutdownHook(shutdownHook79);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig80);
    }

    @Test
    public void test06286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06286");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap13 = atmosphereConfig4.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
    }

    @Test
    public void test06287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06287");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig16.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig16.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        atmosphereConfig22.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig29.getAtmosphereHandlerConfig();
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList34;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig22.startupHook(startupHook36);
        atmosphereConfig37.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig37.startUpHook;
        atmosphereConfig37.destroy();
        boolean boolean42 = atmosphereConfig37.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig37.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.destroy();
        boolean boolean47 = atmosphereConfig45.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig45.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig45.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig45.getshutdownHooks();
        atmosphereConfig37.shutdownHooks = shutdownHookList50;
        atmosphereConfig0.shutdownHooks = shutdownHookList50;
        java.lang.Class<?> wildcardClass53 = shutdownHookList50.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test06288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06288");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.framework = atmosphereFramework9;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig8.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig8.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig8.framework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework15);
    }

    @Test
    public void test06289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06289");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = false;
        int int15 = atmosphereConfig0.getInitParameter("hi!", (int) (byte) 100);
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean26 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28);
        java.lang.String str33 = atmosphereConfig20.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig20.framework = atmosphereFramework34;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig37.getAtmosphereHandlerConfig();
        atmosphereConfig36.atmosphereHandlerConfig = atmosphereHandlerConfigList42;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray47 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList48, shutdownHookArray47);
        atmosphereConfig44.shutdownHooks = shutdownHookList48;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig44.getproperties();
        atmosphereConfig36.setproperties(strMap51);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig36.startupHook(startupHook53);
        boolean boolean55 = atmosphereConfig54.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig20.populate(atmosphereConfig54);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig56.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = atmosphereConfig56.getframework();
        boolean boolean59 = atmosphereConfig56.supportSession;
        java.lang.String str62 = atmosphereConfig56.getInitParameter("hi!", "hi!");
        atmosphereConfig56.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = atmosphereConfig56.framework();
        boolean boolean68 = atmosphereConfig56.getInitParameter("hi!", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig56.getproperties();
        atmosphereConfig0.properties = strMap69;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertNull(atmosphereFramework58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMap69);
    }

    @Test
    public void test06290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06290");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        boolean boolean6 = atmosphereConfig0.getInitParameter("hi!", true);
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        atmosphereConfig8.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        boolean boolean16 = atmosphereConfig0.getInitParameter("hi!", false);
        atmosphereConfig0.setSupportSession(false);
        boolean boolean19 = atmosphereConfig0.getuseServletContextParameters();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06291");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        boolean boolean13 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        atmosphereConfig8.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig8.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        atmosphereConfig18.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig18.startupHook(startupHook32);
        atmosphereConfig33.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig40.startupHook(startupHook41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig47.startupHook(startupHook48);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig49.getstartUpHook();
        atmosphereConfig40.setstartUpHook(startupHookList50);
        atmosphereConfig33.startUpHook = startupHookList50;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig33.properties;
        atmosphereConfig8.setproperties(strMap53);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig8.getproperties();
        atmosphereConfig4.setproperties(strMap55);
        java.lang.String str59 = atmosphereConfig4.getInitParameter("", "");
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig60 = atmosphereConfig4.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test06292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06292");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig9.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig15.properties();
        atmosphereConfig0.setproperties(strMap23);
        atmosphereConfig0.throwExceptionOnCloned = true;
        atmosphereConfig0.setuseServletContextParameters(false);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig29 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test06293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06293");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        atmosphereConfig8.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig8.framework;
        boolean boolean26 = atmosphereConfig8.isSupportSession();
        atmosphereConfig8.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig30.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig29.setproperties(strMap44);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig29.startupHook(startupHook46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig48.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray59 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList60, shutdownHookArray59);
        atmosphereConfig56.shutdownHooks = shutdownHookList60;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig56.getproperties();
        atmosphereConfig48.setproperties(strMap63);
        atmosphereConfig47.setproperties(strMap63);
        int int68 = atmosphereConfig47.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig47.startupHook(startupHook69);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig71.destroy();
        boolean boolean73 = atmosphereConfig71.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig71.shutdownHook(shutdownHook74);
        atmosphereConfig71.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig78.destroy();
        boolean boolean80 = atmosphereConfig78.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook81 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig78.shutdownHook(shutdownHook81);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList83 = atmosphereConfig78.getAtmosphereHandlerConfig();
        atmosphereConfig71.atmosphereHandlerConfig = atmosphereHandlerConfigList83;
        atmosphereConfig47.atmosphereHandlerConfig = atmosphereHandlerConfigList83;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList86 = atmosphereConfig47.startUpHook;
        atmosphereConfig8.setstartUpHook(startupHookList86);
        atmosphereConfig4.startUpHook = startupHookList86;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework89 = atmosphereConfig4.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework90 = atmosphereConfig4.framework;
        boolean boolean91 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider92 = atmosphereConfig4.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList83);
        org.junit.Assert.assertNotNull(startupHookList86);
        org.junit.Assert.assertNull(atmosphereFramework89);
        org.junit.Assert.assertNull(atmosphereFramework90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test06294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06294");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        atmosphereConfig14.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig14.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        atmosphereConfig14.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig14.atmosphereHandlerConfig;
        atmosphereConfig14.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig14.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig14.framework();
        boolean boolean35 = atmosphereConfig14.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig14.properties;
        atmosphereConfig0.properties = strMap36;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext38 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNull(atmosphereFramework34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test06295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06295");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig18.setframework(atmosphereFramework38);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.shutdownHook(shutdownHook40);
        boolean boolean42 = atmosphereConfig18.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig44.getAtmosphereHandlerConfig();
        atmosphereConfig43.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig51.shutdownHooks = shutdownHookList55;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig51.getproperties();
        atmosphereConfig43.setproperties(strMap58);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig60.destroy();
        boolean boolean62 = atmosphereConfig60.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray63 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList64, shutdownHookArray63);
        atmosphereConfig60.shutdownHooks = shutdownHookList64;
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig60.getproperties();
        atmosphereConfig43.properties = strMap67;
        atmosphereConfig43.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig43.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig18.populate(atmosphereConfig43);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = atmosphereConfig73.atmosphereHandlerConfig;
        atmosphereConfig73.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig73.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig73.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap78 = atmosphereConfig73.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList74);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(shutdownHookList77);
    }

    @Test
    public void test06296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06296");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        boolean boolean34 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        boolean boolean39 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig36.startUpHook;
        atmosphereConfig33.setstartUpHook(startupHookList40);
        atmosphereConfig0.startUpHook = startupHookList40;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean44 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        atmosphereConfig0.framework = atmosphereFramework45;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test06297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06297");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06298");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig18.getstartUpHook();
        boolean boolean62 = atmosphereConfig18.isSupportSession();
        boolean boolean63 = atmosphereConfig18.isThrowExceptionOnCloned();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test06299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06299");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig9.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig9.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.populate(atmosphereConfig9);
        java.lang.String str19 = atmosphereConfig17.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig17.getframework();
        boolean boolean21 = atmosphereConfig17.isSupportSession();
        atmosphereConfig17.setSupportSession(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test06300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06300");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.startupHook(startupHook26);
        org.slf4j.Logger logger28 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig29.shutdownHooks = shutdownHookList33;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig29.getproperties();
        org.slf4j.Logger logger37 = atmosphereConfig29.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig29.getAtmosphereHandlerConfig();
        atmosphereConfig29.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig42.getAtmosphereHandlerConfig();
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray52 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList53, shutdownHookArray52);
        atmosphereConfig49.shutdownHooks = shutdownHookList53;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig49.getproperties();
        atmosphereConfig41.setproperties(strMap56);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig41.startupHook(startupHook58);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig61.shutdownHook(shutdownHook64);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig61.getAtmosphereHandlerConfig();
        atmosphereConfig60.atmosphereHandlerConfig = atmosphereHandlerConfigList66;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig68.destroy();
        boolean boolean70 = atmosphereConfig68.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray71 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList72, shutdownHookArray71);
        atmosphereConfig68.shutdownHooks = shutdownHookList72;
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = atmosphereConfig68.getproperties();
        atmosphereConfig60.setproperties(strMap75);
        atmosphereConfig59.setproperties(strMap75);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = atmosphereConfig59.shutdownHooks;
        atmosphereConfig29.shutdownHooks = shutdownHookList78;
        atmosphereConfig0.shutdownHooks = shutdownHookList78;
        org.slf4j.Logger logger81 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(logger37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(shutdownHookList78);
        org.junit.Assert.assertNotNull(logger81);
    }

    @Test
    public void test06301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06301");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8, shutdownHookArray7);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig16.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig16.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.populate(atmosphereConfig34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = null;
        atmosphereConfig34.startUpHook = startupHookList37;
        org.slf4j.Logger logger39 = atmosphereConfig34.getlogger();
        boolean boolean40 = atmosphereConfig34.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig42.getAtmosphereHandlerConfig();
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray52 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList53, shutdownHookArray52);
        atmosphereConfig49.shutdownHooks = shutdownHookList53;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig49.getproperties();
        atmosphereConfig41.setproperties(strMap56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig58.destroy();
        boolean boolean60 = atmosphereConfig58.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray61 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList62, shutdownHookArray61);
        atmosphereConfig58.shutdownHooks = shutdownHookList62;
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig58.getproperties();
        atmosphereConfig41.properties = strMap65;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig41.startupHook(startupHook67);
        boolean boolean69 = atmosphereConfig41.supportSession;
        atmosphereConfig41.setuseServletContextParameters(false);
        atmosphereConfig41.initComplete();
        boolean boolean73 = atmosphereConfig41.isThrowExceptionOnCloned();
        boolean boolean74 = atmosphereConfig41.useServletContextParameters;
        boolean boolean75 = atmosphereConfig41.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig41.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig34.populate(atmosphereConfig41);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory78 = atmosphereConfig77.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(logger39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
    }

    @Test
    public void test06302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06302");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        int int40 = atmosphereConfig18.getInitParameter("", 0);
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig18.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig18.shutdownHooks;
        int int47 = atmosphereConfig18.getInitParameter("hi!", (int) ' ');
        boolean boolean48 = atmosphereConfig18.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig18.framework();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(atmosphereFramework49);
    }

    @Test
    public void test06303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06303");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        atmosphereConfig4.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray8 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList9, startupHookArray8);
        atmosphereConfig4.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList9);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig4.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig14.getAtmosphereHandlerConfig();
        boolean boolean20 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList22, shutdownHookArray21);
        atmosphereConfig14.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList22);
        java.lang.String str27 = atmosphereConfig14.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig14.framework = atmosphereFramework28;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig14.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig32.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig40.shutdownHooks = shutdownHookList44;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig40.getproperties();
        atmosphereConfig32.setproperties(strMap47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig32.startupHook(startupHook49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.destroy();
        boolean boolean54 = atmosphereConfig52.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig52.getAtmosphereHandlerConfig();
        atmosphereConfig51.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63, shutdownHookArray62);
        atmosphereConfig59.shutdownHooks = shutdownHookList63;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig59.getproperties();
        atmosphereConfig51.setproperties(strMap66);
        atmosphereConfig50.setproperties(strMap66);
        atmosphereConfig50.destroy();
        java.lang.String str72 = atmosphereConfig50.getInitParameter("", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = atmosphereConfig50.getshutdownHooks();
        atmosphereConfig14.setshutdownHooks(shutdownHookList73);
        org.slf4j.Logger logger75 = atmosphereConfig14.getlogger();
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig13.populate(atmosphereConfig14);
        atmosphereConfig78.setSupportSession(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(shutdownHookList73);
        org.junit.Assert.assertNotNull(logger75);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
    }

    @Test
    public void test06304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06304");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean4 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.destroy();
        boolean boolean7 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        boolean boolean10 = atmosphereConfig5.isSessionTimeoutRemovalAllowed();
        int int13 = atmosphereConfig5.getInitParameter("", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig5.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig15.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig15.framework = atmosphereFramework17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig22.shutdownHooks = shutdownHookList26;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.getproperties();
        atmosphereConfig21.properties = strMap29;
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig21.properties;
        atmosphereConfig15.setproperties(strMap33);
        atmosphereConfig0.properties = strMap33;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test06305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06305");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        boolean boolean5 = atmosphereConfig3.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        atmosphereConfig6.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig6.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        atmosphereConfig3.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        atmosphereConfig0.startUpHook = startupHookList11;
        int int18 = atmosphereConfig0.getInitParameter("hi!", (int) (byte) 10);
        atmosphereConfig0.initComplete();
        boolean boolean22 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig24.getAtmosphereHandlerConfig();
        atmosphereConfig23.atmosphereHandlerConfig = atmosphereHandlerConfigList29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        boolean boolean33 = atmosphereConfig31.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray34 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList35, shutdownHookArray34);
        atmosphereConfig31.shutdownHooks = shutdownHookList35;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig31.getproperties();
        atmosphereConfig23.setproperties(strMap38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig40.shutdownHooks = shutdownHookList44;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig40.getproperties();
        atmosphereConfig23.properties = strMap47;
        atmosphereConfig23.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig23.setSupportSession(false);
        boolean boolean53 = atmosphereConfig23.isThrowExceptionOnCloned();
        org.slf4j.Logger logger54 = atmosphereConfig23.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig23.atmosphereHandlerConfig;
        atmosphereConfig23.destroy();
        java.lang.String str59 = atmosphereConfig23.getInitParameter("", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig23.properties;
        atmosphereConfig0.properties = strMap60;
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(logger54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(strMap60);
    }

    @Test
    public void test06306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06306");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig35.getAtmosphereHandlerConfig();
        atmosphereConfig34.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig42.shutdownHooks = shutdownHookList46;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig42.getproperties();
        atmosphereConfig34.setproperties(strMap49);
        atmosphereConfig33.setproperties(strMap49);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig33.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig54.getAtmosphereHandlerConfig();
        atmosphereConfig53.atmosphereHandlerConfig = atmosphereHandlerConfigList59;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray64 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList65, shutdownHookArray64);
        atmosphereConfig61.shutdownHooks = shutdownHookList65;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig61.getproperties();
        atmosphereConfig53.setproperties(strMap68);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig53.startupHook(startupHook70);
        boolean boolean72 = atmosphereConfig71.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig71.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig74.destroy();
        boolean boolean76 = atmosphereConfig74.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook77 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig74.shutdownHook(shutdownHook77);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig74.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList80 = atmosphereConfig74.shutdownHooks;
        atmosphereConfig71.shutdownHooks = shutdownHookList80;
        atmosphereConfig33.shutdownHooks = shutdownHookList80;
        atmosphereConfig0.shutdownHooks = shutdownHookList80;
        java.lang.String str86 = atmosphereConfig0.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList87 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook90 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig91 = atmosphereConfig0.shutdownHook(shutdownHook90);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertNotNull(shutdownHookList80);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNotNull(shutdownHookList87);
        org.junit.Assert.assertNotNull(atmosphereConfig91);
    }

    @Test
    public void test06307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06307");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig16.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.getproperties();
        atmosphereConfig15.properties = strMap31;
        atmosphereConfig15.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig15.startupHook(startupHook35);
        boolean boolean37 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        boolean boolean41 = atmosphereConfig38.throwExceptionOnCloned;
        atmosphereConfig38.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = atmosphereConfig38.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig36.setproperties(strMap45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig36.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig36.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig36.shutdownHook(shutdownHook49);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(atmosphereFramework44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
    }

    @Test
    public void test06308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06308");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig12.getproperties();
        atmosphereConfig11.setproperties(strMap19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        atmosphereConfig21.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig21.startupHook(startupHook35);
        atmosphereConfig21.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        atmosphereConfig21.framework = atmosphereFramework39;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig21.startUpHook;
        atmosphereConfig11.startUpHook = startupHookList41;
        atmosphereConfig11.supportSession = true;
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(startupHookList41);
    }

    @Test
    public void test06309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06309");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        boolean boolean8 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.framework;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.shutdownHook(shutdownHook10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig4.properties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test06310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06310");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig4.initComplete();
        boolean boolean11 = atmosphereConfig4.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig18.getframework();
        atmosphereConfig18.throwExceptionOnCloned = false;
        boolean boolean22 = atmosphereConfig18.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig18.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig18.properties();
        java.lang.String str27 = atmosphereConfig18.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.getproperties();
        atmosphereConfig28.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList39, startupHookArray38);
        atmosphereConfig28.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList39);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig28.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig44.getAtmosphereHandlerConfig();
        atmosphereConfig43.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig51.shutdownHooks = shutdownHookList55;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig51.getproperties();
        atmosphereConfig43.setproperties(strMap58);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig43.startupHook(startupHook60);
        boolean boolean62 = atmosphereConfig61.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig61.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig64.destroy();
        boolean boolean66 = atmosphereConfig64.supportSession;
        boolean boolean67 = atmosphereConfig64.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig64.startUpHook;
        atmosphereConfig61.setstartUpHook(startupHookList68);
        atmosphereConfig28.startUpHook = startupHookList68;
        atmosphereConfig18.setstartUpHook(startupHookList68);
        atmosphereConfig4.startUpHook = startupHookList68;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(startupHookList68);
    }

    @Test
    public void test06311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06311");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig7.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig27.getAtmosphereHandlerConfig();
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray37 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList38, shutdownHookArray37);
        atmosphereConfig34.shutdownHooks = shutdownHookList38;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig34.getproperties();
        atmosphereConfig26.setproperties(strMap41);
        atmosphereConfig25.setproperties(strMap41);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig4.setshutdownHooks(shutdownHookList44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig46.atmosphereHandlerConfig = atmosphereHandlerConfigList52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray57 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList58, shutdownHookArray57);
        atmosphereConfig54.shutdownHooks = shutdownHookList58;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig54.getproperties();
        atmosphereConfig46.setproperties(strMap61);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig46.startupHook(startupHook63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig66.destroy();
        boolean boolean68 = atmosphereConfig66.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig66.shutdownHook(shutdownHook69);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig66.getAtmosphereHandlerConfig();
        atmosphereConfig65.atmosphereHandlerConfig = atmosphereHandlerConfigList71;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        boolean boolean75 = atmosphereConfig73.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray76 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList77, shutdownHookArray76);
        atmosphereConfig73.shutdownHooks = shutdownHookList77;
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = atmosphereConfig73.getproperties();
        atmosphereConfig65.setproperties(strMap80);
        atmosphereConfig64.setproperties(strMap80);
        int int85 = atmosphereConfig64.getInitParameter("", 100);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList86 = atmosphereConfig64.shutdownHooks;
        boolean boolean87 = atmosphereConfig64.isSupportSession();
        boolean boolean88 = atmosphereConfig64.isSupportSession();
        atmosphereConfig64.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig91 = atmosphereConfig4.populate(atmosphereConfig64);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework92 = null;
        atmosphereConfig64.setframework(atmosphereFramework92);
        boolean boolean94 = atmosphereConfig64.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework95 = atmosphereConfig64.framework;
        atmosphereConfig64.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertNotNull(shutdownHookList86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(atmosphereFramework95);
    }

    @Test
    public void test06312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06312");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig18.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.getproperties();
        atmosphereConfig20.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig20.properties = strMap44;
        atmosphereConfig20.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig20.setSupportSession(false);
        boolean boolean50 = atmosphereConfig20.isThrowExceptionOnCloned();
        boolean boolean51 = atmosphereConfig20.isSupportSession();
        boolean boolean52 = atmosphereConfig20.throwExceptionOnCloned;
        boolean boolean53 = atmosphereConfig20.throwExceptionOnCloned;
        java.lang.String str55 = atmosphereConfig20.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.sessionTimeoutRemovalAllowed;
        boolean boolean59 = atmosphereConfig56.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig20.populate(atmosphereConfig56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig18.populate(atmosphereConfig20);
        atmosphereConfig20.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
    }

    @Test
    public void test06313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06313");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig0.framework;
        boolean boolean15 = atmosphereConfig0.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookList16);
    }

    @Test
    public void test06314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06314");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig59.setframework(atmosphereFramework60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63, startupHookArray62);
        atmosphereConfig59.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63);
        atmosphereConfig59.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig59.framework();
        java.lang.String str71 = atmosphereConfig59.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig18.populate(atmosphereConfig59);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = atmosphereConfig72.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig72.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList75 = atmosphereConfig72.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(startupHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(shutdownHookList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList75);
    }

    @Test
    public void test06315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06315");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig17.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList29, shutdownHookArray28);
        atmosphereConfig25.shutdownHooks = shutdownHookList29;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig25.getproperties();
        atmosphereConfig17.setproperties(strMap32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray37 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList38, shutdownHookArray37);
        atmosphereConfig34.shutdownHooks = shutdownHookList38;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig34.getproperties();
        atmosphereConfig17.properties = strMap41;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig17.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig48.getproperties();
        atmosphereConfig17.properties = strMap49;
        atmosphereConfig0.properties = strMap49;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(shutdownHookList52);
    }

    @Test
    public void test06316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06316");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        boolean boolean6 = atmosphereConfig4.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.startupHook(startupHook13);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig14.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList15);
        atmosphereConfig4.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        atmosphereConfig18.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig18.framework = atmosphereFramework23;
        boolean boolean25 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig18.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig18.startupHook(startupHook27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig18.getstartUpHook();
        atmosphereConfig4.startUpHook = startupHookList29;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration31 = atmosphereConfig4.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
    }

    @Test
    public void test06317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06317");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray13 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList14, shutdownHookArray13);
        atmosphereConfig10.shutdownHooks = shutdownHookList14;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig10.getproperties();
        atmosphereConfig9.properties = strMap17;
        atmosphereConfig0.properties = strMap17;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.useServletContextParameters = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
    }

    @Test
    public void test06318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06318");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.destroy();
        boolean boolean7 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig5.properties();
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig14.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig14.startUpHook;
        atmosphereConfig5.setstartUpHook(startupHookList18);
        atmosphereConfig0.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        atmosphereConfig29.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList34, startupHookArray33);
        atmosphereConfig29.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList34);
        atmosphereConfig26.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList34);
        atmosphereConfig26.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig44.startupHook(startupHook45);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig44.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig44.getframework();
        boolean boolean49 = atmosphereConfig44.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig44.getstartUpHook();
        atmosphereConfig26.startUpHook = startupHookList50;
        atmosphereConfig0.setstartUpHook(startupHookList50);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(startupHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(startupHookList50);
    }

    @Test
    public void test06319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06319");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        boolean boolean25 = atmosphereConfig24.supportSession;
        atmosphereConfig24.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig34.isThrowExceptionOnCloned();
        boolean boolean36 = atmosphereConfig34.getuseServletContextParameters();
        atmosphereConfig34.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig34.properties;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test06320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06320");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig12.getproperties();
        atmosphereConfig11.setproperties(strMap19);
        boolean boolean21 = atmosphereConfig11.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig11.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig11.shutdownHooks;
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
    }

    @Test
    public void test06321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06321");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = null;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        atmosphereConfig0.supportSession = false;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration9 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
    }

    @Test
    public void test06322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06322");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        boolean boolean25 = atmosphereConfig24.supportSession;
        atmosphereConfig24.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig0.getproperties();
        boolean boolean34 = atmosphereConfig0.useServletContextParameters;
        boolean boolean37 = atmosphereConfig0.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig0.framework;
        org.slf4j.Logger logger39 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(logger39);
    }

    @Test
    public void test06323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06323");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean31 = atmosphereConfig0.isSupportSession();
        boolean boolean32 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.lang.String str36 = atmosphereConfig0.getInitParameter("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test06324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06324");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig59.setframework(atmosphereFramework60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63, startupHookArray62);
        atmosphereConfig59.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63);
        atmosphereConfig59.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig59.framework();
        java.lang.String str71 = atmosphereConfig59.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig18.populate(atmosphereConfig59);
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig72.properties;
        boolean boolean74 = atmosphereConfig72.isSupportSession();
        boolean boolean75 = atmosphereConfig72.throwExceptionOnCloned;
        atmosphereConfig72.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(startupHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test06325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06325");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean6 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig9.setproperties(strMap24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig9.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig29.getAtmosphereHandlerConfig();
        atmosphereConfig28.atmosphereHandlerConfig = atmosphereHandlerConfigList34;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray39 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList40, shutdownHookArray39);
        atmosphereConfig36.shutdownHooks = shutdownHookList40;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig36.getproperties();
        atmosphereConfig28.setproperties(strMap43);
        atmosphereConfig27.setproperties(strMap43);
        int int48 = atmosphereConfig27.getInitParameter("", 100);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig27.shutdownHooks;
        java.lang.String str52 = atmosphereConfig27.getInitParameter("hi!", "");
        org.slf4j.Logger logger53 = atmosphereConfig27.getlogger();
        atmosphereConfig27.throwExceptionOnCloned = true;
        atmosphereConfig27.setThrowExceptionOnCloned(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig27.properties();
        atmosphereConfig0.setproperties(strMap58);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(logger53);
        org.junit.Assert.assertNotNull(strMap58);
    }

    @Test
    public void test06326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06326");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        atmosphereConfig0.throwExceptionOnCloned = true;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.startupHook(startupHook27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig26.properties;
        atmosphereConfig19.properties = strMap29;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig19.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig32.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig40.shutdownHooks = shutdownHookList44;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig40.getproperties();
        atmosphereConfig32.setproperties(strMap47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig32.startupHook(startupHook49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.destroy();
        boolean boolean54 = atmosphereConfig52.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig52.getAtmosphereHandlerConfig();
        atmosphereConfig51.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63, shutdownHookArray62);
        atmosphereConfig59.shutdownHooks = shutdownHookList63;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig59.getproperties();
        atmosphereConfig51.setproperties(strMap66);
        atmosphereConfig50.setproperties(strMap66);
        atmosphereConfig50.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig50.properties();
        atmosphereConfig19.setproperties(strMap71);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        atmosphereConfig73.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList77 = atmosphereConfig73.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList78 = atmosphereConfig73.atmosphereHandlerConfig;
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList78;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList78;
        java.lang.Class<?> wildcardClass81 = atmosphereHandlerConfigList78.getClass();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList77);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList78);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test06327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06327");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig16.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList37, shutdownHookArray36);
        atmosphereConfig33.shutdownHooks = shutdownHookList37;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig33.getproperties();
        atmosphereConfig16.properties = strMap40;
        atmosphereConfig16.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig16.setSupportSession(false);
        boolean boolean46 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.slf4j.Logger logger47 = atmosphereConfig16.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig16.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory50 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(logger47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
    }

    @Test
    public void test06328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06328");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig18.getshutdownHooks();
        boolean boolean22 = atmosphereConfig18.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig18.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig18.framework;
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(atmosphereFramework25);
    }

    @Test
    public void test06329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06329");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig0.setSupportSession(true);
        boolean boolean18 = atmosphereConfig0.supportSession;
        boolean boolean19 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig20.shutdownHooks = shutdownHookList24;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.getproperties();
        org.slf4j.Logger logger28 = atmosphereConfig20.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig20.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig20.startupHook(startupHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig33.atmosphereHandlerConfig = atmosphereHandlerConfigList39;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig41.shutdownHooks = shutdownHookList45;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig41.getproperties();
        atmosphereConfig33.setproperties(strMap48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray53 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList54, shutdownHookArray53);
        atmosphereConfig50.shutdownHooks = shutdownHookList54;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig50.getproperties();
        atmosphereConfig33.properties = strMap57;
        atmosphereConfig32.properties = strMap57;
        atmosphereConfig0.setproperties(strMap57);
        atmosphereConfig0.supportSession = false;
        java.lang.String str64 = atmosphereConfig0.getInitParameter("hi!");
        java.lang.String str67 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig68.destroy();
        boolean boolean70 = atmosphereConfig68.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook71 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig68.shutdownHook(shutdownHook71);
        atmosphereConfig68.setuseServletContextParameters(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList75 = atmosphereConfig68.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList75;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory77 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(shutdownHookList75);
    }

    @Test
    public void test06330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06330");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        boolean boolean8 = atmosphereConfig6.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        boolean boolean11 = atmosphereConfig10.supportSession;
        boolean boolean12 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        atmosphereConfig13.setproperties(strMap28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.getproperties();
        atmosphereConfig13.properties = strMap37;
        atmosphereConfig10.setproperties(strMap37);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig10.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        atmosphereConfig41.setuseServletContextParameters(false);
        atmosphereConfig41.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51, shutdownHookArray50);
        atmosphereConfig41.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        atmosphereConfig41.framework = atmosphereFramework54;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig41.getshutdownHooks();
        atmosphereConfig10.setshutdownHooks(shutdownHookList56);
        atmosphereConfig10.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig10);
        boolean boolean61 = atmosphereConfig60.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = atmosphereConfig60.framework();
        boolean boolean63 = atmosphereConfig60.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig60.startupHook(startupHook64);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = null;
        atmosphereConfig65.framework = atmosphereFramework66;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(shutdownHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(atmosphereFramework62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
    }

    @Test
    public void test06331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06331");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig9.setproperties(strMap24);
        boolean boolean28 = atmosphereConfig9.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig0.populate(atmosphereConfig9);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig29.shutdownHooks;
        int int33 = atmosphereConfig29.getInitParameter("hi!", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        int int43 = atmosphereConfig38.getInitParameter("", (int) (short) 10);
        java.lang.String str45 = atmosphereConfig38.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig38.startupHook(startupHook46);
        atmosphereConfig47.initComplete();
        atmosphereConfig47.throwExceptionOnCloned = true;
        atmosphereConfig47.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig29.populate(atmosphereConfig47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        boolean boolean57 = atmosphereConfig54.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig58.destroy();
        boolean boolean60 = atmosphereConfig58.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig58.shutdownHook(shutdownHook61);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig62.startupHook(startupHook63);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig64.getstartUpHook();
        atmosphereConfig54.startUpHook = startupHookList65;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig54.startupHook(startupHook67);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList69 = atmosphereConfig54.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList70 = atmosphereConfig54.atmosphereHandlerConfig;
        atmosphereConfig53.atmosphereHandlerConfig = atmosphereHandlerConfigList70;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = atmosphereConfig53.shutdownHooks;
        org.slf4j.Logger logger73 = atmosphereConfig53.getlogger();
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(startupHookList65);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(startupHookList69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList70);
        org.junit.Assert.assertNotNull(shutdownHookList72);
        org.junit.Assert.assertNotNull(logger73);
    }

    @Test
    public void test06332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06332");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.slf4j.Logger logger19 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        atmosphereConfig20.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        atmosphereConfig24.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig20.populate(atmosphereConfig24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.startupHook(startupHook34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig40.startupHook(startupHook41);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.getstartUpHook();
        atmosphereConfig33.setstartUpHook(startupHookList43);
        atmosphereConfig28.startUpHook = startupHookList43;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig28.properties;
        atmosphereConfig18.properties = strMap46;
        boolean boolean48 = atmosphereConfig18.throwExceptionOnCloned;
        org.slf4j.Logger logger49 = atmosphereConfig18.getlogger();
        java.lang.String str52 = atmosphereConfig18.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        atmosphereConfig53.setframework(atmosphereFramework54);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray56 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList57, startupHookArray56);
        atmosphereConfig53.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList57);
        atmosphereConfig53.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = atmosphereConfig53.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig53.startupHook(startupHook63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig65.shutdownHook(shutdownHook66);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig67.getAtmosphereHandlerConfig();
        atmosphereConfig53.atmosphereHandlerConfig = atmosphereHandlerConfigList68;
        atmosphereConfig53.setuseServletContextParameters(true);
        atmosphereConfig53.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig53.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework76 = atmosphereConfig53.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList77 = atmosphereConfig53.startUpHook;
        atmosphereConfig18.setstartUpHook(startupHookList77);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig18.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(logger49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(startupHookArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(atmosphereFramework62);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertNull(atmosphereFramework76);
        org.junit.Assert.assertNotNull(startupHookList77);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
    }

    @Test
    public void test06333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06333");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig6.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig6.atmosphereHandlerConfig;
        java.lang.String str11 = atmosphereConfig6.getInitParameter("hi!", "");
        boolean boolean12 = atmosphereConfig6.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17, shutdownHookArray16);
        atmosphereConfig13.shutdownHooks = shutdownHookList17;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig13.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig13.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig13.setframework(atmosphereFramework22);
        boolean boolean24 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig13.startupHook(startupHook25);
        atmosphereConfig26.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig26.startUpHook;
        atmosphereConfig6.startUpHook = startupHookList29;
        boolean boolean31 = atmosphereConfig6.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig32.setframework(atmosphereFramework33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36, startupHookArray35);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        atmosphereConfig32.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig32.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig32.startupHook(startupHook42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig44.shutdownHook(shutdownHook45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig46.getAtmosphereHandlerConfig();
        atmosphereConfig32.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        atmosphereConfig32.setuseServletContextParameters(true);
        atmosphereConfig32.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig32.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig32.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = atmosphereConfig32.startUpHook;
        atmosphereConfig6.startUpHook = startupHookList56;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = atmosphereConfig6.shutdownHooks;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(startupHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNull(atmosphereFramework55);
        org.junit.Assert.assertNotNull(startupHookList56);
        org.junit.Assert.assertNotNull(shutdownHookList58);
    }

    @Test
    public void test06334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06334");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        atmosphereConfig4.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig4.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig4.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration38 = atmosphereConfig4.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
    }

    @Test
    public void test06335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06335");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList16, startupHookArray15);
        atmosphereConfig12.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList16);
        atmosphereConfig12.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig12.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig24.shutdownHook(shutdownHook25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        atmosphereConfig12.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        boolean boolean33 = atmosphereConfig31.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig35.startupHook(startupHook36);
        boolean boolean40 = atmosphereConfig35.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        atmosphereConfig41.setuseServletContextParameters(false);
        atmosphereConfig41.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51, shutdownHookArray50);
        atmosphereConfig41.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig41.atmosphereHandlerConfig;
        atmosphereConfig35.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig12.populate(atmosphereConfig35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray60 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList61, shutdownHookArray60);
        atmosphereConfig57.shutdownHooks = shutdownHookList61;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig57.getproperties();
        org.slf4j.Logger logger65 = atmosphereConfig57.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig57.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = atmosphereConfig57.getframework();
        atmosphereConfig57.supportSession = false;
        int int72 = atmosphereConfig57.getInitParameter("hi!", (int) (byte) 100);
        atmosphereConfig57.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList75 = atmosphereConfig57.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList76 = atmosphereConfig57.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList77 = atmosphereConfig57.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook78 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig57.shutdownHook(shutdownHook78);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList80 = atmosphereConfig79.getstartUpHook();
        atmosphereConfig35.startUpHook = startupHookList80;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig82.destroy();
        boolean boolean84 = atmosphereConfig82.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook85 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = atmosphereConfig82.shutdownHook(shutdownHook85);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook87 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = atmosphereConfig86.startupHook(startupHook87);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework89 = atmosphereConfig88.getframework();
        atmosphereConfig88.throwExceptionOnCloned = false;
        boolean boolean92 = atmosphereConfig88.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList93 = atmosphereConfig88.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap94 = atmosphereConfig88.properties();
        atmosphereConfig35.setproperties(strMap94);
        atmosphereConfig0.setproperties(strMap94);
        boolean boolean97 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(startupHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(shutdownHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(logger65);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertNull(atmosphereFramework67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList75);
        org.junit.Assert.assertNotNull(shutdownHookList76);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList77);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
        org.junit.Assert.assertNotNull(startupHookList80);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig86);
        org.junit.Assert.assertNotNull(atmosphereConfig88);
        org.junit.Assert.assertNull(atmosphereFramework89);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(shutdownHookList93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test06336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06336");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        atmosphereConfig16.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        atmosphereConfig20.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig16.populate(atmosphereConfig20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig26.getAtmosphereHandlerConfig();
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList31;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig25.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34);
        atmosphereConfig16.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig16.setframework(atmosphereFramework38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig16.properties;
        atmosphereConfig4.setproperties(strMap40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig4.getproperties();
        atmosphereConfig4.setuseServletContextParameters(true);
        boolean boolean47 = atmosphereConfig4.getInitParameter("hi!", false);
        boolean boolean48 = atmosphereConfig4.isSupportSession();
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean51 = atmosphereConfig4.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test06337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06337");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setuseServletContextParameters(true);
        boolean boolean6 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList11, shutdownHookArray10);
        atmosphereConfig7.shutdownHooks = shutdownHookList11;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig7.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig7.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig7.properties();
        atmosphereConfig0.properties = strMap16;
        boolean boolean18 = atmosphereConfig0.supportSession;
        java.lang.String str20 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean21 = atmosphereConfig0.getuseServletContextParameters();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test06338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06338");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig4.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig4.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig4.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig4.setSupportSession(false);
        atmosphereConfig4.throwExceptionOnCloned = true;
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
    }

    @Test
    public void test06339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06339");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig8.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
    }

    @Test
    public void test06340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06340");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties;
        atmosphereConfig0.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.atmosphereHandlerConfig;
        org.slf4j.Logger logger11 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(logger11);
    }

    @Test
    public void test06341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06341");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig4.setframework(atmosphereFramework6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        atmosphereConfig8.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig8.startupHook(startupHook25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig27.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig35.shutdownHooks = shutdownHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig35.getproperties();
        atmosphereConfig27.setproperties(strMap42);
        atmosphereConfig26.setproperties(strMap42);
        atmosphereConfig4.properties = strMap42;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig4.shutdownHook(shutdownHook46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig48.destroy();
        boolean boolean50 = atmosphereConfig48.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig48.shutdownHook(shutdownHook51);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig52.startupHook(startupHook53);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig54.getframework();
        atmosphereConfig54.throwExceptionOnCloned = false;
        boolean boolean58 = atmosphereConfig54.isThrowExceptionOnCloned();
        java.lang.String str60 = atmosphereConfig54.getInitParameter("hi!");
        java.lang.String str62 = atmosphereConfig54.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig47.populate(atmosphereConfig54);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig47.shutdownHook(shutdownHook64);
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig47.getproperties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNull(atmosphereFramework55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(strMap66);
    }

    @Test
    public void test06342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06342");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        int int9 = atmosphereConfig4.getInitParameter("", (int) (short) 10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig11.framework = atmosphereFramework18;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig11.shutdownHooks;
        atmosphereConfig4.setshutdownHooks(shutdownHookList20);
        atmosphereConfig4.initComplete();
        boolean boolean25 = atmosphereConfig4.getInitParameter("", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig4.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig4.startupHook(startupHook27);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig28.shutdownHook(shutdownHook29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig30.getproperties();
        atmosphereConfig30.useServletContextParameters = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test06343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06343");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig15.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.startUpHook;
        atmosphereConfig15.destroy();
        boolean boolean20 = atmosphereConfig15.throwExceptionOnCloned;
        boolean boolean21 = atmosphereConfig15.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        boolean boolean27 = atmosphereConfig26.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig26.properties;
        atmosphereConfig15.setproperties(strMap28);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster30 = atmosphereConfig15.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test06344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06344");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig0.shutdownHook(shutdownHook18);
        boolean boolean20 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06345");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("");
        boolean boolean21 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.throwExceptionOnCloned = true;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory24 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test06346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06346");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        org.slf4j.Logger logger8 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        atmosphereConfig9.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        atmosphereConfig9.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig9.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig9.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig9.framework = atmosphereFramework27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig4.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig30.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig30.shutdownHooks;
        atmosphereConfig4.setshutdownHooks(shutdownHookList36);
        atmosphereConfig4.initComplete();
        boolean boolean39 = atmosphereConfig4.supportSession;
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        boolean boolean42 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean43 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test06347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06347");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.supportSession = false;
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        boolean boolean15 = atmosphereConfig4.isThrowExceptionOnCloned();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap16 = atmosphereConfig4.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06348");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig0.startupHook(startupHook4);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        boolean boolean8 = atmosphereConfig5.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig13.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.startupHook(startupHook21);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.getstartUpHook();
        atmosphereConfig13.setstartUpHook(startupHookList23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        atmosphereConfig25.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        atmosphereConfig29.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig25.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig35.getAtmosphereHandlerConfig();
        atmosphereConfig34.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43, shutdownHookArray42);
        atmosphereConfig34.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43);
        atmosphereConfig25.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        atmosphereConfig25.setframework(atmosphereFramework47);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig25.properties;
        atmosphereConfig13.setproperties(strMap49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig51.shutdownHook(shutdownHook54);
        atmosphereConfig51.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig58.destroy();
        boolean boolean60 = atmosphereConfig58.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig58.shutdownHook(shutdownHook61);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig58.getAtmosphereHandlerConfig();
        atmosphereConfig51.atmosphereHandlerConfig = atmosphereHandlerConfigList63;
        atmosphereConfig51.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig51.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig51.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = null;
        atmosphereConfig51.framework = atmosphereFramework69;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig71.destroy();
        boolean boolean73 = atmosphereConfig71.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig71.shutdownHook(shutdownHook74);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig75.startupHook(startupHook76);
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = atmosphereConfig75.properties;
        atmosphereConfig51.properties = strMap78;
        atmosphereConfig13.properties = strMap78;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList81 = atmosphereConfig13.startUpHook;
        atmosphereConfig5.startUpHook = startupHookList81;
        java.lang.String str85 = atmosphereConfig5.getInitParameter("hi!", "");
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(shutdownHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(startupHookList81);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
    }

    @Test
    public void test06349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06349");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        atmosphereConfig0.setSupportSession(true);
        boolean boolean18 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean19 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean20 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
    }

    @Test
    public void test06350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06350");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig4.getproperties();
        boolean boolean6 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = atmosphereConfig4.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test06351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06351");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        atmosphereConfig13.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig13.startUpHook;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = atmosphereConfig13.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList16);
    }

    @Test
    public void test06352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06352");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        boolean boolean25 = atmosphereConfig11.throwExceptionOnCloned;
        java.lang.String str28 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig29.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig29.atmosphereHandlerConfig;
        boolean boolean46 = atmosphereConfig29.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        atmosphereConfig29.shutdownHooks = shutdownHookList55;
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig11);
        atmosphereConfig60.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig60.getstartUpHook();
        atmosphereConfig60.setSupportSession(false);
        atmosphereConfig60.initComplete();
        atmosphereConfig60.useServletContextParameters = false;
        org.slf4j.Logger logger69 = atmosphereConfig60.getlogger();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNotNull(logger69);
    }

    @Test
    public void test06353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06353");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig6.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig6.atmosphereHandlerConfig;
        java.lang.String str11 = atmosphereConfig6.getInitParameter("hi!", "");
        boolean boolean12 = atmosphereConfig6.supportSession;
        org.slf4j.Logger logger13 = atmosphereConfig6.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig6.shutdownHook(shutdownHook14);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig15.getproperties();
        atmosphereConfig15.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig15.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
    }

    @Test
    public void test06354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06354");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        boolean boolean14 = atmosphereConfig13.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig16.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig16.startupHook(startupHook33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig35.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray46 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList47, shutdownHookArray46);
        atmosphereConfig43.shutdownHooks = shutdownHookList47;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig43.getproperties();
        atmosphereConfig35.setproperties(strMap50);
        atmosphereConfig34.setproperties(strMap50);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig34.shutdownHooks;
        atmosphereConfig13.setshutdownHooks(shutdownHookList53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.destroy();
        boolean boolean57 = atmosphereConfig55.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray58 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList59, shutdownHookArray58);
        atmosphereConfig55.shutdownHooks = shutdownHookList59;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = atmosphereConfig55.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig55.properties;
        atmosphereConfig13.properties = strMap63;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig0.populate(atmosphereConfig13);
        boolean boolean66 = atmosphereConfig65.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig67.destroy();
        boolean boolean69 = atmosphereConfig67.supportSession;
        boolean boolean70 = atmosphereConfig67.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig71.destroy();
        boolean boolean73 = atmosphereConfig71.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig71.shutdownHook(shutdownHook74);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig75.startupHook(startupHook76);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList78 = atmosphereConfig77.getstartUpHook();
        atmosphereConfig67.startUpHook = startupHookList78;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig67.startupHook(startupHook80);
        boolean boolean82 = atmosphereConfig81.isSupportSession();
        atmosphereConfig81.setSessionTimeoutRemovalAllowed(true);
        boolean boolean85 = atmosphereConfig81.throwExceptionOnCloned;
        atmosphereConfig81.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList88 = atmosphereConfig81.getstartUpHook();
        atmosphereConfig65.startUpHook = startupHookList88;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig90 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig90.destroy();
        boolean boolean92 = atmosphereConfig90.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray93 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList94 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean95 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList94, shutdownHookArray93);
        atmosphereConfig90.shutdownHooks = shutdownHookList94;
        atmosphereConfig65.shutdownHooks = shutdownHookList94;
        java.util.Map<java.lang.String, java.lang.Object> strMap98 = atmosphereConfig65.properties();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(atmosphereFramework62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(startupHookList78);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(startupHookList88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(strMap98);
    }

    @Test
    public void test06355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06355");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray9 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList10, shutdownHookArray9);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        boolean boolean26 = atmosphereConfig25.supportSession;
        boolean boolean27 = atmosphereConfig25.isSessionTimeoutRemovalAllowed();
        boolean boolean28 = atmosphereConfig25.getuseServletContextParameters();
        boolean boolean29 = atmosphereConfig25.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig25.shutdownHook(shutdownHook30);
        atmosphereConfig25.setThrowExceptionOnCloned(false);
        java.lang.String str35 = atmosphereConfig25.getInitParameter("");
        boolean boolean36 = atmosphereConfig25.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig39.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig39.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig46.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig46.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.destroy();
        boolean boolean55 = atmosphereConfig53.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        boolean boolean58 = atmosphereConfig57.supportSession;
        boolean boolean59 = atmosphereConfig57.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig61.shutdownHook(shutdownHook64);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig61.getAtmosphereHandlerConfig();
        atmosphereConfig60.atmosphereHandlerConfig = atmosphereHandlerConfigList66;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig68.destroy();
        boolean boolean70 = atmosphereConfig68.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray71 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList72, shutdownHookArray71);
        atmosphereConfig68.shutdownHooks = shutdownHookList72;
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = atmosphereConfig68.getproperties();
        atmosphereConfig60.setproperties(strMap75);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig77.destroy();
        boolean boolean79 = atmosphereConfig77.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray80 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList81, shutdownHookArray80);
        atmosphereConfig77.shutdownHooks = shutdownHookList81;
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = atmosphereConfig77.getproperties();
        atmosphereConfig60.properties = strMap84;
        atmosphereConfig57.setproperties(strMap84);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig57.getAtmosphereHandlerConfig();
        atmosphereConfig46.atmosphereHandlerConfig = atmosphereHandlerConfigList87;
        atmosphereConfig39.atmosphereHandlerConfig = atmosphereHandlerConfigList87;
        atmosphereConfig39.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap92 = atmosphereConfig39.getproperties();
        atmosphereConfig39.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList95 = atmosphereConfig39.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList95);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(shutdownHookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(shutdownHookList95);
    }

    @Test
    public void test06356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06356");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties();
        atmosphereConfig0.setproperties(strMap16);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("", "");
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.slf4j.Logger logger23 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig0.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.getproperties();
        boolean boolean26 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.startupHook(startupHook27);
        boolean boolean29 = atmosphereConfig28.throwExceptionOnCloned;
        boolean boolean30 = atmosphereConfig28.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
    }

    @Test
    public void test06357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06357");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.slf4j.Logger logger19 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig18.framework;
        atmosphereConfig18.supportSession = true;
        int int25 = atmosphereConfig18.getInitParameter("hi!", (int) (byte) 0);
        atmosphereConfig18.destroy();
        atmosphereConfig18.setThrowExceptionOnCloned(true);
        boolean boolean29 = atmosphereConfig18.isSupportSession();
        boolean boolean30 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test06358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06358");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str17 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean18 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        atmosphereConfig19.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig19.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig19.framework = atmosphereFramework24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig30.startupHook(startupHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig30.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig30.getshutdownHooks();
        atmosphereConfig19.shutdownHooks = shutdownHookList34;
        atmosphereConfig0.shutdownHooks = shutdownHookList34;
        boolean boolean37 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig0.startupHook(startupHook38);
        atmosphereConfig39.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        boolean boolean46 = atmosphereConfig45.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig45.startUpHook;
        atmosphereConfig39.startUpHook = startupHookList48;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        atmosphereConfig39.framework = atmosphereFramework50;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(startupHookList48);
    }

    @Test
    public void test06359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06359");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig14.shutdownHooks = shutdownHookList18;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig14.getproperties();
        atmosphereConfig14.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig24.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig24.properties();
        atmosphereConfig14.setproperties(strMap30);
        java.lang.String str34 = atmosphereConfig14.getInitParameter("", "");
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        org.slf4j.Logger logger37 = atmosphereConfig14.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig14.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig14.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig14.getshutdownHooks();
        boolean boolean43 = atmosphereConfig14.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig0.populate(atmosphereConfig14);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory45 = atmosphereConfig44.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(logger37);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
    }

    @Test
    public void test06360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06360");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig0.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(startupHookList12);
    }

    @Test
    public void test06361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06361");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        atmosphereConfig18.useServletContextParameters = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig18.startUpHook;
        atmosphereConfig18.supportSession = true;
        atmosphereConfig18.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig18.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig18.getstartUpHook();
        boolean boolean47 = atmosphereConfig18.isSupportSession();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test06362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06362");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("");
        boolean boolean21 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        atmosphereConfig22.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig22.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList26;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig29.startupHook(startupHook43);
        atmosphereConfig44.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig51.startupHook(startupHook52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig58.startupHook(startupHook59);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig60.getstartUpHook();
        atmosphereConfig51.setstartUpHook(startupHookList61);
        atmosphereConfig44.startUpHook = startupHookList61;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig44.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig65.destroy();
        boolean boolean67 = atmosphereConfig65.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray68 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList69, shutdownHookArray68);
        atmosphereConfig65.shutdownHooks = shutdownHookList69;
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig65.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList73 = atmosphereConfig65.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework74 = null;
        atmosphereConfig65.setframework(atmosphereFramework74);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList76 = atmosphereConfig65.getshutdownHooks();
        atmosphereConfig44.setshutdownHooks(shutdownHookList76);
        atmosphereConfig0.shutdownHooks = shutdownHookList76;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList73);
        org.junit.Assert.assertNotNull(shutdownHookList76);
    }

    @Test
    public void test06363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06363");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean14 = atmosphereConfig0.supportSession;
        java.lang.String str17 = atmosphereConfig0.getInitParameter("", "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test06364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06364");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig7.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig27.getAtmosphereHandlerConfig();
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray37 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList38, shutdownHookArray37);
        atmosphereConfig34.shutdownHooks = shutdownHookList38;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig34.getproperties();
        atmosphereConfig26.setproperties(strMap41);
        atmosphereConfig25.setproperties(strMap41);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig4.setshutdownHooks(shutdownHookList44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig46.atmosphereHandlerConfig = atmosphereHandlerConfigList52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray57 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList58, shutdownHookArray57);
        atmosphereConfig54.shutdownHooks = shutdownHookList58;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig54.getproperties();
        atmosphereConfig46.setproperties(strMap61);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig46.startupHook(startupHook63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig66.destroy();
        boolean boolean68 = atmosphereConfig66.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig66.shutdownHook(shutdownHook69);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig66.getAtmosphereHandlerConfig();
        atmosphereConfig65.atmosphereHandlerConfig = atmosphereHandlerConfigList71;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        boolean boolean75 = atmosphereConfig73.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray76 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList77, shutdownHookArray76);
        atmosphereConfig73.shutdownHooks = shutdownHookList77;
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = atmosphereConfig73.getproperties();
        atmosphereConfig65.setproperties(strMap80);
        atmosphereConfig64.setproperties(strMap80);
        int int85 = atmosphereConfig64.getInitParameter("", 100);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList86 = atmosphereConfig64.shutdownHooks;
        boolean boolean87 = atmosphereConfig64.isSupportSession();
        boolean boolean88 = atmosphereConfig64.isSupportSession();
        atmosphereConfig64.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig91 = atmosphereConfig4.populate(atmosphereConfig64);
        atmosphereConfig4.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap94 = atmosphereConfig4.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList95 = atmosphereConfig4.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook96 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig97 = atmosphereConfig4.shutdownHook(shutdownHook96);
        atmosphereConfig97.setSupportSession(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertNotNull(shutdownHookList86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig91);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList95);
        org.junit.Assert.assertNotNull(atmosphereConfig97);
    }

    @Test
    public void test06365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06365");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig18.setSessionTimeoutRemovalAllowed(false);
        java.lang.String str26 = atmosphereConfig18.getInitParameter("", "hi!");
        boolean boolean29 = atmosphereConfig18.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.startupHook(startupHook42);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig43.getstartUpHook();
        atmosphereConfig34.setstartUpHook(startupHookList44);
        atmosphereConfig34.useServletContextParameters = false;
        boolean boolean48 = atmosphereConfig34.isSupportSession();
        boolean boolean49 = atmosphereConfig34.getuseServletContextParameters();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig34.getproperties();
        atmosphereConfig18.setproperties(strMap50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(startupHookList44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
    }

    @Test
    public void test06366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06366");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        atmosphereConfig0.setuseServletContextParameters(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean16 = atmosphereConfig0.getuseServletContextParameters();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test06367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06367");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        atmosphereConfig18.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray53 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList54, shutdownHookArray53);
        atmosphereConfig50.shutdownHooks = shutdownHookList54;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig50.getproperties();
        atmosphereConfig42.setproperties(strMap57);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig42.startupHook(startupHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        boolean boolean64 = atmosphereConfig62.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig62.shutdownHook(shutdownHook65);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig62.getAtmosphereHandlerConfig();
        atmosphereConfig61.atmosphereHandlerConfig = atmosphereHandlerConfigList67;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig69.destroy();
        boolean boolean71 = atmosphereConfig69.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray72 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList73, shutdownHookArray72);
        atmosphereConfig69.shutdownHooks = shutdownHookList73;
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig69.getproperties();
        atmosphereConfig61.setproperties(strMap76);
        atmosphereConfig60.setproperties(strMap76);
        int int81 = atmosphereConfig60.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig60.startupHook(startupHook82);
        atmosphereConfig83.setThrowExceptionOnCloned(false);
        atmosphereConfig83.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig83.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = atmosphereConfig18.populate(atmosphereConfig83);
        atmosphereConfig18.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = atmosphereConfig18.getproperties();
        atmosphereConfig18.sessionTimeoutRemovalAllowed = true;
        boolean boolean93 = atmosphereConfig18.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertNotNull(atmosphereConfig88);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test06368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06368");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList2 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = atmosphereConfig0.shutdownHooks;
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        boolean boolean8 = atmosphereConfig6.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig6.shutdownHooks;
        atmosphereConfig6.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig6.properties();
        atmosphereConfig0.properties = strMap14;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList2);
        org.junit.Assert.assertNotNull(shutdownHookList4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test06369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06369");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        boolean boolean26 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.throwExceptionOnCloned = false;
        boolean boolean29 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig30.getAtmosphereHandlerConfig();
        boolean boolean36 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig30.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig0.populate(atmosphereConfig30);
        java.lang.String str42 = atmosphereConfig39.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        atmosphereConfig43.setuseServletContextParameters(false);
        atmosphereConfig43.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray52 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList53, shutdownHookArray52);
        atmosphereConfig43.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig57.shutdownHook(shutdownHook60);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig57.getAtmosphereHandlerConfig();
        atmosphereConfig56.atmosphereHandlerConfig = atmosphereHandlerConfigList62;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = null;
        atmosphereConfig64.setframework(atmosphereFramework65);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray67 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList68, startupHookArray67);
        atmosphereConfig64.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList68);
        atmosphereConfig64.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework73 = atmosphereConfig64.framework();
        java.lang.String str76 = atmosphereConfig64.getInitParameter("", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig64.getproperties();
        atmosphereConfig56.setproperties(strMap77);
        atmosphereConfig43.properties = strMap77;
        atmosphereConfig39.properties = strMap77;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(shutdownHookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
        org.junit.Assert.assertNotNull(startupHookArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(atmosphereFramework73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(strMap77);
    }

    @Test
    public void test06370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06370");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        boolean boolean13 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        atmosphereConfig8.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig8.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        atmosphereConfig18.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig18.startupHook(startupHook32);
        atmosphereConfig33.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig40.startupHook(startupHook41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig47.startupHook(startupHook48);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig49.getstartUpHook();
        atmosphereConfig40.setstartUpHook(startupHookList50);
        atmosphereConfig33.startUpHook = startupHookList50;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig33.properties;
        atmosphereConfig8.setproperties(strMap53);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig8.getproperties();
        atmosphereConfig4.setproperties(strMap55);
        atmosphereConfig4.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig4.properties();
        boolean boolean60 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test06371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06371");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray9 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList10, shutdownHookArray9);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        boolean boolean21 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.getstartUpHook();
        boolean boolean25 = atmosphereConfig23.isSupportSession();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster26 = atmosphereConfig23.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(shutdownHookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test06372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06372");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06373");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        atmosphereConfig4.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray8 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList9, startupHookArray8);
        atmosphereConfig4.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList9);
        java.lang.String str13 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig4.setframework(atmosphereFramework14);
        boolean boolean18 = atmosphereConfig4.getInitParameter("", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06374");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig4.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig4.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig4.setframework(atmosphereFramework10);
        boolean boolean12 = atmosphereConfig4.useServletContextParameters;
        org.slf4j.Logger logger13 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = null;
        atmosphereConfig16.setstartUpHook(startupHookList21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig16.framework();
        org.slf4j.Logger logger24 = atmosphereConfig16.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig16.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory28 = atmosphereConfig4.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(logger24);
        org.junit.Assert.assertNull(startupHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
    }

    @Test
    public void test06375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06375");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.slf4j.Logger logger31 = atmosphereConfig0.getlogger();
        boolean boolean32 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.setSupportSession(false);
        boolean boolean37 = atmosphereConfig0.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test06376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06376");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        int int5 = atmosphereConfig0.getInitParameter("hi!", (-1));
        int int8 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 1);
        boolean boolean9 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.startupHook(startupHook15);
        int int19 = atmosphereConfig14.getInitParameter("", (int) (short) 10);
        java.lang.String str21 = atmosphereConfig14.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig14.startupHook(startupHook22);
        boolean boolean24 = atmosphereConfig23.getuseServletContextParameters();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig23.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig23.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList26;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig0.framework = atmosphereFramework28;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
    }

    @Test
    public void test06377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06377");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig18.startUpHook;
        org.slf4j.Logger logger58 = atmosphereConfig18.getlogger();
        java.lang.String str60 = atmosphereConfig18.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig18.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig18.shutdownHook(shutdownHook62);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig18.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig18.startUpHook;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNotNull(logger58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(atmosphereFramework61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(shutdownHookList64);
        org.junit.Assert.assertNotNull(startupHookList65);
    }

    @Test
    public void test06378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06378");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        boolean boolean38 = atmosphereConfig18.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig18.startupHook(startupHook39);
        atmosphereConfig40.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = atmosphereConfig42.getframework();
        boolean boolean51 = atmosphereConfig42.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.destroy();
        boolean boolean54 = atmosphereConfig52.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig56.startupHook(startupHook57);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = atmosphereConfig58.getframework();
        atmosphereConfig58.throwExceptionOnCloned = false;
        boolean boolean62 = atmosphereConfig58.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig58.shutdownHooks;
        atmosphereConfig42.setshutdownHooks(shutdownHookList63);
        atmosphereConfig40.shutdownHooks = shutdownHookList63;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNull(atmosphereFramework50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNull(atmosphereFramework59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(shutdownHookList63);
    }

    @Test
    public void test06379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06379");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.getframework();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration14 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNull(atmosphereFramework11);
    }

    @Test
    public void test06380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06380");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.shutdownHook(shutdownHook22);
        atmosphereConfig23.sessionTimeoutRemovalAllowed = true;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory26 = atmosphereConfig23.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
    }

    @Test
    public void test06381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06381");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        boolean boolean28 = atmosphereConfig23.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        atmosphereConfig29.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig29.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig29.atmosphereHandlerConfig;
        atmosphereConfig23.atmosphereHandlerConfig = atmosphereHandlerConfigList42;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig0.populate(atmosphereConfig23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.destroy();
        boolean boolean47 = atmosphereConfig45.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList49, shutdownHookArray48);
        atmosphereConfig45.shutdownHooks = shutdownHookList49;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig45.getproperties();
        org.slf4j.Logger logger53 = atmosphereConfig45.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig45.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig45.getframework();
        atmosphereConfig45.supportSession = false;
        int int60 = atmosphereConfig45.getInitParameter("hi!", (int) (byte) 100);
        atmosphereConfig45.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig45.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig45.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig45.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig45.shutdownHook(shutdownHook66);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig67.getstartUpHook();
        atmosphereConfig23.startUpHook = startupHookList68;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig70.destroy();
        boolean boolean72 = atmosphereConfig70.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig70.shutdownHook(shutdownHook73);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig74.startupHook(startupHook75);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework77 = atmosphereConfig76.getframework();
        atmosphereConfig76.throwExceptionOnCloned = false;
        boolean boolean80 = atmosphereConfig76.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = atmosphereConfig76.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig76.properties();
        atmosphereConfig23.setproperties(strMap82);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList84 = atmosphereConfig23.startUpHook;
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(logger53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(atmosphereFramework55);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertNotNull(shutdownHookList64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(startupHookList68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertNull(atmosphereFramework77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(shutdownHookList81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(startupHookList84);
    }

    @Test
    public void test06382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06382");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig9.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig9.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.populate(atmosphereConfig9);
        atmosphereConfig17.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig17.throwExceptionOnCloned = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
    }

    @Test
    public void test06383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06383");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        int int9 = atmosphereConfig4.getInitParameter("", (int) (short) 10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig4.getframework();
        boolean boolean11 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig4.shutdownHook(shutdownHook12);
        boolean boolean14 = atmosphereConfig4.isThrowExceptionOnCloned();
        boolean boolean15 = atmosphereConfig4.isSupportSession();
        java.lang.String str17 = atmosphereConfig4.getInitParameter("hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test06384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06384");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        boolean boolean25 = atmosphereConfig11.throwExceptionOnCloned;
        java.lang.String str28 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig29.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig29.atmosphereHandlerConfig;
        boolean boolean46 = atmosphereConfig29.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        atmosphereConfig29.shutdownHooks = shutdownHookList55;
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig11);
        atmosphereConfig60.setThrowExceptionOnCloned(true);
        java.lang.String str65 = atmosphereConfig60.getInitParameter("hi!", "");
        atmosphereConfig60.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig60.destroy();
        atmosphereConfig60.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = null;
        atmosphereConfig60.setframework(atmosphereFramework70);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
    }

    @Test
    public void test06385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06385");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        boolean boolean6 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig4.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig8.startupHook(startupHook9);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList11;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        boolean boolean15 = atmosphereConfig14.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig14.startupHook(startupHook16);
        boolean boolean18 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig14.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig29.shutdownHooks = shutdownHookList33;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig29.getproperties();
        atmosphereConfig21.setproperties(strMap36);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig21.startupHook(startupHook38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig41.getAtmosphereHandlerConfig();
        atmosphereConfig40.atmosphereHandlerConfig = atmosphereHandlerConfigList46;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig48.destroy();
        boolean boolean50 = atmosphereConfig48.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray51 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList52, shutdownHookArray51);
        atmosphereConfig48.shutdownHooks = shutdownHookList52;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig48.getproperties();
        atmosphereConfig40.setproperties(strMap55);
        atmosphereConfig39.setproperties(strMap55);
        boolean boolean58 = atmosphereConfig39.sessionTimeoutRemovalAllowed;
        atmosphereConfig39.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig39.properties();
        java.lang.String str63 = atmosphereConfig39.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig64.destroy();
        boolean boolean66 = atmosphereConfig64.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig64.shutdownHook(shutdownHook67);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig68.startupHook(startupHook69);
        boolean boolean71 = atmosphereConfig70.useServletContextParameters;
        atmosphereConfig70.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig70.properties;
        atmosphereConfig70.supportSession = false;
        boolean boolean76 = atmosphereConfig70.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig70.properties;
        atmosphereConfig39.setproperties(strMap77);
        atmosphereConfig14.setproperties(strMap77);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strMap77);
    }

    @Test
    public void test06386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06386");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        atmosphereConfig13.setproperties(strMap28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig13.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig32.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig40.shutdownHooks = shutdownHookList44;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig40.getproperties();
        atmosphereConfig32.setproperties(strMap47);
        atmosphereConfig31.setproperties(strMap47);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig31.shutdownHooks;
        int int53 = atmosphereConfig31.getInitParameter("", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig31.getproperties();
        atmosphereConfig0.setproperties(strMap54);
        atmosphereConfig0.useServletContextParameters = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strMap54);
    }

    @Test
    public void test06387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06387");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.initComplete();
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig12.getproperties();
        org.slf4j.Logger logger20 = atmosphereConfig12.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig12.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig12.getframework();
        atmosphereConfig12.supportSession = false;
        int int27 = atmosphereConfig12.getInitParameter("hi!", (int) (byte) 100);
        atmosphereConfig12.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig12.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig0.startupHook(startupHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig39.getAtmosphereHandlerConfig();
        boolean boolean45 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray46 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList47, shutdownHookArray46);
        atmosphereConfig39.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList47);
        atmosphereConfig34.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList47);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList47);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test06388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06388");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        atmosphereConfig18.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray53 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList54, shutdownHookArray53);
        atmosphereConfig50.shutdownHooks = shutdownHookList54;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig50.getproperties();
        atmosphereConfig42.setproperties(strMap57);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig42.startupHook(startupHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        boolean boolean64 = atmosphereConfig62.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig62.shutdownHook(shutdownHook65);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig62.getAtmosphereHandlerConfig();
        atmosphereConfig61.atmosphereHandlerConfig = atmosphereHandlerConfigList67;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig69.destroy();
        boolean boolean71 = atmosphereConfig69.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray72 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList73, shutdownHookArray72);
        atmosphereConfig69.shutdownHooks = shutdownHookList73;
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig69.getproperties();
        atmosphereConfig61.setproperties(strMap76);
        atmosphereConfig60.setproperties(strMap76);
        int int81 = atmosphereConfig60.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig60.startupHook(startupHook82);
        atmosphereConfig83.setThrowExceptionOnCloned(false);
        atmosphereConfig83.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig83.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = atmosphereConfig18.populate(atmosphereConfig83);
        boolean boolean89 = atmosphereConfig18.throwExceptionOnCloned;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster90 = atmosphereConfig18.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertNotNull(atmosphereConfig88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test06389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06389");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        atmosphereConfig7.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        boolean boolean21 = atmosphereConfig7.throwExceptionOnCloned;
        java.lang.String str24 = atmosphereConfig7.getInitParameter("hi!", "");
        boolean boolean25 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        atmosphereConfig26.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig26.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig26.framework = atmosphereFramework31;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig37.startupHook(startupHook38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig37.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig37.getshutdownHooks();
        atmosphereConfig26.shutdownHooks = shutdownHookList41;
        atmosphereConfig7.shutdownHooks = shutdownHookList41;
        atmosphereConfig4.shutdownHooks = shutdownHookList41;
        boolean boolean45 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig4.properties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test06390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06390");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties();
        atmosphereConfig0.setproperties(strMap16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig0.properties();
        atmosphereConfig0.throwExceptionOnCloned = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster23 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test06391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06391");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.destroy();
        boolean boolean7 = atmosphereConfig5.supportSession;
        boolean boolean8 = atmosphereConfig5.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig13.startupHook(startupHook14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.getstartUpHook();
        atmosphereConfig5.startUpHook = startupHookList16;
        atmosphereConfig0.setstartUpHook(startupHookList16);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig31.startupHook(startupHook32);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
    }

    @Test
    public void test06392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06392");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig18.properties;
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig18.framework();
        boolean boolean23 = atmosphereConfig18.supportSession;
        boolean boolean24 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = null;
        atmosphereConfig18.setshutdownHooks(shutdownHookList25);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider27 = atmosphereConfig18.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test06393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06393");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNull(atmosphereFramework9);
    }

    @Test
    public void test06394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06394");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        atmosphereConfig43.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        atmosphereConfig47.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig43.populate(atmosphereConfig47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.destroy();
        boolean boolean54 = atmosphereConfig52.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig56.startupHook(startupHook57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig59.shutdownHook(shutdownHook62);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig63.startupHook(startupHook64);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList66 = atmosphereConfig65.getstartUpHook();
        atmosphereConfig56.setstartUpHook(startupHookList66);
        atmosphereConfig51.startUpHook = startupHookList66;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig41.populate(atmosphereConfig51);
        boolean boolean70 = atmosphereConfig41.isSupportSession();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(startupHookList66);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test06395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06395");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework();
        int int13 = atmosphereConfig0.getInitParameter("hi!", 0);
        boolean boolean16 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean17 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06396");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.destroy();
        boolean boolean7 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList13, shutdownHookArray12);
        atmosphereConfig5.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList13);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList13);
        atmosphereConfig0.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        atmosphereConfig19.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig19.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig24.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig32.getproperties();
        atmosphereConfig24.setproperties(strMap39);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig24.startupHook(startupHook41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig42.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig42.atmosphereHandlerConfig;
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray49 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50, shutdownHookArray49);
        atmosphereConfig46.shutdownHooks = shutdownHookList50;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig46.getproperties();
        atmosphereConfig19.properties = strMap53;
        atmosphereConfig19.destroy();
        int int58 = atmosphereConfig19.getInitParameter("", (int) ' ');
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig19.startupHook(startupHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig61.shutdownHook(shutdownHook64);
        atmosphereConfig61.setuseServletContextParameters(false);
        atmosphereConfig61.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList70 = atmosphereConfig61.getstartUpHook();
        atmosphereConfig19.setstartUpHook(startupHookList70);
        atmosphereConfig0.setstartUpHook(startupHookList70);
        java.lang.Class<?> wildcardClass73 = atmosphereConfig0.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 32 + "'", int58 == 32);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(startupHookList70);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test06397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06397");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig13.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.startupHook(startupHook21);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.getstartUpHook();
        atmosphereConfig13.setstartUpHook(startupHookList23);
        atmosphereConfig8.startUpHook = startupHookList23;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig8.framework();
        atmosphereConfig8.setThrowExceptionOnCloned(false);
        atmosphereConfig8.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig8.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig32.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig40.shutdownHooks = shutdownHookList44;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig40.getproperties();
        atmosphereConfig32.setproperties(strMap47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig32.startupHook(startupHook49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.destroy();
        boolean boolean54 = atmosphereConfig52.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig52.getAtmosphereHandlerConfig();
        atmosphereConfig51.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63, shutdownHookArray62);
        atmosphereConfig59.shutdownHooks = shutdownHookList63;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig59.getproperties();
        atmosphereConfig51.setproperties(strMap66);
        atmosphereConfig50.setproperties(strMap66);
        int int71 = atmosphereConfig50.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig50.startupHook(startupHook72);
        java.lang.String str75 = atmosphereConfig73.getInitParameter("hi!");
        atmosphereConfig73.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig78.destroy();
        boolean boolean80 = atmosphereConfig78.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook81 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig78.shutdownHook(shutdownHook81);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook83 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig84 = atmosphereConfig82.startupHook(startupHook83);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework85 = atmosphereConfig84.getframework();
        org.slf4j.Logger logger86 = atmosphereConfig84.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig87 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig87.destroy();
        boolean boolean89 = atmosphereConfig87.supportSession;
        boolean boolean90 = atmosphereConfig87.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList91 = atmosphereConfig87.startUpHook;
        atmosphereConfig84.startUpHook = startupHookList91;
        atmosphereConfig73.startUpHook = startupHookList91;
        atmosphereConfig73.initComplete();
        boolean boolean95 = atmosphereConfig73.useServletContextParameters;
        atmosphereConfig73.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList97 = atmosphereConfig73.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList97;
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
        org.junit.Assert.assertNotNull(atmosphereConfig84);
        org.junit.Assert.assertNull(atmosphereFramework85);
        org.junit.Assert.assertNotNull(logger86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(startupHookList91);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList97);
    }

    @Test
    public void test06398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06398");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.framework = atmosphereFramework9;
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
    }

    @Test
    public void test06399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06399");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        atmosphereConfig16.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        atmosphereConfig20.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig16.populate(atmosphereConfig20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig26.getAtmosphereHandlerConfig();
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList31;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig25.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34);
        atmosphereConfig16.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig16.setframework(atmosphereFramework38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig16.properties;
        atmosphereConfig4.setproperties(strMap40);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig4.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig47.startupHook(startupHook48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig47.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig47.getshutdownHooks();
        java.lang.String str54 = atmosphereConfig47.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig47.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig47.shutdownHook(shutdownHook56);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig57.startUpHook;
        boolean boolean59 = atmosphereConfig57.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig4.populate(atmosphereConfig57);
        java.lang.String str62 = atmosphereConfig57.getInitParameter("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test06400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06400");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig4.setframework(atmosphereFramework6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        atmosphereConfig8.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig8.startupHook(startupHook25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig27.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig35.shutdownHooks = shutdownHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig35.getproperties();
        atmosphereConfig27.setproperties(strMap42);
        atmosphereConfig26.setproperties(strMap42);
        atmosphereConfig4.properties = strMap42;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig4.shutdownHook(shutdownHook46);
        java.lang.String str49 = atmosphereConfig4.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig4.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
    }

    @Test
    public void test06401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06401");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8, shutdownHookArray7);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig16.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig16.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.populate(atmosphereConfig34);
        boolean boolean39 = atmosphereConfig34.getInitParameter("", true);
        atmosphereConfig34.setSupportSession(false);
        boolean boolean42 = atmosphereConfig34.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig34.getframework();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(atmosphereFramework43);
    }

    @Test
    public void test06402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06402");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        atmosphereConfig0.destroy();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory11 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
    }

    @Test
    public void test06403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06403");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        atmosphereConfig4.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray8 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList9, startupHookArray8);
        atmosphereConfig4.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList9);
        java.lang.String str13 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig4.setframework(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig4.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig4.shutdownHook(shutdownHook17);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig4.startupHook(startupHook21);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
    }

    @Test
    public void test06404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06404");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig4.setframework(atmosphereFramework6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        atmosphereConfig8.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig8.startupHook(startupHook25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig27.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig35.shutdownHooks = shutdownHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig35.getproperties();
        atmosphereConfig27.setproperties(strMap42);
        atmosphereConfig26.setproperties(strMap42);
        atmosphereConfig4.properties = strMap42;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig4.shutdownHook(shutdownHook46);
        java.lang.String str50 = atmosphereConfig4.getInitParameter("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory51 = atmosphereConfig4.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
    }

    @Test
    public void test06405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06405");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        boolean boolean22 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.destroy();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster24 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test06406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06406");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        boolean boolean25 = atmosphereConfig24.supportSession;
        atmosphereConfig24.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.startupHook(startupHook33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig34.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig34.properties;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster37 = atmosphereConfig34.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test06407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06407");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray13 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList14, shutdownHookArray13);
        atmosphereConfig10.shutdownHooks = shutdownHookList14;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig10.getproperties();
        atmosphereConfig9.properties = strMap17;
        atmosphereConfig0.properties = strMap17;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.useServletContextParameters = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig26.getAtmosphereHandlerConfig();
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList31;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList37, shutdownHookArray36);
        atmosphereConfig33.shutdownHooks = shutdownHookList37;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig33.getproperties();
        atmosphereConfig25.setproperties(strMap40);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig25.startupHook(startupHook42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.destroy();
        boolean boolean47 = atmosphereConfig45.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig45.getAtmosphereHandlerConfig();
        atmosphereConfig44.atmosphereHandlerConfig = atmosphereHandlerConfigList50;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.destroy();
        boolean boolean54 = atmosphereConfig52.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray55 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList56, shutdownHookArray55);
        atmosphereConfig52.shutdownHooks = shutdownHookList56;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig52.getproperties();
        atmosphereConfig44.setproperties(strMap59);
        atmosphereConfig43.setproperties(strMap59);
        int int64 = atmosphereConfig43.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig43.startupHook(startupHook65);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig67.destroy();
        boolean boolean69 = atmosphereConfig67.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig67.shutdownHook(shutdownHook70);
        atmosphereConfig67.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig74.destroy();
        boolean boolean76 = atmosphereConfig74.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook77 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig74.shutdownHook(shutdownHook77);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig74.getAtmosphereHandlerConfig();
        atmosphereConfig67.atmosphereHandlerConfig = atmosphereHandlerConfigList79;
        atmosphereConfig43.atmosphereHandlerConfig = atmosphereHandlerConfigList79;
        java.lang.String str83 = atmosphereConfig43.getInitParameter("hi!");
        atmosphereConfig43.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework86 = atmosphereConfig43.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig43.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = atmosphereConfig43.getproperties();
        atmosphereConfig0.setproperties(strMap88);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory90 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(atmosphereFramework86);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertNotNull(strMap88);
    }

    @Test
    public void test06408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06408");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = null;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.shutdownHook(shutdownHook9);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig0.getstartUpHook();
        boolean boolean14 = atmosphereConfig0.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext15 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(startupHookList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06409");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig18.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.getproperties();
        atmosphereConfig20.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig20.properties = strMap44;
        atmosphereConfig20.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig20.setSupportSession(false);
        boolean boolean50 = atmosphereConfig20.isThrowExceptionOnCloned();
        boolean boolean51 = atmosphereConfig20.isSupportSession();
        boolean boolean52 = atmosphereConfig20.throwExceptionOnCloned;
        boolean boolean53 = atmosphereConfig20.throwExceptionOnCloned;
        java.lang.String str55 = atmosphereConfig20.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.sessionTimeoutRemovalAllowed;
        boolean boolean59 = atmosphereConfig56.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig20.populate(atmosphereConfig56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig18.populate(atmosphereConfig20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        atmosphereConfig62.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList66 = atmosphereConfig62.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig67.destroy();
        boolean boolean69 = atmosphereConfig67.supportSession;
        boolean boolean70 = atmosphereConfig67.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig71.destroy();
        boolean boolean73 = atmosphereConfig71.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig71.shutdownHook(shutdownHook74);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig75.startupHook(startupHook76);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList78 = atmosphereConfig77.getstartUpHook();
        atmosphereConfig67.startUpHook = startupHookList78;
        atmosphereConfig62.setstartUpHook(startupHookList78);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = atmosphereConfig62.getshutdownHooks();
        atmosphereConfig20.shutdownHooks = shutdownHookList81;
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = atmosphereConfig20.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework84 = null;
        atmosphereConfig20.setframework(atmosphereFramework84);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(startupHookList66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(startupHookList78);
        org.junit.Assert.assertNotNull(shutdownHookList81);
        org.junit.Assert.assertNotNull(strMap83);
    }

    @Test
    public void test06410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06410");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        boolean boolean5 = atmosphereConfig3.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig3.shutdownHooks = shutdownHookList7;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig3.getproperties();
        atmosphereConfig2.properties = strMap10;
        boolean boolean12 = atmosphereConfig2.useServletContextParameters;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig2.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        boolean boolean19 = atmosphereConfig18.supportSession;
        boolean boolean20 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig18.framework = atmosphereFramework21;
        java.lang.String str24 = atmosphereConfig18.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.startupHook(startupHook30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig29.properties;
        java.lang.String str34 = atmosphereConfig29.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig29.getproperties();
        atmosphereConfig18.properties = strMap35;
        atmosphereConfig18.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig2.populate(atmosphereConfig18);
        atmosphereConfig18.setSupportSession(true);
        boolean boolean44 = atmosphereConfig18.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.destroy();
        atmosphereConfig45.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig45.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        atmosphereConfig45.framework = atmosphereFramework50;
        boolean boolean52 = atmosphereConfig45.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig45.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig45.startupHook(startupHook54);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig55.properties();
        atmosphereConfig55.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63, shutdownHookArray62);
        atmosphereConfig59.shutdownHooks = shutdownHookList63;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig59.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig59.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        atmosphereConfig59.setframework(atmosphereFramework68);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig70.destroy();
        boolean boolean72 = atmosphereConfig70.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray73 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList74 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList74, shutdownHookArray73);
        atmosphereConfig70.shutdownHooks = shutdownHookList74;
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig70.getproperties();
        atmosphereConfig70.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray80 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList81 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList81, startupHookArray80);
        atmosphereConfig70.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList81);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList84 = atmosphereConfig70.startUpHook;
        atmosphereConfig59.startUpHook = startupHookList84;
        atmosphereConfig55.startUpHook = startupHookList84;
        atmosphereConfig18.startUpHook = startupHookList84;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster88 = atmosphereConfig18.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(startupHookArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(startupHookList84);
    }

    @Test
    public void test06411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06411");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        boolean boolean14 = atmosphereConfig13.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig15.setframework(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19, startupHookArray18);
        atmosphereConfig15.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19);
        atmosphereConfig15.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig15.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig15.startupHook(startupHook25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig27.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        atmosphereConfig32.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        atmosphereConfig36.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig32.populate(atmosphereConfig36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig42.getAtmosphereHandlerConfig();
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray49 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50, shutdownHookArray49);
        atmosphereConfig41.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50);
        atmosphereConfig32.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        atmosphereConfig32.setframework(atmosphereFramework54);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig32.properties;
        atmosphereConfig15.setproperties(strMap56);
        atmosphereConfig13.setproperties(strMap56);
        java.lang.String str60 = atmosphereConfig13.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig13.startUpHook;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider62 = atmosphereConfig13.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(shutdownHookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(startupHookList61);
    }

    @Test
    public void test06412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06412");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str17 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean18 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        atmosphereConfig19.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig19.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig19.framework = atmosphereFramework24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig30.startupHook(startupHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig30.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig30.getshutdownHooks();
        atmosphereConfig19.shutdownHooks = shutdownHookList34;
        atmosphereConfig0.shutdownHooks = shutdownHookList34;
        boolean boolean37 = atmosphereConfig0.supportSession;
        atmosphereConfig0.initComplete();
        java.lang.String str41 = atmosphereConfig0.getInitParameter("hi!", "");
        java.lang.String str43 = atmosphereConfig0.getInitParameter("hi!");
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test06413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06413");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        boolean boolean10 = atmosphereConfig4.getInitParameter("hi!", true);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig4.shutdownHook(shutdownHook15);
        boolean boolean17 = atmosphereConfig16.isSupportSession();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = atmosphereConfig16.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06414");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig6.useServletContextParameters;
        atmosphereConfig6.initComplete();
        boolean boolean9 = atmosphereConfig6.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.getshutdownHooks();
        boolean boolean11 = atmosphereConfig6.supportSession;
        atmosphereConfig6.setThrowExceptionOnCloned(true);
        int int16 = atmosphereConfig6.getInitParameter("", (int) (byte) 100);
        atmosphereConfig6.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    }

    @Test
    public void test06415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06415");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.shutdownHook(shutdownHook20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration22 = atmosphereConfig21.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
    }

    @Test
    public void test06416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06416");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        boolean boolean8 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig10.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.startupHook(startupHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig16.properties;
        java.lang.String str21 = atmosphereConfig16.getInitParameter("hi!");
        atmosphereConfig16.destroy();
        int int25 = atmosphereConfig16.getInitParameter("hi!", (int) (short) 1);
        boolean boolean28 = atmosphereConfig16.getInitParameter("hi!", false);
        atmosphereConfig16.throwExceptionOnCloned = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig16.getstartUpHook();
        atmosphereConfig10.setstartUpHook(startupHookList31);
        boolean boolean33 = atmosphereConfig10.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test06417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06417");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        atmosphereConfig16.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        atmosphereConfig20.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig16.populate(atmosphereConfig20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig26.getAtmosphereHandlerConfig();
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList31;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig25.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34);
        atmosphereConfig16.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig16.setframework(atmosphereFramework38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig16.properties;
        atmosphereConfig4.setproperties(strMap40);
        atmosphereConfig4.destroy();
        atmosphereConfig4.destroy();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test06418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06418");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.startupHook(startupHook29);
        int int33 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig35.getAtmosphereHandlerConfig();
        atmosphereConfig34.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig42.shutdownHooks = shutdownHookList46;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig42.getproperties();
        atmosphereConfig34.setproperties(strMap49);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig34.startupHook(startupHook51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig54.getAtmosphereHandlerConfig();
        atmosphereConfig53.atmosphereHandlerConfig = atmosphereHandlerConfigList59;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray64 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList65, shutdownHookArray64);
        atmosphereConfig61.shutdownHooks = shutdownHookList65;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig61.getproperties();
        atmosphereConfig53.setproperties(strMap68);
        atmosphereConfig52.setproperties(strMap68);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList71 = atmosphereConfig52.shutdownHooks;
        int int74 = atmosphereConfig52.getInitParameter("", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = atmosphereConfig52.getproperties();
        boolean boolean76 = atmosphereConfig52.supportSession;
        atmosphereConfig52.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig0.populate(atmosphereConfig52);
        atmosphereConfig0.useServletContextParameters = false;
        int int84 = atmosphereConfig0.getInitParameter("", (int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(shutdownHookList71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
    }

    @Test
    public void test06419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06419");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory7 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
    }

    @Test
    public void test06420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06420");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.lang.String str4 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.getproperties();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.shutdownHook(shutdownHook9);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.atmosphereHandlerConfig;
        boolean boolean12 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06421");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        int int9 = atmosphereConfig4.getInitParameter("", (int) (short) 10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig4.atmosphereHandlerConfig;
        org.slf4j.Logger logger11 = atmosphereConfig4.getlogger();
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig4.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList22, shutdownHookArray21);
        atmosphereConfig18.shutdownHooks = shutdownHookList22;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig18.getproperties();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig28.properties();
        atmosphereConfig18.setproperties(strMap34);
        java.lang.String str38 = atmosphereConfig18.getInitParameter("", "");
        atmosphereConfig18.setuseServletContextParameters(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig18.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig18.shutdownHooks;
        atmosphereConfig4.shutdownHooks = shutdownHookList42;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(logger11);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
    }

    @Test
    public void test06422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06422");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.properties;
        org.slf4j.Logger logger14 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(logger14);
    }

    @Test
    public void test06423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06423");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig6.useServletContextParameters;
        atmosphereConfig6.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.properties;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig6.shutdownHook(shutdownHook10);
        atmosphereConfig11.useServletContextParameters = false;
        atmosphereConfig11.supportSession = false;
        atmosphereConfig11.throwExceptionOnCloned = true;
        atmosphereConfig11.supportSession = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
    }

    @Test
    public void test06424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06424");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        boolean boolean17 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        atmosphereConfig18.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig18.startupHook(startupHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        atmosphereConfig34.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig41.getAtmosphereHandlerConfig();
        atmosphereConfig34.atmosphereHandlerConfig = atmosphereHandlerConfigList46;
        boolean boolean48 = atmosphereConfig34.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig34.getproperties();
        atmosphereConfig33.properties = strMap49;
        atmosphereConfig33.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig33.startupHook(startupHook53);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig33.shutdownHook(shutdownHook55);
        atmosphereConfig33.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig0.populate(atmosphereConfig33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = atmosphereConfig59.getshutdownHooks();
        atmosphereConfig59.destroy();
        atmosphereConfig59.destroy();
        boolean boolean63 = atmosphereConfig59.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(shutdownHookList60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test06425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06425");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        boolean boolean25 = atmosphereConfig11.throwExceptionOnCloned;
        java.lang.String str28 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig29.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig29.atmosphereHandlerConfig;
        boolean boolean46 = atmosphereConfig29.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        atmosphereConfig29.shutdownHooks = shutdownHookList55;
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig11);
        atmosphereConfig60.setThrowExceptionOnCloned(true);
        java.lang.String str65 = atmosphereConfig60.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = atmosphereConfig60.framework();
        int int69 = atmosphereConfig60.getInitParameter("", (int) (byte) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig70.destroy();
        atmosphereConfig70.supportSession = false;
        atmosphereConfig70.throwExceptionOnCloned = true;
        boolean boolean76 = atmosphereConfig70.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig77.destroy();
        boolean boolean79 = atmosphereConfig77.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig77.shutdownHook(shutdownHook80);
        boolean boolean82 = atmosphereConfig81.supportSession;
        boolean boolean83 = atmosphereConfig81.isSessionTimeoutRemovalAllowed();
        boolean boolean84 = atmosphereConfig81.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = atmosphereConfig81.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = atmosphereConfig70.populate(atmosphereConfig81);
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = atmosphereConfig70.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList88 = atmosphereConfig70.atmosphereHandlerConfig;
        atmosphereConfig60.atmosphereHandlerConfig = atmosphereHandlerConfigList88;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList90 = atmosphereConfig60.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(atmosphereFramework66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(atmosphereConfig86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList88);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList90);
    }

    @Test
    public void test06426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06426");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig18.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26);
        atmosphereConfig0.shutdownHooks = shutdownHookList26;
        atmosphereConfig0.setuseServletContextParameters(false);
        boolean boolean32 = atmosphereConfig0.useServletContextParameters;
        boolean boolean33 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
    }

    @Test
    public void test06427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06427");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig18.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.getproperties();
        atmosphereConfig20.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig20.properties = strMap44;
        atmosphereConfig20.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig20.setSupportSession(false);
        boolean boolean50 = atmosphereConfig20.isThrowExceptionOnCloned();
        boolean boolean51 = atmosphereConfig20.isSupportSession();
        boolean boolean52 = atmosphereConfig20.throwExceptionOnCloned;
        boolean boolean53 = atmosphereConfig20.throwExceptionOnCloned;
        java.lang.String str55 = atmosphereConfig20.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.sessionTimeoutRemovalAllowed;
        boolean boolean59 = atmosphereConfig56.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig20.populate(atmosphereConfig56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig18.populate(atmosphereConfig20);
        atmosphereConfig18.supportSession = true;
        atmosphereConfig18.destroy();
        java.lang.String str67 = atmosphereConfig18.getInitParameter("", "");
        boolean boolean68 = atmosphereConfig18.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = atmosphereConfig18.framework();
        boolean boolean70 = atmosphereConfig18.getuseServletContextParameters();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(atmosphereFramework69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test06428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06428");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean31 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean32 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(startupHookList33);
    }

    @Test
    public void test06429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06429");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        boolean boolean25 = atmosphereConfig24.supportSession;
        atmosphereConfig24.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.startupHook(startupHook33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig39.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig46.startupHook(startupHook47);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.getstartUpHook();
        atmosphereConfig39.setstartUpHook(startupHookList49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        atmosphereConfig51.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.destroy();
        atmosphereConfig55.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig51.populate(atmosphereConfig55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig61.shutdownHook(shutdownHook64);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig61.getAtmosphereHandlerConfig();
        atmosphereConfig60.atmosphereHandlerConfig = atmosphereHandlerConfigList66;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray68 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList69, shutdownHookArray68);
        atmosphereConfig60.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList69);
        atmosphereConfig51.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList69);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework73 = null;
        atmosphereConfig51.setframework(atmosphereFramework73);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = atmosphereConfig51.properties;
        atmosphereConfig39.setproperties(strMap75);
        atmosphereConfig0.properties = strMap75;
        boolean boolean78 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework79 = atmosphereConfig0.framework;
        atmosphereConfig0.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig0.properties;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertNotNull(shutdownHookArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(atmosphereFramework79);
        org.junit.Assert.assertNotNull(strMap82);
    }

    @Test
    public void test06430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06430");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        atmosphereConfig18.destroy();
        boolean boolean38 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig43.startupHook(startupHook44);
        int int48 = atmosphereConfig43.getInitParameter("", (int) (short) 10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig43.atmosphereHandlerConfig;
        org.slf4j.Logger logger50 = atmosphereConfig43.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.destroy();
        boolean boolean54 = atmosphereConfig52.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig52.getAtmosphereHandlerConfig();
        atmosphereConfig51.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63, shutdownHookArray62);
        atmosphereConfig59.shutdownHooks = shutdownHookList63;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig59.getproperties();
        atmosphereConfig51.setproperties(strMap66);
        boolean boolean70 = atmosphereConfig51.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = atmosphereConfig51.framework();
        boolean boolean72 = atmosphereConfig51.isSessionTimeoutRemovalAllowed();
        boolean boolean73 = atmosphereConfig51.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList74 = atmosphereConfig51.getstartUpHook();
        atmosphereConfig43.setstartUpHook(startupHookList74);
        atmosphereConfig18.setstartUpHook(startupHookList74);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook77 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig18.shutdownHook(shutdownHook77);
        atmosphereConfig78.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig78.startupHook(startupHook80);
        int int84 = atmosphereConfig81.getInitParameter("hi!", 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertNotNull(logger50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(atmosphereFramework71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(startupHookList74);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
    }

    @Test
    public void test06431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06431");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        atmosphereConfig17.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig24.getAtmosphereHandlerConfig();
        atmosphereConfig17.atmosphereHandlerConfig = atmosphereHandlerConfigList29;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig17.startupHook(startupHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        atmosphereConfig33.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig40.getAtmosphereHandlerConfig();
        atmosphereConfig33.atmosphereHandlerConfig = atmosphereHandlerConfigList45;
        boolean boolean47 = atmosphereConfig33.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig33.getproperties();
        atmosphereConfig32.properties = strMap48;
        atmosphereConfig32.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig32.properties;
        atmosphereConfig0.setproperties(strMap52);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = atmosphereConfig0.framework();
        boolean boolean55 = atmosphereConfig0.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(atmosphereFramework54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test06432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06432");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        boolean boolean34 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        boolean boolean39 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig36.startUpHook;
        atmosphereConfig33.setstartUpHook(startupHookList40);
        atmosphereConfig0.startUpHook = startupHookList40;
        boolean boolean43 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        atmosphereConfig44.setuseServletContextParameters(false);
        atmosphereConfig44.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig44.getstartUpHook();
        boolean boolean54 = atmosphereConfig44.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.destroy();
        boolean boolean57 = atmosphereConfig55.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig55.shutdownHook(shutdownHook58);
        boolean boolean60 = atmosphereConfig59.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig59.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.properties;
        atmosphereConfig59.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig59.shutdownHook(shutdownHook65);
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig66.properties;
        atmosphereConfig44.properties = strMap67;
        atmosphereConfig0.properties = strMap67;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration70 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(strMap67);
    }

    @Test
    public void test06433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06433");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig6.useServletContextParameters;
        atmosphereConfig6.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.properties;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig6.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig11.startupHook(startupHook13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = atmosphereConfig11.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
    }

    @Test
    public void test06434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06434");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.destroy();
        boolean boolean7 = atmosphereConfig5.supportSession;
        boolean boolean8 = atmosphereConfig5.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig13.startupHook(startupHook14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.getstartUpHook();
        atmosphereConfig5.startUpHook = startupHookList16;
        atmosphereConfig0.setstartUpHook(startupHookList16);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        atmosphereConfig0.setuseServletContextParameters(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig0.properties();
        org.slf4j.Logger logger30 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(logger30);
    }

    @Test
    public void test06435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06435");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        boolean boolean8 = atmosphereConfig6.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig6.getAtmosphereHandlerConfig();
        atmosphereConfig5.atmosphereHandlerConfig = atmosphereHandlerConfigList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17, shutdownHookArray16);
        atmosphereConfig13.shutdownHooks = shutdownHookList17;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig13.getproperties();
        atmosphereConfig5.setproperties(strMap20);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig5.startupHook(startupHook22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig23.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig23.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        atmosphereConfig27.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig27.getAtmosphereHandlerConfig();
        atmosphereConfig27.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig27.startupHook(startupHook34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig27.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList36);
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig0.startupHook(startupHook39);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.lang.String str44 = atmosphereConfig0.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig0.properties;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test06436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06436");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig0.setframework(atmosphereFramework22);
        boolean boolean24 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig0.startupHook(startupHook25);
        atmosphereConfig26.setSupportSession(true);
        atmosphereConfig26.setThrowExceptionOnCloned(true);
        boolean boolean31 = atmosphereConfig26.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig26.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
    }

    @Test
    public void test06437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06437");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.lang.String str20 = atmosphereConfig18.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig18.framework = atmosphereFramework21;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig18.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig26.getAtmosphereHandlerConfig();
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList31;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList37, shutdownHookArray36);
        atmosphereConfig33.shutdownHooks = shutdownHookList37;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig33.getproperties();
        atmosphereConfig25.setproperties(strMap40);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig25.startupHook(startupHook42);
        java.lang.String str45 = atmosphereConfig25.getInitParameter("");
        boolean boolean46 = atmosphereConfig25.getuseServletContextParameters();
        atmosphereConfig25.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray52 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList53, shutdownHookArray52);
        atmosphereConfig49.shutdownHooks = shutdownHookList53;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig49.getproperties();
        atmosphereConfig49.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig59.shutdownHook(shutdownHook62);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig59.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig59.properties();
        atmosphereConfig49.setproperties(strMap65);
        java.lang.String str69 = atmosphereConfig49.getInitParameter("", "");
        atmosphereConfig49.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework72 = atmosphereConfig49.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList73 = atmosphereConfig49.atmosphereHandlerConfig;
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList73;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList73;
        boolean boolean76 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap77 = atmosphereConfig18.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNull(atmosphereFramework72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test06438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06438");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig18.properties();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig18.setframework(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig24.setframework(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig18.startUpHook = startupHookList28;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
    }

    @Test
    public void test06439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06439");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean6 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        boolean boolean12 = atmosphereConfig11.supportSession;
        boolean boolean13 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        boolean boolean14 = atmosphereConfig11.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig11.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.populate(atmosphereConfig11);
        boolean boolean19 = atmosphereConfig16.getInitParameter("hi!", true);
        org.slf4j.Logger logger20 = atmosphereConfig16.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig16.framework = atmosphereFramework21;
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(logger20);
    }

    @Test
    public void test06440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06440");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig18.shutdownHooks;
        java.lang.String str43 = atmosphereConfig18.getInitParameter("hi!", "");
        org.slf4j.Logger logger44 = atmosphereConfig18.getlogger();
        atmosphereConfig18.throwExceptionOnCloned = true;
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig18.properties();
        atmosphereConfig18.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = atmosphereConfig18.framework;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(logger44);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(atmosphereFramework52);
    }

    @Test
    public void test06441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06441");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.startupHook(startupHook26);
        org.slf4j.Logger logger28 = atmosphereConfig0.getlogger();
        boolean boolean29 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig0.getframework();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertNull(atmosphereFramework33);
    }

    @Test
    public void test06442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06442");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.getstartUpHook();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig16.properties = strMap24;
        atmosphereConfig16.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig16.properties;
        atmosphereConfig11.properties = strMap28;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig11.setframework(atmosphereFramework30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        atmosphereConfig11.setproperties(strMap32);
        atmosphereConfig11.throwExceptionOnCloned = false;
        atmosphereConfig11.throwExceptionOnCloned = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test06443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06443");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig16.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.getproperties();
        atmosphereConfig15.properties = strMap31;
        atmosphereConfig15.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig15.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig15.startupHook(startupHook36);
        atmosphereConfig15.setuseServletContextParameters(true);
        atmosphereConfig15.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig15.shutdownHook(shutdownHook42);
        boolean boolean46 = atmosphereConfig43.getInitParameter("", true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test06444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06444");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.framework = atmosphereFramework10;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
    }

    @Test
    public void test06445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06445");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig16.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig16.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig34.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig37.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig40.shutdownHooks = shutdownHookList44;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig40.getproperties();
        atmosphereConfig39.properties = strMap47;
        atmosphereConfig34.setproperties(strMap47);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig34.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList50);
        atmosphereConfig0.destroy();
        boolean boolean53 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig0.shutdownHook(shutdownHook54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        atmosphereConfig59.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray63 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList64, startupHookArray63);
        atmosphereConfig59.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList64);
        atmosphereConfig56.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList64);
        atmosphereConfig0.startUpHook = startupHookList64;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig0.startupHook(startupHook69);
        org.slf4j.Logger logger71 = atmosphereConfig70.getlogger();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(startupHookArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(logger71);
    }

    @Test
    public void test06446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06446");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.destroy();
        boolean boolean7 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig5.properties();
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig14.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig14.startUpHook;
        atmosphereConfig5.setstartUpHook(startupHookList18);
        atmosphereConfig0.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig22.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig22.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig22.properties;
        boolean boolean27 = atmosphereConfig22.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.startupHook(startupHook33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig34.getframework();
        atmosphereConfig34.throwExceptionOnCloned = false;
        boolean boolean38 = atmosphereConfig34.throwExceptionOnCloned;
        atmosphereConfig34.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig34.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig34.getshutdownHooks();
        atmosphereConfig22.shutdownHooks = shutdownHookList42;
        atmosphereConfig22.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
    }

    @Test
    public void test06447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06447");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray22 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList23, shutdownHookArray22);
        atmosphereConfig19.shutdownHooks = shutdownHookList23;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig19.getproperties();
        org.slf4j.Logger logger27 = atmosphereConfig19.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig19.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig19.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList29;
        atmosphereConfig0.throwExceptionOnCloned = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(logger27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(startupHookList29);
    }

    @Test
    public void test06448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06448");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig16.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.getproperties();
        atmosphereConfig15.properties = strMap31;
        atmosphereConfig15.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig15.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig15.startupHook(startupHook36);
        atmosphereConfig15.setuseServletContextParameters(true);
        atmosphereConfig15.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig15.throwExceptionOnCloned = true;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory44 = atmosphereConfig15.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
    }

    @Test
    public void test06449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06449");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig59.setframework(atmosphereFramework60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63, startupHookArray62);
        atmosphereConfig59.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63);
        atmosphereConfig59.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig59.framework();
        java.lang.String str71 = atmosphereConfig59.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig18.populate(atmosphereConfig59);
        atmosphereConfig59.sessionTimeoutRemovalAllowed = false;
        org.slf4j.Logger logger75 = atmosphereConfig59.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig76.destroy();
        atmosphereConfig76.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList80 = atmosphereConfig76.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = null;
        atmosphereConfig76.framework = atmosphereFramework81;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig76.getshutdownHooks();
        atmosphereConfig59.shutdownHooks = shutdownHookList83;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook85 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = atmosphereConfig59.shutdownHook(shutdownHook85);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework87 = atmosphereConfig59.framework();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(startupHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(logger75);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList80);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNotNull(atmosphereConfig86);
        org.junit.Assert.assertNull(atmosphereFramework87);
    }

    @Test
    public void test06450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06450");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties();
        atmosphereConfig0.setproperties(strMap16);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig0.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig0.properties();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig24.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig32.getproperties();
        atmosphereConfig24.setproperties(strMap39);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig24.startupHook(startupHook41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig44.getAtmosphereHandlerConfig();
        atmosphereConfig43.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig51.shutdownHooks = shutdownHookList55;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig51.getproperties();
        atmosphereConfig43.setproperties(strMap58);
        atmosphereConfig42.setproperties(strMap58);
        int int63 = atmosphereConfig42.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig42.startupHook(startupHook64);
        atmosphereConfig65.setThrowExceptionOnCloned(false);
        atmosphereConfig65.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = null;
        atmosphereConfig65.setframework(atmosphereFramework69);
        atmosphereConfig65.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig65.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList74 = atmosphereConfig65.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList74;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig76 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(startupHookList74);
    }

    @Test
    public void test06451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06451");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig59.setframework(atmosphereFramework60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63, startupHookArray62);
        atmosphereConfig59.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63);
        atmosphereConfig59.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig59.framework();
        java.lang.String str71 = atmosphereConfig59.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig18.populate(atmosphereConfig59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        boolean boolean75 = atmosphereConfig73.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig73.shutdownHook(shutdownHook76);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList78 = atmosphereConfig77.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = atmosphereConfig77.getshutdownHooks();
        boolean boolean80 = atmosphereConfig77.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = atmosphereConfig77.shutdownHooks;
        atmosphereConfig59.shutdownHooks = shutdownHookList81;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList83 = atmosphereConfig59.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig84 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig84.destroy();
        boolean boolean86 = atmosphereConfig84.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray87 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList88 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList88, shutdownHookArray87);
        atmosphereConfig84.shutdownHooks = shutdownHookList88;
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = atmosphereConfig84.getproperties();
        org.slf4j.Logger logger92 = atmosphereConfig84.getlogger();
        atmosphereConfig84.setuseServletContextParameters(true);
        org.slf4j.Logger logger95 = atmosphereConfig84.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList96 = atmosphereConfig84.startUpHook;
        atmosphereConfig59.startUpHook = startupHookList96;
        boolean boolean98 = atmosphereConfig59.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(startupHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(startupHookList78);
        org.junit.Assert.assertNotNull(shutdownHookList79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(shutdownHookList81);
        org.junit.Assert.assertNotNull(startupHookList83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(logger92);
        org.junit.Assert.assertNotNull(logger95);
        org.junit.Assert.assertNotNull(startupHookList96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test06452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06452");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig2.destroy();
        boolean boolean4 = atmosphereConfig2.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig2.shutdownHook(shutdownHook5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig6.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig8.getframework();
        org.slf4j.Logger logger10 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        boolean boolean14 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig11.startUpHook;
        atmosphereConfig8.startUpHook = startupHookList15;
        atmosphereConfig0.setstartUpHook(startupHookList15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.startupHook(startupHook23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig22.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig22.getshutdownHooks();
        java.lang.String str29 = atmosphereConfig22.getInitParameter("hi!", "hi!");
        atmosphereConfig22.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig32.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig40.shutdownHooks = shutdownHookList44;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig40.getproperties();
        atmosphereConfig32.setproperties(strMap47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig32.startupHook(startupHook49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.destroy();
        boolean boolean54 = atmosphereConfig52.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig52.getAtmosphereHandlerConfig();
        atmosphereConfig51.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63, shutdownHookArray62);
        atmosphereConfig59.shutdownHooks = shutdownHookList63;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig59.getproperties();
        atmosphereConfig51.setproperties(strMap66);
        atmosphereConfig50.setproperties(strMap66);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = atmosphereConfig50.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = null;
        atmosphereConfig50.setframework(atmosphereFramework70);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig50.shutdownHook(shutdownHook72);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig74.destroy();
        boolean boolean76 = atmosphereConfig74.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook77 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig74.shutdownHook(shutdownHook77);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig74.getAtmosphereHandlerConfig();
        boolean boolean80 = atmosphereConfig74.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray81 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList82 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList82, shutdownHookArray81);
        atmosphereConfig74.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList82);
        atmosphereConfig50.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList82);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList86 = atmosphereConfig50.startUpHook;
        atmosphereConfig22.setstartUpHook(startupHookList86);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = atmosphereConfig0.populate(atmosphereConfig22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework89 = null;
        atmosphereConfig0.framework = atmosphereFramework89;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(shutdownHookList69);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(startupHookList86);
        org.junit.Assert.assertNotNull(atmosphereConfig88);
    }

    @Test
    public void test06453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06453");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.useServletContextParameters = true;
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig0.framework;
        boolean boolean27 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06454");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        atmosphereConfig17.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        atmosphereConfig21.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig17.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig27.getAtmosphereHandlerConfig();
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray34 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList35, shutdownHookArray34);
        atmosphereConfig26.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList35);
        atmosphereConfig17.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList35);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList35);
        java.lang.String str42 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        atmosphereConfig43.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig50.getAtmosphereHandlerConfig();
        atmosphereConfig43.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig43.startupHook(startupHook57);
        atmosphereConfig58.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig61.shutdownHook(shutdownHook64);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig65.startupHook(startupHook66);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig68.destroy();
        boolean boolean70 = atmosphereConfig68.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook71 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig68.shutdownHook(shutdownHook71);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig72.startupHook(startupHook73);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList75 = atmosphereConfig74.getstartUpHook();
        atmosphereConfig65.setstartUpHook(startupHookList75);
        atmosphereConfig58.startUpHook = startupHookList75;
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = atmosphereConfig58.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig79.destroy();
        boolean boolean81 = atmosphereConfig79.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray82 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList83, shutdownHookArray82);
        atmosphereConfig79.shutdownHooks = shutdownHookList83;
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = atmosphereConfig79.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig79.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework88 = null;
        atmosphereConfig79.setframework(atmosphereFramework88);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList90 = atmosphereConfig79.getshutdownHooks();
        atmosphereConfig58.setshutdownHooks(shutdownHookList90);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework92 = null;
        atmosphereConfig58.framework = atmosphereFramework92;
        atmosphereConfig58.supportSession = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList96 = atmosphereConfig58.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList96;
        atmosphereConfig0.useServletContextParameters = true;
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(shutdownHookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertNotNull(startupHookList75);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertNotNull(shutdownHookList90);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList96);
    }

    @Test
    public void test06455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06455");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        org.slf4j.Logger logger29 = atmosphereConfig21.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig21.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig21.getframework();
        atmosphereConfig21.supportSession = false;
        atmosphereConfig21.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig21.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList36;
        boolean boolean38 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.destroy();
        boolean boolean40 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
    }

    @Test
    public void test06456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06456");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        atmosphereConfig41.setThrowExceptionOnCloned(false);
        atmosphereConfig41.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig41.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig46.atmosphereHandlerConfig = atmosphereHandlerConfigList52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray57 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList58, shutdownHookArray57);
        atmosphereConfig54.shutdownHooks = shutdownHookList58;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig54.getproperties();
        atmosphereConfig46.setproperties(strMap61);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig46.startupHook(startupHook63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig66.destroy();
        boolean boolean68 = atmosphereConfig66.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig66.shutdownHook(shutdownHook69);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig66.getAtmosphereHandlerConfig();
        atmosphereConfig65.atmosphereHandlerConfig = atmosphereHandlerConfigList71;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        boolean boolean75 = atmosphereConfig73.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray76 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList77, shutdownHookArray76);
        atmosphereConfig73.shutdownHooks = shutdownHookList77;
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = atmosphereConfig73.getproperties();
        atmosphereConfig65.setproperties(strMap80);
        atmosphereConfig64.setproperties(strMap80);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig64.shutdownHooks;
        atmosphereConfig41.shutdownHooks = shutdownHookList83;
        atmosphereConfig41.useServletContextParameters = true;
        atmosphereConfig41.supportSession = true;
        atmosphereConfig41.sessionTimeoutRemovalAllowed = false;
        java.lang.String str93 = atmosphereConfig41.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework94 = atmosphereConfig41.getframework();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework94);
    }

    @Test
    public void test06457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06457");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        java.lang.String str21 = atmosphereConfig18.getInitParameter("");
        boolean boolean22 = atmosphereConfig18.supportSession;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test06458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06458");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.useServletContextParameters;
        atmosphereConfig18.initComplete();
        atmosphereConfig18.destroy();
        boolean boolean22 = atmosphereConfig18.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig23.throwExceptionOnCloned = false;
        atmosphereConfig23.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig23.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig23.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        atmosphereConfig37.setuseServletContextParameters(false);
        atmosphereConfig37.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray46 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList47, shutdownHookArray46);
        atmosphereConfig37.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList47);
        atmosphereConfig23.shutdownHooks = shutdownHookList47;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig23.startUpHook;
        atmosphereConfig18.startUpHook = startupHookList51;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        atmosphereConfig18.setframework(atmosphereFramework53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig0.populate(atmosphereConfig18);
        boolean boolean56 = atmosphereConfig18.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(shutdownHookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test06459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06459");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig16.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.getproperties();
        atmosphereConfig15.properties = strMap31;
        atmosphereConfig15.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig15.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig15.startupHook(startupHook36);
        atmosphereConfig15.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig41.getAtmosphereHandlerConfig();
        atmosphereConfig40.atmosphereHandlerConfig = atmosphereHandlerConfigList46;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig48.destroy();
        boolean boolean50 = atmosphereConfig48.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray51 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList52, shutdownHookArray51);
        atmosphereConfig48.shutdownHooks = shutdownHookList52;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig48.getproperties();
        atmosphereConfig40.setproperties(strMap55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray60 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList61, shutdownHookArray60);
        atmosphereConfig57.shutdownHooks = shutdownHookList61;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig57.getproperties();
        atmosphereConfig40.properties = strMap64;
        atmosphereConfig40.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig40.setSupportSession(false);
        atmosphereConfig40.supportSession = true;
        org.slf4j.Logger logger72 = atmosphereConfig40.getlogger();
        boolean boolean73 = atmosphereConfig40.useServletContextParameters;
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig40.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig75.destroy();
        boolean boolean77 = atmosphereConfig75.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook78 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig75.shutdownHook(shutdownHook78);
        boolean boolean80 = atmosphereConfig79.supportSession;
        boolean boolean81 = atmosphereConfig79.isSessionTimeoutRemovalAllowed();
        boolean boolean82 = atmosphereConfig79.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework83 = atmosphereConfig79.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList84 = atmosphereConfig79.getshutdownHooks();
        atmosphereConfig40.shutdownHooks = shutdownHookList84;
        atmosphereConfig15.setshutdownHooks(shutdownHookList84);
        boolean boolean87 = atmosphereConfig15.supportSession;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(logger72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(atmosphereFramework83);
        org.junit.Assert.assertNotNull(shutdownHookList84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test06460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06460");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("");
        boolean boolean21 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        atmosphereConfig22.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig22.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig28.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig35.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig35.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        boolean boolean47 = atmosphereConfig46.supportSession;
        boolean boolean48 = atmosphereConfig46.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig50.getAtmosphereHandlerConfig();
        atmosphereConfig49.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray60 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList61, shutdownHookArray60);
        atmosphereConfig57.shutdownHooks = shutdownHookList61;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig57.getproperties();
        atmosphereConfig49.setproperties(strMap64);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig66.destroy();
        boolean boolean68 = atmosphereConfig66.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray69 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList70 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList70, shutdownHookArray69);
        atmosphereConfig66.shutdownHooks = shutdownHookList70;
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig66.getproperties();
        atmosphereConfig49.properties = strMap73;
        atmosphereConfig46.setproperties(strMap73);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig46.getAtmosphereHandlerConfig();
        atmosphereConfig35.atmosphereHandlerConfig = atmosphereHandlerConfigList76;
        atmosphereConfig28.atmosphereHandlerConfig = atmosphereHandlerConfigList76;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig0.populate(atmosphereConfig28);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration80 = atmosphereConfig79.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
    }

    @Test
    public void test06461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06461");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        atmosphereConfig18.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig42.shutdownHooks = shutdownHookList46;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig42.getproperties();
        org.slf4j.Logger logger50 = atmosphereConfig42.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig42.getstartUpHook();
        atmosphereConfig42.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = atmosphereConfig42.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig42.framework();
        boolean boolean56 = atmosphereConfig42.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig57.shutdownHook(shutdownHook60);
        boolean boolean62 = atmosphereConfig61.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig61.shutdownHooks;
        boolean boolean64 = atmosphereConfig61.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig65.destroy();
        boolean boolean67 = atmosphereConfig65.supportSession;
        boolean boolean68 = atmosphereConfig65.isSessionTimeoutRemovalAllowed();
        java.lang.String str70 = atmosphereConfig65.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig72.destroy();
        boolean boolean74 = atmosphereConfig72.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig72.shutdownHook(shutdownHook75);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList77 = atmosphereConfig72.getAtmosphereHandlerConfig();
        atmosphereConfig71.atmosphereHandlerConfig = atmosphereHandlerConfigList77;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig79.destroy();
        boolean boolean81 = atmosphereConfig79.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray82 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList83, shutdownHookArray82);
        atmosphereConfig79.shutdownHooks = shutdownHookList83;
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = atmosphereConfig79.getproperties();
        atmosphereConfig71.setproperties(strMap86);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook88 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig89 = atmosphereConfig71.startupHook(startupHook88);
        org.slf4j.Logger logger90 = atmosphereConfig89.getlogger();
        atmosphereConfig89.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig93 = atmosphereConfig65.populate(atmosphereConfig89);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList94 = atmosphereConfig65.getshutdownHooks();
        atmosphereConfig61.shutdownHooks = shutdownHookList94;
        atmosphereConfig42.setshutdownHooks(shutdownHookList94);
        atmosphereConfig18.shutdownHooks = shutdownHookList94;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap98 = atmosphereConfig18.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(logger50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertNull(atmosphereFramework54);
        org.junit.Assert.assertNull(atmosphereFramework55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(atmosphereConfig89);
        org.junit.Assert.assertNotNull(logger90);
        org.junit.Assert.assertNotNull(atmosphereConfig93);
        org.junit.Assert.assertNotNull(shutdownHookList94);
    }

    @Test
    public void test06462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06462");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17, shutdownHookArray16);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17);
        atmosphereConfig0.shutdownHooks = shutdownHookList17;
        boolean boolean23 = atmosphereConfig0.getInitParameter("", false);
        int int26 = atmosphereConfig0.getInitParameter("", 35);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 35 + "'", int26 == 35);
    }

    @Test
    public void test06463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06463");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig18.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26);
        atmosphereConfig0.shutdownHooks = shutdownHookList26;
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.setSupportSession(true);
        java.lang.String str36 = atmosphereConfig0.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig0.setframework(atmosphereFramework38);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(startupHookList37);
    }

    @Test
    public void test06464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06464");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.destroy();
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        boolean boolean16 = atmosphereConfig14.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig14.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.startupHook(startupHook23);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig24.getshutdownHooks();
        atmosphereConfig14.setshutdownHooks(shutdownHookList25);
        atmosphereConfig0.shutdownHooks = shutdownHookList25;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean30 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig0.setframework(atmosphereFramework31);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test06465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06465");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        boolean boolean8 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.shutdownHook(shutdownHook9);
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig4.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
    }

    @Test
    public void test06466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06466");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig0.framework = atmosphereFramework18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.getproperties();
        atmosphereConfig20.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig20.properties = strMap44;
        atmosphereConfig20.sessionTimeoutRemovalAllowed = true;
        boolean boolean50 = atmosphereConfig20.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig20.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig20.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig0.populate(atmosphereConfig20);
        atmosphereConfig20.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig20.shutdownHook(shutdownHook56);
        boolean boolean60 = atmosphereConfig20.getInitParameter("", true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory61 = atmosphereConfig20.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test06467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06467");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig0.setframework(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig0.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
    }

    @Test
    public void test06468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06468");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig18.properties;
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig18.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig18.properties();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test06469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06469");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig0.setframework(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
    }

    @Test
    public void test06470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06470");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        atmosphereConfig7.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.startupHook(startupHook22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig21.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig21.getshutdownHooks();
        atmosphereConfig7.setshutdownHooks(shutdownHookList25);
        java.lang.String str28 = atmosphereConfig7.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig7.getproperties();
        atmosphereConfig0.properties = strMap29;
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test06471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06471");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig6.useServletContextParameters;
        atmosphereConfig6.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig6.startUpHook;
        boolean boolean10 = atmosphereConfig6.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig6.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig6.properties;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test06472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06472");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig18.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = atmosphereConfig18.getshutdownHooks();
        boolean boolean62 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig18.getstartUpHook();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(shutdownHookList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(startupHookList63);
    }

    @Test
    public void test06473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06473");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        boolean boolean38 = atmosphereConfig18.isThrowExceptionOnCloned();
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        atmosphereConfig18.supportSession = true;
        atmosphereConfig18.setSupportSession(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test06474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06474");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig0.setframework(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig24.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig32.getproperties();
        atmosphereConfig24.setproperties(strMap39);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig24.startupHook(startupHook41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig44.getAtmosphereHandlerConfig();
        atmosphereConfig43.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig51.shutdownHooks = shutdownHookList55;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig51.getproperties();
        atmosphereConfig43.setproperties(strMap58);
        atmosphereConfig42.setproperties(strMap58);
        int int63 = atmosphereConfig42.getInitParameter("", 100);
        atmosphereConfig42.useServletContextParameters = false;
        atmosphereConfig42.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig0.populate(atmosphereConfig42);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList69 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList70 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.useServletContextParameters = false;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(startupHookList69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList70);
    }

    @Test
    public void test06475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06475");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        boolean boolean25 = atmosphereConfig24.supportSession;
        atmosphereConfig24.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        boolean boolean33 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig0.framework;
        boolean boolean37 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig42.startupHook(startupHook43);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig42.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig42.getshutdownHooks();
        java.lang.String str49 = atmosphereConfig42.getInitParameter("hi!", "hi!");
        atmosphereConfig42.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.destroy();
        boolean boolean54 = atmosphereConfig52.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray55 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList56, shutdownHookArray55);
        atmosphereConfig52.shutdownHooks = shutdownHookList56;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig52.getproperties();
        atmosphereConfig52.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63, startupHookArray62);
        atmosphereConfig52.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList66 = atmosphereConfig52.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig68.destroy();
        boolean boolean70 = atmosphereConfig68.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook71 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig68.shutdownHook(shutdownHook71);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList73 = atmosphereConfig68.getAtmosphereHandlerConfig();
        atmosphereConfig67.atmosphereHandlerConfig = atmosphereHandlerConfigList73;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig75.destroy();
        boolean boolean77 = atmosphereConfig75.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray78 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList79, shutdownHookArray78);
        atmosphereConfig75.shutdownHooks = shutdownHookList79;
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig75.getproperties();
        atmosphereConfig67.setproperties(strMap82);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook84 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig85 = atmosphereConfig67.startupHook(startupHook84);
        boolean boolean86 = atmosphereConfig85.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = atmosphereConfig85.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig88.destroy();
        boolean boolean90 = atmosphereConfig88.supportSession;
        boolean boolean91 = atmosphereConfig88.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList92 = atmosphereConfig88.startUpHook;
        atmosphereConfig85.setstartUpHook(startupHookList92);
        atmosphereConfig52.startUpHook = startupHookList92;
        atmosphereConfig42.startUpHook = startupHookList92;
        atmosphereConfig0.setstartUpHook(startupHookList92);
        atmosphereConfig0.useServletContextParameters = false;
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(shutdownHookList46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(startupHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(startupHookList66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList73);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(atmosphereConfig85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(startupHookList92);
    }

    @Test
    public void test06476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06476");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        atmosphereConfig0.setSupportSession(true);
        boolean boolean18 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig0.startupHook(startupHook19);
        boolean boolean21 = atmosphereConfig20.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.shutdownHooks = shutdownHookList22;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test06477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06477");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean6 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean7 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test06478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06478");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig14.shutdownHooks = shutdownHookList18;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig14.getproperties();
        atmosphereConfig6.setproperties(strMap21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig6.startupHook(startupHook23);
        org.slf4j.Logger logger25 = atmosphereConfig24.getlogger();
        atmosphereConfig24.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.populate(atmosphereConfig24);
        atmosphereConfig24.initComplete();
        int int32 = atmosphereConfig24.getInitParameter("hi!", (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(logger25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
    }

    @Test
    public void test06479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06479");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig8.shutdownHook(shutdownHook9);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider11 = atmosphereConfig8.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
    }

    @Test
    public void test06480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06480");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        boolean boolean14 = atmosphereConfig13.supportSession;
        boolean boolean15 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        boolean boolean16 = atmosphereConfig13.getuseServletContextParameters();
        boolean boolean17 = atmosphereConfig13.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig13.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        boolean boolean27 = atmosphereConfig22.isSessionTimeoutRemovalAllowed();
        atmosphereConfig22.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig22.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        atmosphereConfig32.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig39.getAtmosphereHandlerConfig();
        atmosphereConfig32.atmosphereHandlerConfig = atmosphereHandlerConfigList44;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig32.startupHook(startupHook46);
        atmosphereConfig47.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig54.startupHook(startupHook55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig57.shutdownHook(shutdownHook60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig61.startupHook(startupHook62);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = atmosphereConfig63.getstartUpHook();
        atmosphereConfig54.setstartUpHook(startupHookList64);
        atmosphereConfig47.startUpHook = startupHookList64;
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig47.properties;
        atmosphereConfig22.setproperties(strMap67);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig22.getproperties();
        atmosphereConfig0.setproperties(strMap69);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig71.destroy();
        boolean boolean73 = atmosphereConfig71.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig71.shutdownHook(shutdownHook74);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig75.startupHook(startupHook76);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = atmosphereConfig77.getshutdownHooks();
        atmosphereConfig77.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = atmosphereConfig77.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList81;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList83 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.useServletContextParameters = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(startupHookList64);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(shutdownHookList78);
        org.junit.Assert.assertNotNull(shutdownHookList81);
        org.junit.Assert.assertNotNull(startupHookList83);
    }

    @Test
    public void test06481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06481");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        boolean boolean10 = atmosphereConfig4.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.startupHook(startupHook23);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.getstartUpHook();
        atmosphereConfig15.setstartUpHook(startupHookList25);
        atmosphereConfig4.setstartUpHook(startupHookList25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        atmosphereConfig28.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig28.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig28.framework = atmosphereFramework33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig35.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig37.properties = strMap45;
        atmosphereConfig28.properties = strMap45;
        boolean boolean48 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig50.getAtmosphereHandlerConfig();
        atmosphereConfig49.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray60 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList61, shutdownHookArray60);
        atmosphereConfig57.shutdownHooks = shutdownHookList61;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig57.getproperties();
        atmosphereConfig49.setproperties(strMap64);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig49.startupHook(startupHook66);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        atmosphereConfig49.framework = atmosphereFramework68;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig70.destroy();
        boolean boolean72 = atmosphereConfig70.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig70.shutdownHook(shutdownHook73);
        boolean boolean75 = atmosphereConfig74.supportSession;
        boolean boolean76 = atmosphereConfig74.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework77 = null;
        atmosphereConfig74.framework = atmosphereFramework77;
        java.lang.String str80 = atmosphereConfig74.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig81.destroy();
        boolean boolean83 = atmosphereConfig81.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook84 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig85 = atmosphereConfig81.shutdownHook(shutdownHook84);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook86 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig87 = atmosphereConfig85.startupHook(startupHook86);
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = atmosphereConfig85.properties;
        java.lang.String str90 = atmosphereConfig85.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = atmosphereConfig85.getproperties();
        atmosphereConfig74.properties = strMap91;
        atmosphereConfig49.properties = strMap91;
        atmosphereConfig28.setproperties(strMap91);
        atmosphereConfig4.setproperties(strMap91);
        boolean boolean96 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList97 = atmosphereConfig4.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList98 = atmosphereConfig4.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig85);
        org.junit.Assert.assertNotNull(atmosphereConfig87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(shutdownHookList97);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList98);
    }

    @Test
    public void test06482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06482");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
    }

    @Test
    public void test06483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06483");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
    }

    @Test
    public void test06484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06484");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        boolean boolean10 = atmosphereConfig4.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig12.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray22 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList23, shutdownHookArray22);
        atmosphereConfig19.shutdownHooks = shutdownHookList23;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig19.getproperties();
        atmosphereConfig11.setproperties(strMap26);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig11.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        boolean boolean33 = atmosphereConfig31.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig31.getAtmosphereHandlerConfig();
        atmosphereConfig30.atmosphereHandlerConfig = atmosphereHandlerConfigList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig30.setproperties(strMap45);
        atmosphereConfig29.setproperties(strMap45);
        int int50 = atmosphereConfig29.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig29.startupHook(startupHook51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.destroy();
        boolean boolean55 = atmosphereConfig53.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        atmosphereConfig53.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig60.destroy();
        boolean boolean62 = atmosphereConfig60.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig60.shutdownHook(shutdownHook63);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig60.getAtmosphereHandlerConfig();
        atmosphereConfig53.atmosphereHandlerConfig = atmosphereHandlerConfigList65;
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList65;
        java.lang.String str69 = atmosphereConfig29.getInitParameter("hi!");
        java.lang.String str71 = atmosphereConfig29.getInitParameter("hi!");
        atmosphereConfig29.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig4.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig4.shutdownHook(shutdownHook75);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework77 = null;
        atmosphereConfig4.setframework(atmosphereFramework77);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
    }

    @Test
    public void test06485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06485");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig0.framework;
        boolean boolean18 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        atmosphereConfig19.setuseServletContextParameters(false);
        atmosphereConfig19.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig19.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig19.properties();
        atmosphereConfig0.properties = strMap30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        atmosphereConfig32.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        atmosphereConfig36.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig32.populate(atmosphereConfig36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig42.getAtmosphereHandlerConfig();
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray52 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList53, shutdownHookArray52);
        atmosphereConfig49.shutdownHooks = shutdownHookList53;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig49.getproperties();
        atmosphereConfig41.setproperties(strMap56);
        boolean boolean60 = atmosphereConfig41.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig32.populate(atmosphereConfig41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig0.populate(atmosphereConfig61);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig65.destroy();
        boolean boolean67 = atmosphereConfig65.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig65.shutdownHook(shutdownHook68);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList70 = atmosphereConfig65.getAtmosphereHandlerConfig();
        atmosphereConfig64.atmosphereHandlerConfig = atmosphereHandlerConfigList70;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray72 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList73, shutdownHookArray72);
        atmosphereConfig64.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList73);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig0.populate(atmosphereConfig64);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str77 = atmosphereConfig76.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList70);
        org.junit.Assert.assertNotNull(shutdownHookArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
    }

    @Test
    public void test06486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06486");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.startupHook(startupHook29);
        boolean boolean31 = atmosphereConfig30.isSupportSession();
        boolean boolean32 = atmosphereConfig30.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test06487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06487");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig4.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        atmosphereConfig35.setuseServletContextParameters(false);
        atmosphereConfig35.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig35.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig35.framework = atmosphereFramework48;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList50);
        atmosphereConfig4.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = null;
        atmosphereConfig4.shutdownHooks = shutdownHookList54;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        atmosphereConfig56.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig60.destroy();
        atmosphereConfig60.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig56.populate(atmosphereConfig60);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig65.destroy();
        atmosphereConfig65.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList69 = atmosphereConfig65.getAtmosphereHandlerConfig();
        atmosphereConfig65.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig65.startupHook(startupHook72);
        atmosphereConfig65.setuseServletContextParameters(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig65.getAtmosphereHandlerConfig();
        atmosphereConfig64.atmosphereHandlerConfig = atmosphereHandlerConfigList76;
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList76;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = atmosphereConfig4.shutdownHooks;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList69);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertNull(shutdownHookList79);
    }

    @Test
    public void test06488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06488");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig4.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig4.framework();
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.useServletContextParameters = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06489");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig8.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig10.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig10.shutdownHooks;
        atmosphereConfig8.setshutdownHooks(shutdownHookList17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig25.properties;
        atmosphereConfig25.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig30.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig29.setproperties(strMap44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray49 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50, shutdownHookArray49);
        atmosphereConfig46.shutdownHooks = shutdownHookList50;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig46.getproperties();
        atmosphereConfig29.properties = strMap53;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig29.startupHook(startupHook55);
        org.slf4j.Logger logger57 = atmosphereConfig29.getlogger();
        boolean boolean58 = atmosphereConfig29.supportSession;
        java.lang.String str60 = atmosphereConfig29.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig29.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig29.getproperties();
        atmosphereConfig25.properties = strMap62;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig25.atmosphereHandlerConfig;
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList64;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(logger57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
    }

    @Test
    public void test06490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06490");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        atmosphereConfig8.initComplete();
        atmosphereConfig8.throwExceptionOnCloned = false;
        boolean boolean15 = atmosphereConfig8.getInitParameter("hi!", true);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig8.properties;
        atmosphereConfig4.properties = strMap16;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig4.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        atmosphereConfig19.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        atmosphereConfig23.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig19.populate(atmosphereConfig23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig29.getAtmosphereHandlerConfig();
        atmosphereConfig28.atmosphereHandlerConfig = atmosphereHandlerConfigList34;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList37, shutdownHookArray36);
        atmosphereConfig28.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList37);
        atmosphereConfig19.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig19.setframework(atmosphereFramework41);
        boolean boolean43 = atmosphereConfig19.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig19.startupHook(startupHook44);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig19.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig19.startUpHook;
        atmosphereConfig4.startUpHook = startupHookList47;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(startupHookList47);
    }

    @Test
    public void test06491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06491");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        boolean boolean5 = atmosphereConfig3.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig3.shutdownHooks = shutdownHookList7;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig3.getproperties();
        atmosphereConfig2.properties = strMap10;
        boolean boolean12 = atmosphereConfig2.useServletContextParameters;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig2.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig2.setframework(atmosphereFramework14);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig2.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig2.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory18 = atmosphereConfig2.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test06492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06492");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig15.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.startupHook(startupHook23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.startupHook(startupHook30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.getstartUpHook();
        atmosphereConfig22.setstartUpHook(startupHookList32);
        atmosphereConfig15.startUpHook = startupHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig15.properties;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig15.shutdownHook(shutdownHook36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig15.properties();
        boolean boolean39 = atmosphereConfig15.isThrowExceptionOnCloned();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test06493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06493");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties();
        atmosphereConfig0.setproperties(strMap16);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("", "");
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig0.atmosphereHandlerConfig;
        org.slf4j.Logger logger25 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(logger25);
    }

    @Test
    public void test06494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06494");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        boolean boolean6 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig4.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig8.startupHook(startupHook9);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList11;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        atmosphereConfig15.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        boolean boolean29 = atmosphereConfig15.throwExceptionOnCloned;
        java.lang.String str32 = atmosphereConfig15.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        atmosphereConfig33.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig40.getAtmosphereHandlerConfig();
        atmosphereConfig33.atmosphereHandlerConfig = atmosphereHandlerConfigList45;
        atmosphereConfig33.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig33.atmosphereHandlerConfig;
        boolean boolean50 = atmosphereConfig33.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig51.shutdownHook(shutdownHook54);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig51.getAtmosphereHandlerConfig();
        boolean boolean57 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray58 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList59, shutdownHookArray58);
        atmosphereConfig51.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList59);
        atmosphereConfig33.shutdownHooks = shutdownHookList59;
        atmosphereConfig15.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList59);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList59);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig0.properties();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMap65);
    }

    @Test
    public void test06495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06495");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig4.properties();
        boolean boolean9 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray14 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList15, shutdownHookArray14);
        atmosphereConfig11.shutdownHooks = shutdownHookList15;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig11.getproperties();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22, startupHookArray21);
        atmosphereConfig11.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22);
        atmosphereConfig4.startUpHook = startupHookList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30, shutdownHookArray29);
        atmosphereConfig26.shutdownHooks = shutdownHookList30;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig26.getproperties();
        org.slf4j.Logger logger34 = atmosphereConfig26.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig26.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig26.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig26.startupHook(startupHook37);
        atmosphereConfig26.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig26.shutdownHook(shutdownHook41);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig26.getshutdownHooks();
        atmosphereConfig4.shutdownHooks = shutdownHookList43;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.destroy();
        boolean boolean47 = atmosphereConfig45.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        int int54 = atmosphereConfig49.getInitParameter("", (int) (short) 10);
        java.lang.String str56 = atmosphereConfig49.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig49.startupHook(startupHook57);
        atmosphereConfig58.initComplete();
        atmosphereConfig58.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = atmosphereConfig58.shutdownHooks;
        atmosphereConfig4.shutdownHooks = shutdownHookList62;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(logger34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(shutdownHookList62);
    }

    @Test
    public void test06496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06496");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.framework = atmosphereFramework9;
        atmosphereConfig8.destroy();
        boolean boolean12 = atmosphereConfig8.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig8.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig35.getAtmosphereHandlerConfig();
        atmosphereConfig34.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig42.shutdownHooks = shutdownHookList46;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig42.getproperties();
        atmosphereConfig34.setproperties(strMap49);
        atmosphereConfig33.setproperties(strMap49);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig33.shutdownHooks;
        int int55 = atmosphereConfig33.getInitParameter("", 0);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig33.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig57.shutdownHook(shutdownHook60);
        boolean boolean62 = atmosphereConfig61.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig61.properties;
        atmosphereConfig33.setproperties(strMap63);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig33.shutdownHook(shutdownHook65);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig8.populate(atmosphereConfig33);
        boolean boolean68 = atmosphereConfig67.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test06497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06497");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        org.slf4j.Logger logger8 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        atmosphereConfig9.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        atmosphereConfig9.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig9.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig9.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig9.framework = atmosphereFramework27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig4.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig30.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig30.shutdownHooks;
        atmosphereConfig4.setshutdownHooks(shutdownHookList36);
        atmosphereConfig4.initComplete();
        boolean boolean39 = atmosphereConfig4.supportSession;
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider42 = atmosphereConfig4.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test06498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06498");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.shutdownHooks;
        boolean boolean10 = atmosphereConfig0.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties;
        atmosphereConfig0.destroy();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
    }

    @Test
    public void test06499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06499");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.setuseServletContextParameters(false);
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.getproperties();
        atmosphereConfig22.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43, shutdownHookArray42);
        atmosphereConfig39.shutdownHooks = shutdownHookList43;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig39.getproperties();
        atmosphereConfig22.properties = strMap46;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig22.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig53.getproperties();
        atmosphereConfig22.properties = strMap54;
        atmosphereConfig22.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig59.shutdownHook(shutdownHook62);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig59.getAtmosphereHandlerConfig();
        atmosphereConfig58.atmosphereHandlerConfig = atmosphereHandlerConfigList64;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig66.destroy();
        boolean boolean68 = atmosphereConfig66.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray69 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList70 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList70, shutdownHookArray69);
        atmosphereConfig66.shutdownHooks = shutdownHookList70;
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig66.getproperties();
        atmosphereConfig58.setproperties(strMap73);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig75.destroy();
        boolean boolean77 = atmosphereConfig75.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray78 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList79, shutdownHookArray78);
        atmosphereConfig75.shutdownHooks = shutdownHookList79;
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig75.getproperties();
        atmosphereConfig58.properties = strMap82;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig84 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig84.destroy();
        atmosphereConfig84.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList88 = atmosphereConfig84.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework89 = null;
        atmosphereConfig84.framework = atmosphereFramework89;
        boolean boolean91 = atmosphereConfig84.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList92 = atmosphereConfig84.getstartUpHook();
        atmosphereConfig58.startUpHook = startupHookList92;
        atmosphereConfig22.startUpHook = startupHookList92;
        atmosphereConfig0.startUpHook = startupHookList92;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(startupHookList92);
    }

    @Test
    public void test06500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06500");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.startupHook(startupHook26);
        org.slf4j.Logger logger28 = atmosphereConfig0.getlogger();
        boolean boolean29 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(startupHookList33);
    }
}

