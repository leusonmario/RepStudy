import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest9 {

    public static boolean debug = false;

    @Test
    public void test04501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04501");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        boolean boolean25 = atmosphereConfig24.supportSession;
        atmosphereConfig24.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        atmosphereConfig0.properties = strMap38;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig0.supportSession = true;
        java.lang.Class<?> wildcardClass44 = atmosphereConfig0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test04502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04502");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory14 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
    }

    @Test
    public void test04503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04503");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        boolean boolean11 = atmosphereConfig0.isSupportSession();
        boolean boolean12 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig15.getAtmosphereHandlerConfig();
        atmosphereConfig14.atmosphereHandlerConfig = atmosphereHandlerConfigList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig22.shutdownHooks = shutdownHookList26;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.getproperties();
        atmosphereConfig14.setproperties(strMap29);
        boolean boolean33 = atmosphereConfig14.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig14.framework();
        boolean boolean35 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        atmosphereConfig14.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        boolean boolean43 = atmosphereConfig42.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig42.properties;
        atmosphereConfig42.sessionTimeoutRemovalAllowed = true;
        boolean boolean47 = atmosphereConfig42.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig42.properties();
        int int51 = atmosphereConfig42.getInitParameter("", (int) (short) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig42.properties();
        atmosphereConfig14.setproperties(strMap52);
        atmosphereConfig0.setproperties(strMap52);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(atmosphereFramework34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strMap52);
    }

    @Test
    public void test04504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04504");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        boolean boolean10 = atmosphereConfig4.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig12.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray22 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList23, shutdownHookArray22);
        atmosphereConfig19.shutdownHooks = shutdownHookList23;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig19.getproperties();
        atmosphereConfig11.setproperties(strMap26);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig11.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        boolean boolean33 = atmosphereConfig31.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig31.getAtmosphereHandlerConfig();
        atmosphereConfig30.atmosphereHandlerConfig = atmosphereHandlerConfigList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig30.setproperties(strMap45);
        atmosphereConfig29.setproperties(strMap45);
        int int50 = atmosphereConfig29.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig29.startupHook(startupHook51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.destroy();
        boolean boolean55 = atmosphereConfig53.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        atmosphereConfig53.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig60.destroy();
        boolean boolean62 = atmosphereConfig60.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig60.shutdownHook(shutdownHook63);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig60.getAtmosphereHandlerConfig();
        atmosphereConfig53.atmosphereHandlerConfig = atmosphereHandlerConfigList65;
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList65;
        java.lang.String str69 = atmosphereConfig29.getInitParameter("hi!");
        java.lang.String str71 = atmosphereConfig29.getInitParameter("hi!");
        atmosphereConfig29.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig4.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig4.shutdownHook(shutdownHook75);
        boolean boolean77 = atmosphereConfig4.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test04505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04505");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean31 = atmosphereConfig0.isSupportSession();
        boolean boolean32 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean33 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str35 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.sessionTimeoutRemovalAllowed;
        boolean boolean39 = atmosphereConfig36.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig0.populate(atmosphereConfig36);
        boolean boolean41 = atmosphereConfig36.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig36.startupHook(startupHook42);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap44 = atmosphereConfig43.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
    }

    @Test
    public void test04506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04506");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        atmosphereConfig0.setSupportSession(true);
        boolean boolean18 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig0.startupHook(startupHook19);
        boolean boolean21 = atmosphereConfig20.isThrowExceptionOnCloned();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider22 = atmosphereConfig20.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test04507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04507");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig4.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        atmosphereConfig35.setuseServletContextParameters(false);
        atmosphereConfig35.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig35.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig35.framework = atmosphereFramework48;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList50);
        atmosphereConfig4.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig4.properties;
        boolean boolean55 = atmosphereConfig4.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test04508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04508");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        int int9 = atmosphereConfig4.getInitParameter("", (int) (short) 10);
        java.lang.String str11 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig4.startupHook(startupHook12);
        atmosphereConfig13.initComplete();
        boolean boolean15 = atmosphereConfig13.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig13.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig13.getproperties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test04509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04509");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig0.framework;
        boolean boolean18 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.getframework();
        boolean boolean20 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig0.setframework(atmosphereFramework21);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration23 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test04510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04510");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.framework = atmosphereFramework9;
        atmosphereConfig8.destroy();
        boolean boolean12 = atmosphereConfig8.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig8.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig15.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig15.properties();
        org.slf4j.Logger logger22 = atmosphereConfig15.getlogger();
        org.slf4j.Logger logger23 = atmosphereConfig15.getlogger();
        atmosphereConfig15.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig15.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig15.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig14.populate(atmosphereConfig15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig15.startupHook(startupHook29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig15.startUpHook;
        atmosphereConfig15.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(startupHookList31);
    }

    @Test
    public void test04511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04511");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        atmosphereConfig10.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig10.startupHook(startupHook24);
        atmosphereConfig25.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.startupHook(startupHook33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig39.startupHook(startupHook40);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.getstartUpHook();
        atmosphereConfig32.setstartUpHook(startupHookList42);
        atmosphereConfig25.startUpHook = startupHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig25.properties;
        atmosphereConfig0.setproperties(strMap45);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean50 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test04512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04512");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean6 = atmosphereConfig0.useServletContextParameters;
        int int9 = atmosphereConfig0.getInitParameter("", 35);
        atmosphereConfig0.initComplete();
        java.lang.String str13 = atmosphereConfig0.getInitParameter("hi!", "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test04513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04513");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        boolean boolean25 = atmosphereConfig11.throwExceptionOnCloned;
        java.lang.String str28 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig29.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig29.atmosphereHandlerConfig;
        boolean boolean46 = atmosphereConfig29.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        atmosphereConfig29.shutdownHooks = shutdownHookList55;
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig11);
        atmosphereConfig60.setThrowExceptionOnCloned(true);
        java.lang.String str65 = atmosphereConfig60.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = atmosphereConfig60.framework();
        atmosphereConfig60.sessionTimeoutRemovalAllowed = true;
        boolean boolean69 = atmosphereConfig60.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList70 = atmosphereConfig60.atmosphereHandlerConfig;
        java.lang.String str73 = atmosphereConfig60.getInitParameter("hi!", "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(atmosphereFramework66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
    }

    @Test
    public void test04514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04514");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig8.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        boolean boolean20 = atmosphereConfig19.supportSession;
        boolean boolean21 = atmosphereConfig19.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.getproperties();
        atmosphereConfig22.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43, shutdownHookArray42);
        atmosphereConfig39.shutdownHooks = shutdownHookList43;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig39.getproperties();
        atmosphereConfig22.properties = strMap46;
        atmosphereConfig19.setproperties(strMap46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig19.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig4.startupHook(startupHook52);
        boolean boolean54 = atmosphereConfig53.throwExceptionOnCloned;
        atmosphereConfig53.setThrowExceptionOnCloned(false);
        boolean boolean57 = atmosphereConfig53.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig53.properties;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strMap58);
    }

    @Test
    public void test04515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04515");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        int int40 = atmosphereConfig18.getInitParameter("", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig18.getproperties();
        boolean boolean42 = atmosphereConfig18.supportSession;
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        int int47 = atmosphereConfig18.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig18.startupHook(startupHook48);
        atmosphereConfig49.supportSession = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig49);
    }

    @Test
    public void test04516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04516");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        boolean boolean14 = atmosphereConfig13.supportSession;
        boolean boolean15 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        boolean boolean16 = atmosphereConfig13.getuseServletContextParameters();
        boolean boolean17 = atmosphereConfig13.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig13.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList20;
        atmosphereConfig0.setuseServletContextParameters(false);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext24 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
    }

    @Test
    public void test04517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04517");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig18.framework = atmosphereFramework40;
        atmosphereConfig18.supportSession = true;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap44 = atmosphereConfig18.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
    }

    @Test
    public void test04518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04518");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        atmosphereConfig4.throwExceptionOnCloned = true;
        atmosphereConfig4.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig4.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig4.startupHook(startupHook13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = atmosphereConfig4.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
    }

    @Test
    public void test04519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04519");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.getframework();
        boolean boolean9 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean10 = atmosphereConfig0.useServletContextParameters;
        boolean boolean11 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.setuseServletContextParameters(false);
        boolean boolean16 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory17 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test04520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04520");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        boolean boolean22 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        atmosphereConfig24.setuseServletContextParameters(false);
        atmosphereConfig24.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig24.supportSession = true;
        boolean boolean35 = atmosphereConfig24.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig37.getAtmosphereHandlerConfig();
        atmosphereConfig36.atmosphereHandlerConfig = atmosphereHandlerConfigList42;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray47 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList48, shutdownHookArray47);
        atmosphereConfig44.shutdownHooks = shutdownHookList48;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig44.getproperties();
        atmosphereConfig36.setproperties(strMap51);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig36.startupHook(startupHook53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig56.getAtmosphereHandlerConfig();
        atmosphereConfig55.atmosphereHandlerConfig = atmosphereHandlerConfigList61;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig63.destroy();
        boolean boolean65 = atmosphereConfig63.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray66 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList67, shutdownHookArray66);
        atmosphereConfig63.shutdownHooks = shutdownHookList67;
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig63.getproperties();
        atmosphereConfig55.setproperties(strMap70);
        atmosphereConfig54.setproperties(strMap70);
        int int75 = atmosphereConfig54.getInitParameter("", 100);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList76 = atmosphereConfig54.shutdownHooks;
        boolean boolean77 = atmosphereConfig54.isSupportSession();
        boolean boolean78 = atmosphereConfig54.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = atmosphereConfig54.getshutdownHooks();
        atmosphereConfig24.setshutdownHooks(shutdownHookList79);
        atmosphereConfig0.shutdownHooks = shutdownHookList79;
        java.lang.Class<?> wildcardClass82 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertNotNull(shutdownHookList76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(shutdownHookList79);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test04521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04521");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.supportSession = true;
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.getproperties();
        boolean boolean15 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test04522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04522");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig18.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26);
        atmosphereConfig0.shutdownHooks = shutdownHookList26;
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.setSupportSession(true);
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig0.framework = atmosphereFramework36;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test04523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04523");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        atmosphereConfig4.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray8 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList9, startupHookArray8);
        atmosphereConfig4.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.getstartUpHook();
        atmosphereConfig16.setstartUpHook(startupHookList26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        atmosphereConfig28.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        atmosphereConfig32.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig28.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig38.getAtmosphereHandlerConfig();
        atmosphereConfig37.atmosphereHandlerConfig = atmosphereHandlerConfigList43;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig37.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46);
        atmosphereConfig28.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        atmosphereConfig28.setframework(atmosphereFramework50);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig28.properties;
        atmosphereConfig16.setproperties(strMap52);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig16.getstartUpHook();
        atmosphereConfig4.startUpHook = startupHookList54;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext56 = atmosphereConfig4.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(startupHookList54);
    }

    @Test
    public void test04524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04524");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        boolean boolean5 = atmosphereConfig3.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig3.shutdownHooks = shutdownHookList7;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig3.getproperties();
        atmosphereConfig2.properties = strMap10;
        boolean boolean12 = atmosphereConfig2.useServletContextParameters;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig2.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig2.properties;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration15 = atmosphereConfig2.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test04525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04525");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig6.getframework();
        atmosphereConfig6.setThrowExceptionOnCloned(true);
        boolean boolean12 = atmosphereConfig6.getInitParameter("", true);
        int int15 = atmosphereConfig6.getInitParameter("hi!", (int) (byte) 1);
        java.lang.String str17 = atmosphereConfig6.getInitParameter("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration18 = atmosphereConfig6.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test04526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04526");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig6.useServletContextParameters;
        atmosphereConfig6.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.properties;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig6.shutdownHook(shutdownHook10);
        atmosphereConfig11.useServletContextParameters = false;
        atmosphereConfig11.supportSession = false;
        boolean boolean16 = atmosphereConfig11.useServletContextParameters;
        atmosphereConfig11.setSupportSession(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test04527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04527");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        boolean boolean18 = atmosphereConfig15.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.getstartUpHook();
        atmosphereConfig15.startUpHook = startupHookList26;
        atmosphereConfig0.startUpHook = startupHookList26;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig0.framework();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNull(atmosphereFramework29);
    }

    @Test
    public void test04528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04528");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig16.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.getproperties();
        atmosphereConfig15.properties = strMap31;
        atmosphereConfig15.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig15.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = null;
        atmosphereConfig15.setproperties(strMap36);
        boolean boolean40 = atmosphereConfig15.getInitParameter("", true);
        atmosphereConfig15.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        atmosphereConfig15.framework = atmosphereFramework43;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test04529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04529");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.destroy();
        boolean boolean7 = atmosphereConfig5.supportSession;
        boolean boolean8 = atmosphereConfig5.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig13.startupHook(startupHook14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.getstartUpHook();
        atmosphereConfig5.startUpHook = startupHookList16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig5.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        atmosphereConfig20.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig27.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        boolean boolean34 = atmosphereConfig20.throwExceptionOnCloned;
        java.lang.String str37 = atmosphereConfig20.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        atmosphereConfig38.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.destroy();
        boolean boolean47 = atmosphereConfig45.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig45.getAtmosphereHandlerConfig();
        atmosphereConfig38.atmosphereHandlerConfig = atmosphereHandlerConfigList50;
        atmosphereConfig38.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig38.atmosphereHandlerConfig;
        boolean boolean55 = atmosphereConfig38.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig56.getAtmosphereHandlerConfig();
        boolean boolean62 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray63 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList64, shutdownHookArray63);
        atmosphereConfig56.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList64);
        atmosphereConfig38.shutdownHooks = shutdownHookList64;
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList64);
        atmosphereConfig5.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList64);
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig5.properties();
        atmosphereConfig0.properties = strMap70;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strMap70);
    }

    @Test
    public void test04530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04530");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        boolean boolean10 = atmosphereConfig4.getInitParameter("hi!", true);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.setuseServletContextParameters(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig4.shutdownHooks;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(shutdownHookList15);
    }

    @Test
    public void test04531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04531");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = null;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList12);
        boolean boolean14 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.startupHook(startupHook15);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig0.properties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory21 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test04532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04532");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.lang.String str8 = atmosphereConfig0.getInitParameter("hi!");
        atmosphereConfig0.supportSession = true;
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test04533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04533");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig0.setframework(atmosphereFramework28);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig30 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test04534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04534");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig0.framework = atmosphereFramework18;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig21.setframework(atmosphereFramework22);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig21.getshutdownHooks();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(shutdownHookList24);
    }

    @Test
    public void test04535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04535");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8, shutdownHookArray7);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig19.getAtmosphereHandlerConfig();
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30, shutdownHookArray29);
        atmosphereConfig26.shutdownHooks = shutdownHookList30;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig26.getproperties();
        atmosphereConfig18.setproperties(strMap33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig18.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig38.getAtmosphereHandlerConfig();
        atmosphereConfig37.atmosphereHandlerConfig = atmosphereHandlerConfigList43;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.destroy();
        boolean boolean47 = atmosphereConfig45.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList49, shutdownHookArray48);
        atmosphereConfig45.shutdownHooks = shutdownHookList49;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig45.getproperties();
        atmosphereConfig37.setproperties(strMap52);
        atmosphereConfig36.setproperties(strMap52);
        atmosphereConfig36.destroy();
        java.lang.String str58 = atmosphereConfig36.getInitParameter("", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = atmosphereConfig36.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList59);
        org.slf4j.Logger logger61 = atmosphereConfig0.getlogger();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster62 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(shutdownHookList59);
        org.junit.Assert.assertNotNull(logger61);
    }

    @Test
    public void test04536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04536");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster13 = atmosphereConfig4.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
    }

    @Test
    public void test04537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04537");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        boolean boolean5 = atmosphereConfig3.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig3.shutdownHooks = shutdownHookList7;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig3.getproperties();
        atmosphereConfig2.properties = strMap10;
        boolean boolean12 = atmosphereConfig2.useServletContextParameters;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig2.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        boolean boolean19 = atmosphereConfig18.supportSession;
        boolean boolean20 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig18.framework = atmosphereFramework21;
        java.lang.String str24 = atmosphereConfig18.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.startupHook(startupHook30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig29.properties;
        java.lang.String str34 = atmosphereConfig29.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig29.getproperties();
        atmosphereConfig18.properties = strMap35;
        atmosphereConfig18.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig2.populate(atmosphereConfig18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig2.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig2.setframework(atmosphereFramework41);
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
    }

    @Test
    public void test04538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04538");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        atmosphereConfig18.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray53 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList54, shutdownHookArray53);
        atmosphereConfig50.shutdownHooks = shutdownHookList54;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig50.getproperties();
        atmosphereConfig42.setproperties(strMap57);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig42.startupHook(startupHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        boolean boolean64 = atmosphereConfig62.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig62.shutdownHook(shutdownHook65);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig62.getAtmosphereHandlerConfig();
        atmosphereConfig61.atmosphereHandlerConfig = atmosphereHandlerConfigList67;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig69.destroy();
        boolean boolean71 = atmosphereConfig69.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray72 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList73, shutdownHookArray72);
        atmosphereConfig69.shutdownHooks = shutdownHookList73;
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig69.getproperties();
        atmosphereConfig61.setproperties(strMap76);
        atmosphereConfig60.setproperties(strMap76);
        int int81 = atmosphereConfig60.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig60.startupHook(startupHook82);
        atmosphereConfig83.setThrowExceptionOnCloned(false);
        atmosphereConfig83.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig83.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = atmosphereConfig18.populate(atmosphereConfig83);
        atmosphereConfig18.destroy();
        boolean boolean90 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework91 = atmosphereConfig18.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook92 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig93 = atmosphereConfig18.startupHook(startupHook92);
        boolean boolean94 = atmosphereConfig18.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList95 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig18.useServletContextParameters = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertNotNull(atmosphereConfig88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(atmosphereFramework91);
        org.junit.Assert.assertNotNull(atmosphereConfig93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(shutdownHookList95);
    }

    @Test
    public void test04539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04539");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties();
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig35.getAtmosphereHandlerConfig();
        atmosphereConfig34.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig42.shutdownHooks = shutdownHookList46;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig42.getproperties();
        atmosphereConfig34.setproperties(strMap49);
        atmosphereConfig33.setproperties(strMap49);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig33.shutdownHooks;
        boolean boolean53 = atmosphereConfig33.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig33.properties;
        boolean boolean55 = atmosphereConfig33.useServletContextParameters;
        boolean boolean56 = atmosphereConfig33.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig57.shutdownHook(shutdownHook58);
        atmosphereConfig57.setSupportSession(true);
        atmosphereConfig57.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig64.destroy();
        boolean boolean66 = atmosphereConfig64.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig64.shutdownHook(shutdownHook67);
        atmosphereConfig64.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig71.destroy();
        boolean boolean73 = atmosphereConfig71.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig71.shutdownHook(shutdownHook74);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig71.getAtmosphereHandlerConfig();
        atmosphereConfig64.atmosphereHandlerConfig = atmosphereHandlerConfigList76;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook78 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig64.startupHook(startupHook78);
        atmosphereConfig64.initComplete();
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray81 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList82 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList82, atmosphereHandlerConfigArray81);
        atmosphereConfig64.atmosphereHandlerConfig = atmosphereHandlerConfigList82;
        atmosphereConfig57.atmosphereHandlerConfig = atmosphereHandlerConfigList82;
        atmosphereConfig33.atmosphereHandlerConfig = atmosphereHandlerConfigList82;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList82;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test04540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04540");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
    }

    @Test
    public void test04541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04541");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        int int40 = atmosphereConfig18.getInitParameter("", 0);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        boolean boolean47 = atmosphereConfig46.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig46.properties;
        atmosphereConfig18.setproperties(strMap48);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig18.shutdownHook(shutdownHook50);
        atmosphereConfig51.initComplete();
        int int55 = atmosphereConfig51.getInitParameter("", (int) '4');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
    }

    @Test
    public void test04542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04542");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.startUpHook;
        boolean boolean12 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test04543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04543");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        atmosphereConfig0.setSupportSession(false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration15 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
    }

    @Test
    public void test04544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04544");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setuseServletContextParameters(true);
        int int8 = atmosphereConfig0.getInitParameter("", 0);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        atmosphereConfig10.setuseServletContextParameters(false);
        atmosphereConfig10.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig10.supportSession = true;
        boolean boolean21 = atmosphereConfig10.throwExceptionOnCloned;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.lang.String str28 = atmosphereConfig0.getInitParameter("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration29 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test04545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04545");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean5 = atmosphereConfig0.useServletContextParameters;
        org.slf4j.Logger logger6 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(logger6);
    }

    @Test
    public void test04546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04546");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        boolean boolean13 = atmosphereConfig0.getInitParameter("", true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test04547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04547");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        boolean boolean8 = atmosphereConfig6.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig6.getAtmosphereHandlerConfig();
        atmosphereConfig5.atmosphereHandlerConfig = atmosphereHandlerConfigList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17, shutdownHookArray16);
        atmosphereConfig13.shutdownHooks = shutdownHookList17;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig13.getproperties();
        atmosphereConfig5.setproperties(strMap20);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig5.startupHook(startupHook22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig23.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig23.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig0.properties = strMap34;
        atmosphereConfig0.destroy();
        int int39 = atmosphereConfig0.getInitParameter("", (int) ' ');
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig0.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        atmosphereConfig42.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig42.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList51);
        org.slf4j.Logger logger53 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 32 + "'", int39 == 32);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(logger53);
    }

    @Test
    public void test04548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04548");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        atmosphereConfig28.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig28.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig0.getframework();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNull(atmosphereFramework35);
    }

    @Test
    public void test04549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04549");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean4 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.getframework();
        boolean boolean8 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test04550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04550");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean31 = atmosphereConfig0.isSupportSession();
        boolean boolean32 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig0.framework = atmosphereFramework33;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.useServletContextParameters = false;
        boolean boolean38 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test04551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04551");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean37 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig4.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig4.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig4.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig4.framework;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(atmosphereFramework41);
    }

    @Test
    public void test04552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04552");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        boolean boolean5 = atmosphereConfig3.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        atmosphereConfig6.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig6.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        atmosphereConfig3.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        atmosphereConfig0.startUpHook = startupHookList11;
        int int18 = atmosphereConfig0.getInitParameter("hi!", (int) (byte) 10);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
    }

    @Test
    public void test04553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04553");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig0.startUpHook;
        boolean boolean18 = atmosphereConfig0.getInitParameter("hi!", false);
        boolean boolean19 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test04554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04554");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        boolean boolean8 = atmosphereConfig6.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray9 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList10, shutdownHookArray9);
        atmosphereConfig6.shutdownHooks = shutdownHookList10;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig6.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList16, startupHookArray15);
        atmosphereConfig6.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList16);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList16);
        atmosphereConfig0.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig22.shutdownHooks = shutdownHookList26;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.getproperties();
        atmosphereConfig22.throwExceptionOnCloned = false;
        atmosphereConfig22.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig22.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList33;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(startupHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(startupHookList33);
    }

    @Test
    public void test04555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04555");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        boolean boolean25 = atmosphereConfig11.throwExceptionOnCloned;
        java.lang.String str28 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig29.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig29.atmosphereHandlerConfig;
        boolean boolean46 = atmosphereConfig29.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        atmosphereConfig29.shutdownHooks = shutdownHookList55;
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig11);
        atmosphereConfig60.setThrowExceptionOnCloned(true);
        java.lang.String str65 = atmosphereConfig60.getInitParameter("hi!", "");
        atmosphereConfig60.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig68.destroy();
        boolean boolean70 = atmosphereConfig68.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook71 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig68.shutdownHook(shutdownHook71);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList73 = atmosphereConfig68.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList74 = atmosphereConfig68.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList75 = atmosphereConfig68.getAtmosphereHandlerConfig();
        atmosphereConfig60.atmosphereHandlerConfig = atmosphereHandlerConfigList75;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework77 = atmosphereConfig60.framework;
        atmosphereConfig60.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList73);
        org.junit.Assert.assertNotNull(shutdownHookList74);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList75);
        org.junit.Assert.assertNull(atmosphereFramework77);
    }

    @Test
    public void test04556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04556");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        atmosphereConfig0.setSupportSession(true);
        boolean boolean17 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test04557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04557");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig35.getAtmosphereHandlerConfig();
        atmosphereConfig34.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig42.shutdownHooks = shutdownHookList46;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig42.getproperties();
        atmosphereConfig34.setproperties(strMap49);
        atmosphereConfig33.setproperties(strMap49);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig33.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        atmosphereConfig33.setframework(atmosphereFramework53);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig33.shutdownHook(shutdownHook55);
        boolean boolean57 = atmosphereConfig33.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig59.shutdownHook(shutdownHook62);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig59.getAtmosphereHandlerConfig();
        atmosphereConfig58.atmosphereHandlerConfig = atmosphereHandlerConfigList64;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig66.destroy();
        boolean boolean68 = atmosphereConfig66.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray69 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList70 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList70, shutdownHookArray69);
        atmosphereConfig66.shutdownHooks = shutdownHookList70;
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig66.getproperties();
        atmosphereConfig58.setproperties(strMap73);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig75.destroy();
        boolean boolean77 = atmosphereConfig75.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray78 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList79, shutdownHookArray78);
        atmosphereConfig75.shutdownHooks = shutdownHookList79;
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig75.getproperties();
        atmosphereConfig58.properties = strMap82;
        atmosphereConfig58.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig58.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = atmosphereConfig33.populate(atmosphereConfig58);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList89 = atmosphereConfig88.atmosphereHandlerConfig;
        atmosphereConfig88.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = atmosphereConfig88.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList92 = atmosphereConfig88.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList92);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(atmosphereConfig88);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList89);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(shutdownHookList92);
    }

    @Test
    public void test04558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04558");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        boolean boolean12 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig16.startupHook(startupHook30);
        atmosphereConfig16.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig16.framework = atmosphereFramework34;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig16.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        atmosphereConfig38.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.destroy();
        boolean boolean47 = atmosphereConfig45.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig45.getAtmosphereHandlerConfig();
        atmosphereConfig38.atmosphereHandlerConfig = atmosphereHandlerConfigList50;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig38.startupHook(startupHook52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        atmosphereConfig54.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig61.shutdownHook(shutdownHook64);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig61.getAtmosphereHandlerConfig();
        atmosphereConfig54.atmosphereHandlerConfig = atmosphereHandlerConfigList66;
        boolean boolean68 = atmosphereConfig54.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig54.getproperties();
        atmosphereConfig53.properties = strMap69;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList71 = atmosphereConfig53.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = atmosphereConfig53.getshutdownHooks();
        atmosphereConfig16.setshutdownHooks(shutdownHookList72);
        atmosphereConfig15.setshutdownHooks(shutdownHookList72);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(startupHookList71);
        org.junit.Assert.assertNotNull(shutdownHookList72);
    }

    @Test
    public void test04559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04559");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
    }

    @Test
    public void test04560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04560");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        boolean boolean25 = atmosphereConfig11.throwExceptionOnCloned;
        java.lang.String str28 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig29.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig29.atmosphereHandlerConfig;
        boolean boolean46 = atmosphereConfig29.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        atmosphereConfig29.shutdownHooks = shutdownHookList55;
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig11);
        atmosphereConfig60.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig60.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig60.properties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNotNull(strMap64);
    }

    @Test
    public void test04561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04561");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        boolean boolean5 = atmosphereConfig3.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig3.shutdownHook(shutdownHook6);
        atmosphereConfig3.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig3.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig3.startupHook(startupHook17);
        atmosphereConfig18.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.startupHook(startupHook33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.getstartUpHook();
        atmosphereConfig25.setstartUpHook(startupHookList35);
        atmosphereConfig18.startUpHook = startupHookList35;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig18.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43, shutdownHookArray42);
        atmosphereConfig39.shutdownHooks = shutdownHookList43;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig39.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig39.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig39.setframework(atmosphereFramework48);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig39.getshutdownHooks();
        atmosphereConfig18.setshutdownHooks(shutdownHookList50);
        atmosphereConfig2.setshutdownHooks(shutdownHookList50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig2.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
    }

    @Test
    public void test04562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04562");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.lang.String str8 = atmosphereConfig0.getInitParameter("hi!");
        atmosphereConfig0.supportSession = true;
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = null;
        atmosphereConfig0.setstartUpHook(startupHookList13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
    }

    @Test
    public void test04563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04563");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        boolean boolean19 = atmosphereConfig18.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig18.properties;
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig18.shutdownHook(shutdownHook24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig25.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig25.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.populate(atmosphereConfig25);
        atmosphereConfig28.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
    }

    @Test
    public void test04564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04564");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str11 = atmosphereConfig4.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        boolean boolean20 = atmosphereConfig19.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig19.properties();
        atmosphereConfig4.properties = strMap23;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        atmosphereConfig25.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig32.getAtmosphereHandlerConfig();
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList37;
        atmosphereConfig25.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig25.atmosphereHandlerConfig;
        boolean boolean42 = atmosphereConfig25.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        boolean boolean49 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51, shutdownHookArray50);
        atmosphereConfig43.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51);
        atmosphereConfig25.shutdownHooks = shutdownHookList51;
        boolean boolean55 = atmosphereConfig25.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig25.getproperties();
        atmosphereConfig4.setproperties(strMap56);
        int int60 = atmosphereConfig4.getInitParameter("", 97);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 97 + "'", int60 == 97);
    }

    @Test
    public void test04565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04565");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        boolean boolean8 = atmosphereConfig6.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        boolean boolean11 = atmosphereConfig10.supportSession;
        boolean boolean12 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        atmosphereConfig13.setproperties(strMap28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.getproperties();
        atmosphereConfig13.properties = strMap37;
        atmosphereConfig10.setproperties(strMap37);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig10.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        atmosphereConfig41.setuseServletContextParameters(false);
        atmosphereConfig41.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51, shutdownHookArray50);
        atmosphereConfig41.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        atmosphereConfig41.framework = atmosphereFramework54;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig41.getshutdownHooks();
        atmosphereConfig10.setshutdownHooks(shutdownHookList56);
        atmosphereConfig10.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig10.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        atmosphereConfig62.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = atmosphereConfig62.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig62.shutdownHook(shutdownHook67);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList69 = atmosphereConfig62.getstartUpHook();
        atmosphereConfig62.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig62.startupHook(startupHook72);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = atmosphereConfig62.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList75 = atmosphereConfig62.startUpHook;
        atmosphereConfig10.startUpHook = startupHookList75;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(shutdownHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertNull(atmosphereFramework66);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(startupHookList69);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList74);
        org.junit.Assert.assertNotNull(startupHookList75);
    }

    @Test
    public void test04566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04566");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.framework = atmosphereFramework9;
        atmosphereConfig8.destroy();
        boolean boolean12 = atmosphereConfig8.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig8.setframework(atmosphereFramework13);
        boolean boolean15 = atmosphereConfig8.getuseServletContextParameters();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test04567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04567");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        atmosphereConfig18.useServletContextParameters = false;
        boolean boolean40 = atmosphereConfig18.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig18.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        atmosphereConfig18.framework = atmosphereFramework42;
        java.lang.Class<?> wildcardClass44 = atmosphereConfig18.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test04568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04568");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setuseServletContextParameters(true);
        int int8 = atmosphereConfig0.getInitParameter("", 0);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        org.slf4j.Logger logger12 = atmosphereConfig0.getlogger();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig13 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(logger12);
    }

    @Test
    public void test04569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04569");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        atmosphereConfig3.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig3.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8);
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap16 = atmosphereConfig14.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(startupHookList15);
    }

    @Test
    public void test04570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04570");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig0.setSupportSession(true);
        boolean boolean18 = atmosphereConfig0.supportSession;
        boolean boolean19 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        atmosphereConfig20.setSupportSession(true);
        boolean boolean26 = atmosphereConfig20.getInitParameter("hi!", true);
        boolean boolean27 = atmosphereConfig20.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        atmosphereConfig28.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig20.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig20.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList35;
        boolean boolean37 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookList38);
    }

    @Test
    public void test04571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04571");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.atmosphereHandlerConfig;
        atmosphereConfig14.setSupportSession(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
    }

    @Test
    public void test04572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04572");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        boolean boolean5 = atmosphereConfig3.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig3.shutdownHooks = shutdownHookList7;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig3.getproperties();
        atmosphereConfig2.properties = strMap10;
        boolean boolean12 = atmosphereConfig2.useServletContextParameters;
        java.lang.String str14 = atmosphereConfig2.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig2.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig2.startupHook(startupHook16);
        atmosphereConfig2.useServletContextParameters = true;
        boolean boolean20 = atmosphereConfig2.useServletContextParameters;
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test04573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04573");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        boolean boolean11 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test04574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04574");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        atmosphereConfig0.setSupportSession(true);
        boolean boolean18 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean19 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean20 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        boolean boolean24 = atmosphereConfig21.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.startupHook(startupHook30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.getstartUpHook();
        atmosphereConfig21.startUpHook = startupHookList32;
        boolean boolean34 = atmosphereConfig21.isThrowExceptionOnCloned();
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.populate(atmosphereConfig21);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig21.properties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(strMap38);
    }

    @Test
    public void test04575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04575");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig18.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26);
        atmosphereConfig0.shutdownHooks = shutdownHookList26;
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.setSupportSession(true);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        boolean boolean41 = atmosphereConfig40.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig40.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        atmosphereConfig43.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig50.getAtmosphereHandlerConfig();
        atmosphereConfig43.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        boolean boolean57 = atmosphereConfig43.throwExceptionOnCloned;
        java.lang.String str60 = atmosphereConfig43.getInitParameter("hi!", "");
        boolean boolean61 = atmosphereConfig43.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        atmosphereConfig62.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig62.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = null;
        atmosphereConfig62.framework = atmosphereFramework67;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig69.destroy();
        boolean boolean71 = atmosphereConfig69.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig69.shutdownHook(shutdownHook72);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig73.startupHook(startupHook74);
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig73.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig73.getshutdownHooks();
        atmosphereConfig62.shutdownHooks = shutdownHookList77;
        atmosphereConfig43.shutdownHooks = shutdownHookList77;
        atmosphereConfig40.shutdownHooks = shutdownHookList77;
        atmosphereConfig0.setshutdownHooks(shutdownHookList77);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig0.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework84 = null;
        atmosphereConfig0.framework = atmosphereFramework84;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(shutdownHookList77);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
    }

    @Test
    public void test04576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04576");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList2 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean5 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        boolean boolean8 = atmosphereConfig6.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        boolean boolean11 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        atmosphereConfig6.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig6.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig16.startupHook(startupHook30);
        atmosphereConfig31.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig45.startupHook(startupHook46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.getstartUpHook();
        atmosphereConfig38.setstartUpHook(startupHookList48);
        atmosphereConfig31.startUpHook = startupHookList48;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig31.properties;
        atmosphereConfig6.setproperties(strMap51);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig6.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig0.populate(atmosphereConfig6);
        atmosphereConfig54.setThrowExceptionOnCloned(true);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext57 = atmosphereConfig54.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
    }

    @Test
    public void test04577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04577");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        int int40 = atmosphereConfig18.getInitParameter("", 0);
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory43 = atmosphereConfig18.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test04578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04578");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig13.getAtmosphereHandlerConfig();
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig20.shutdownHooks = shutdownHookList24;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.getproperties();
        atmosphereConfig12.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig29.shutdownHooks = shutdownHookList33;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig29.getproperties();
        atmosphereConfig12.properties = strMap36;
        atmosphereConfig12.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig0.populate(atmosphereConfig12);
        java.lang.String str42 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig0.framework;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig44 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(atmosphereFramework43);
    }

    @Test
    public void test04579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04579");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig0.setframework(atmosphereFramework6);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.slf4j.Logger logger9 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(logger9);
    }

    @Test
    public void test04580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04580");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig18.setframework(atmosphereFramework38);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig42.getAtmosphereHandlerConfig();
        boolean boolean48 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray49 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50, shutdownHookArray49);
        atmosphereConfig42.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50);
        atmosphereConfig18.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50);
        atmosphereConfig18.throwExceptionOnCloned = true;
        atmosphereConfig18.setSessionTimeoutRemovalAllowed(false);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory58 = atmosphereConfig18.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test04581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04581");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean5 = atmosphereConfig0.getuseServletContextParameters();
        java.lang.String str8 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.framework = atmosphereFramework13;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig12.setframework(atmosphereFramework15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
    }

    @Test
    public void test04582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04582");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        atmosphereConfig3.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig3.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8);
        boolean boolean14 = atmosphereConfig0.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        boolean boolean34 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig36.shutdownHooks;
        atmosphereConfig33.shutdownHooks = shutdownHookList42;
        atmosphereConfig33.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig33.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig33.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig0.populate(atmosphereConfig33);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext50 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
    }

    @Test
    public void test04583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04583");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str11 = atmosphereConfig4.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig4.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig4.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        atmosphereConfig14.initComplete();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext18 = atmosphereConfig14.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test04584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04584");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.destroy();
        boolean boolean7 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList13, shutdownHookArray12);
        atmosphereConfig5.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList13);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList13);
        boolean boolean19 = atmosphereConfig0.getInitParameter("hi!", false);
        boolean boolean20 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig27.startupHook(startupHook28);
        int int32 = atmosphereConfig27.getInitParameter("", (int) (short) 10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig27.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig22.populate(atmosphereConfig27);
        atmosphereConfig27.initComplete();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
    }

    @Test
    public void test04585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04585");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.getproperties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        int int13 = atmosphereConfig0.getInitParameter("hi!", 0);
        int int16 = atmosphereConfig0.getInitParameter("", 0);
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test04586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04586");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        atmosphereConfig18.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray53 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList54, shutdownHookArray53);
        atmosphereConfig50.shutdownHooks = shutdownHookList54;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig50.getproperties();
        atmosphereConfig42.setproperties(strMap57);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig42.startupHook(startupHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        boolean boolean64 = atmosphereConfig62.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig62.shutdownHook(shutdownHook65);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig62.getAtmosphereHandlerConfig();
        atmosphereConfig61.atmosphereHandlerConfig = atmosphereHandlerConfigList67;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig69.destroy();
        boolean boolean71 = atmosphereConfig69.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray72 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList73, shutdownHookArray72);
        atmosphereConfig69.shutdownHooks = shutdownHookList73;
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig69.getproperties();
        atmosphereConfig61.setproperties(strMap76);
        atmosphereConfig60.setproperties(strMap76);
        int int81 = atmosphereConfig60.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig60.startupHook(startupHook82);
        atmosphereConfig83.setThrowExceptionOnCloned(false);
        atmosphereConfig83.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig83.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = atmosphereConfig18.populate(atmosphereConfig83);
        boolean boolean91 = atmosphereConfig18.getInitParameter("", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertNotNull(atmosphereConfig88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test04587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04587");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        boolean boolean8 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.shutdownHook(shutdownHook9);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        java.lang.String str13 = atmosphereConfig10.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        boolean boolean19 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        atmosphereConfig14.initComplete();
        atmosphereConfig14.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = null;
        atmosphereConfig14.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig14.startUpHook;
        atmosphereConfig10.startUpHook = startupHookList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        boolean boolean30 = atmosphereConfig27.throwExceptionOnCloned;
        atmosphereConfig27.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        boolean boolean38 = atmosphereConfig37.supportSession;
        boolean boolean39 = atmosphereConfig37.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig41.getAtmosphereHandlerConfig();
        atmosphereConfig40.atmosphereHandlerConfig = atmosphereHandlerConfigList46;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig48.destroy();
        boolean boolean50 = atmosphereConfig48.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray51 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList52, shutdownHookArray51);
        atmosphereConfig48.shutdownHooks = shutdownHookList52;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig48.getproperties();
        atmosphereConfig40.setproperties(strMap55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray60 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList61, shutdownHookArray60);
        atmosphereConfig57.shutdownHooks = shutdownHookList61;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig57.getproperties();
        atmosphereConfig40.properties = strMap64;
        atmosphereConfig37.setproperties(strMap64);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = atmosphereConfig37.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig68.destroy();
        boolean boolean70 = atmosphereConfig68.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook71 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig68.shutdownHook(shutdownHook71);
        atmosphereConfig68.setuseServletContextParameters(false);
        atmosphereConfig68.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray77 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList78, shutdownHookArray77);
        atmosphereConfig68.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList78);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = null;
        atmosphereConfig68.framework = atmosphereFramework81;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig68.getshutdownHooks();
        atmosphereConfig37.setshutdownHooks(shutdownHookList83);
        atmosphereConfig37.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig87 = atmosphereConfig27.populate(atmosphereConfig37);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList88 = atmosphereConfig37.getAtmosphereHandlerConfig();
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList88;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(shutdownHookList67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(shutdownHookArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNotNull(atmosphereConfig87);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList88);
    }

    @Test
    public void test04588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04588");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        boolean boolean6 = atmosphereConfig4.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.startupHook(startupHook13);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig14.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList15);
        java.lang.String str18 = atmosphereConfig4.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig4.startUpHook;
        atmosphereConfig4.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig4.startupHook(startupHook22);
        atmosphereConfig23.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig23.throwExceptionOnCloned = true;
        atmosphereConfig23.destroy();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
    }

    @Test
    public void test04589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04589");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        atmosphereConfig0.setuseServletContextParameters(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig12.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig12.supportSession;
        atmosphereConfig12.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.getproperties();
        atmosphereConfig20.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig20.properties = strMap44;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig20.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig51.getproperties();
        atmosphereConfig20.properties = strMap52;
        atmosphereConfig12.properties = strMap52;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig12.framework();
        boolean boolean56 = atmosphereConfig12.supportSession;
        boolean boolean57 = atmosphereConfig12.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig58.destroy();
        boolean boolean60 = atmosphereConfig58.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig58.shutdownHook(shutdownHook61);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = null;
        atmosphereConfig58.setstartUpHook(startupHookList63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig65.destroy();
        boolean boolean67 = atmosphereConfig65.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig65.shutdownHook(shutdownHook68);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList70 = atmosphereConfig69.startUpHook;
        atmosphereConfig58.setstartUpHook(startupHookList70);
        boolean boolean72 = atmosphereConfig58.isSessionTimeoutRemovalAllowed();
        boolean boolean73 = atmosphereConfig58.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig74.destroy();
        boolean boolean76 = atmosphereConfig74.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray77 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList78, shutdownHookArray77);
        atmosphereConfig74.shutdownHooks = shutdownHookList78;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = atmosphereConfig74.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig74.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig74.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList84 = atmosphereConfig74.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList85 = atmosphereConfig74.startUpHook;
        atmosphereConfig58.startUpHook = startupHookList85;
        atmosphereConfig12.startUpHook = startupHookList85;
        atmosphereConfig0.startUpHook = startupHookList85;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework89 = atmosphereConfig0.framework;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(atmosphereFramework55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(startupHookList70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(atmosphereFramework81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList84);
        org.junit.Assert.assertNotNull(startupHookList85);
        org.junit.Assert.assertNull(atmosphereFramework89);
    }

    @Test
    public void test04590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04590");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig20.shutdownHooks = shutdownHookList24;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.getproperties();
        atmosphereConfig20.throwExceptionOnCloned = false;
        atmosphereConfig20.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig33.atmosphereHandlerConfig = atmosphereHandlerConfigList39;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig41.shutdownHooks = shutdownHookList45;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig41.getproperties();
        atmosphereConfig33.setproperties(strMap48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig33.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.destroy();
        boolean boolean55 = atmosphereConfig53.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig53.getAtmosphereHandlerConfig();
        atmosphereConfig52.atmosphereHandlerConfig = atmosphereHandlerConfigList58;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig60.destroy();
        boolean boolean62 = atmosphereConfig60.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray63 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList64, shutdownHookArray63);
        atmosphereConfig60.shutdownHooks = shutdownHookList64;
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig60.getproperties();
        atmosphereConfig52.setproperties(strMap67);
        atmosphereConfig51.setproperties(strMap67);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList70 = atmosphereConfig51.shutdownHooks;
        atmosphereConfig51.useServletContextParameters = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList73 = atmosphereConfig51.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList73;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig0.startupHook(startupHook75);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig78.destroy();
        boolean boolean80 = atmosphereConfig78.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook81 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig78.shutdownHook(shutdownHook81);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList83 = atmosphereConfig78.getAtmosphereHandlerConfig();
        atmosphereConfig77.atmosphereHandlerConfig = atmosphereHandlerConfigList83;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig85 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig85.destroy();
        boolean boolean87 = atmosphereConfig85.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray88 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList89 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList89, shutdownHookArray88);
        atmosphereConfig85.shutdownHooks = shutdownHookList89;
        java.util.Map<java.lang.String, java.lang.Object> strMap92 = atmosphereConfig85.getproperties();
        atmosphereConfig77.setproperties(strMap92);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook94 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig95 = atmosphereConfig77.startupHook(startupHook94);
        java.util.Map<java.lang.String, java.lang.Object> strMap96 = atmosphereConfig95.properties();
        atmosphereConfig76.properties = strMap96;
        atmosphereConfig76.supportSession = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(shutdownHookList70);
        org.junit.Assert.assertNotNull(startupHookList73);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(atmosphereConfig95);
        org.junit.Assert.assertNotNull(strMap96);
    }

    @Test
    public void test04591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04591");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        boolean boolean25 = atmosphereConfig11.throwExceptionOnCloned;
        java.lang.String str28 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig29.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig29.atmosphereHandlerConfig;
        boolean boolean46 = atmosphereConfig29.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        atmosphereConfig29.shutdownHooks = shutdownHookList55;
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig11);
        atmosphereConfig60.setThrowExceptionOnCloned(true);
        java.lang.String str65 = atmosphereConfig60.getInitParameter("hi!", "");
        atmosphereConfig60.setSessionTimeoutRemovalAllowed(false);
        org.slf4j.Logger logger68 = atmosphereConfig60.getlogger();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster69 = atmosphereConfig60.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(logger68);
    }

    @Test
    public void test04592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04592");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig0.framework = atmosphereFramework19;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        java.lang.Class<?> wildcardClass23 = atmosphereConfig0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test04593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04593");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        int int9 = atmosphereConfig4.getInitParameter("", (int) (short) 10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig4.atmosphereHandlerConfig;
        org.slf4j.Logger logger11 = atmosphereConfig4.getlogger();
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig4.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig4.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig4.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig4.framework = atmosphereFramework20;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(logger11);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(shutdownHookList19);
    }

    @Test
    public void test04594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04594");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        java.lang.String str60 = atmosphereConfig18.getInitParameter("hi!");
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        boolean boolean63 = atmosphereConfig18.supportSession;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test04595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04595");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.throwExceptionOnCloned = false;
        boolean boolean9 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test04596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04596");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.lang.String str14 = atmosphereConfig0.getInitParameter("", "");
        boolean boolean15 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test04597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04597");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        boolean boolean25 = atmosphereConfig11.throwExceptionOnCloned;
        java.lang.String str28 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig29.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig29.atmosphereHandlerConfig;
        boolean boolean46 = atmosphereConfig29.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        atmosphereConfig29.shutdownHooks = shutdownHookList55;
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig11);
        atmosphereConfig60.supportSession = true;
        atmosphereConfig60.setuseServletContextParameters(false);
        boolean boolean65 = atmosphereConfig60.isThrowExceptionOnCloned();
        atmosphereConfig60.setThrowExceptionOnCloned(false);
        atmosphereConfig60.setSessionTimeoutRemovalAllowed(true);
        org.slf4j.Logger logger70 = atmosphereConfig60.getlogger();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(logger70);
    }

    @Test
    public void test04598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04598");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig18.setThrowExceptionOnCloned(true);
        atmosphereConfig18.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig18.shutdownHook(shutdownHook64);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory66 = atmosphereConfig18.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
    }

    @Test
    public void test04599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04599");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        atmosphereConfig4.setSupportSession(true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory8 = atmosphereConfig4.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test04600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04600");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        int int40 = atmosphereConfig18.getInitParameter("", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig18.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig18.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig18.startupHook(startupHook43);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig44.getshutdownHooks();
        boolean boolean46 = atmosphereConfig44.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test04601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04601");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig4.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig4.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig4.shutdownHook(shutdownHook39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = null;
        atmosphereConfig41.setstartUpHook(startupHookList46);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig41.framework();
        org.slf4j.Logger logger49 = atmosphereConfig41.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig41.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig41.getAtmosphereHandlerConfig();
        atmosphereConfig40.atmosphereHandlerConfig = atmosphereHandlerConfigList51;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.destroy();
        boolean boolean55 = atmosphereConfig53.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        atmosphereConfig53.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig60.destroy();
        boolean boolean62 = atmosphereConfig60.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig60.shutdownHook(shutdownHook63);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig60.getAtmosphereHandlerConfig();
        atmosphereConfig53.atmosphereHandlerConfig = atmosphereHandlerConfigList65;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig53.startupHook(startupHook67);
        atmosphereConfig68.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList71 = atmosphereConfig68.startUpHook;
        atmosphereConfig68.destroy();
        atmosphereConfig68.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = atmosphereConfig68.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig68.properties();
        atmosphereConfig40.setproperties(strMap76);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertNotNull(logger49);
        org.junit.Assert.assertNull(startupHookList50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(startupHookList71);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
    }

    @Test
    public void test04602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04602");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.atmosphereHandlerConfig;
        java.lang.Class<?> wildcardClass12 = atmosphereConfig0.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test04603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04603");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = false;
        int int15 = atmosphereConfig0.getInitParameter("hi!", (int) (byte) 100);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList16;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig0.properties();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory21 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test04604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04604");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig15.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.startUpHook;
        atmosphereConfig15.destroy();
        boolean boolean20 = atmosphereConfig15.throwExceptionOnCloned;
        boolean boolean21 = atmosphereConfig15.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = atmosphereConfig15.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test04605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04605");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties();
        atmosphereConfig0.setproperties(strMap16);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("", "");
        atmosphereConfig0.setuseServletContextParameters(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig0.framework();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNull(atmosphereFramework27);
    }

    @Test
    public void test04606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04606");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        boolean boolean25 = atmosphereConfig24.supportSession;
        atmosphereConfig24.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.startupHook(startupHook33);
        atmosphereConfig34.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig34.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig34.startupHook(startupHook38);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig34.setframework(atmosphereFramework40);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
    }

    @Test
    public void test04607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04607");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        boolean boolean26 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.shutdownHook(shutdownHook27);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
    }

    @Test
    public void test04608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04608");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig4.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        atmosphereConfig35.setuseServletContextParameters(false);
        atmosphereConfig35.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig35.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig35.framework = atmosphereFramework48;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList50);
        atmosphereConfig4.supportSession = true;
        boolean boolean54 = atmosphereConfig4.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.destroy();
        boolean boolean57 = atmosphereConfig55.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig55.shutdownHook(shutdownHook58);
        boolean boolean60 = atmosphereConfig59.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig59.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.properties;
        atmosphereConfig59.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig59.shutdownHook(shutdownHook65);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig66.getstartUpHook();
        boolean boolean68 = atmosphereConfig66.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig69.shutdownHook(shutdownHook70);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig72.destroy();
        boolean boolean74 = atmosphereConfig72.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray75 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList76 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList76, shutdownHookArray75);
        atmosphereConfig72.shutdownHooks = shutdownHookList76;
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig72.getproperties();
        atmosphereConfig71.properties = strMap79;
        atmosphereConfig71.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = atmosphereConfig71.properties;
        atmosphereConfig66.properties = strMap83;
        atmosphereConfig4.properties = strMap83;
        boolean boolean86 = atmosphereConfig4.throwExceptionOnCloned;
        boolean boolean87 = atmosphereConfig4.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(startupHookList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test04609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04609");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        atmosphereConfig9.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        atmosphereConfig13.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig9.populate(atmosphereConfig13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig19.getAtmosphereHandlerConfig();
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30, shutdownHookArray29);
        atmosphereConfig26.shutdownHooks = shutdownHookList30;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig26.getproperties();
        atmosphereConfig18.setproperties(strMap33);
        boolean boolean37 = atmosphereConfig18.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig9.populate(atmosphereConfig18);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig9.properties;
        atmosphereConfig0.setproperties(strMap39);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(startupHookList41);
    }

    @Test
    public void test04610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04610");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig11.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList15;
        boolean boolean17 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory18 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test04611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04611");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = null;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList12);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str18 = atmosphereConfig0.getInitParameter("hi!", "");
        java.lang.String str21 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig0.framework();
        boolean boolean23 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory24 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test04612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04612");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig18.setSessionTimeoutRemovalAllowed(false);
        java.lang.String str26 = atmosphereConfig18.getInitParameter("", "hi!");
        boolean boolean29 = atmosphereConfig18.getInitParameter("", true);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig18.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration31 = atmosphereConfig18.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test04613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04613");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.framework = atmosphereFramework10;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.shutdownHook(shutdownHook12);
        boolean boolean14 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        atmosphereConfig15.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        atmosphereConfig19.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig15.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig24.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig32.getproperties();
        atmosphereConfig24.setproperties(strMap39);
        boolean boolean43 = atmosphereConfig24.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig15.populate(atmosphereConfig24);
        atmosphereConfig44.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig44.properties();
        atmosphereConfig0.properties = strMap46;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig48.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray59 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList60, shutdownHookArray59);
        atmosphereConfig56.shutdownHooks = shutdownHookList60;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig56.getproperties();
        atmosphereConfig48.setproperties(strMap63);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig48.startupHook(startupHook65);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig68.destroy();
        boolean boolean70 = atmosphereConfig68.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook71 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig68.shutdownHook(shutdownHook71);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList73 = atmosphereConfig68.getAtmosphereHandlerConfig();
        atmosphereConfig67.atmosphereHandlerConfig = atmosphereHandlerConfigList73;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig75.destroy();
        boolean boolean77 = atmosphereConfig75.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray78 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList79, shutdownHookArray78);
        atmosphereConfig75.shutdownHooks = shutdownHookList79;
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig75.getproperties();
        atmosphereConfig67.setproperties(strMap82);
        atmosphereConfig66.setproperties(strMap82);
        atmosphereConfig66.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = atmosphereConfig66.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList88 = atmosphereConfig66.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList88;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList73);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(startupHookList88);
    }

    @Test
    public void test04614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04614");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig7.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        boolean boolean19 = atmosphereConfig18.supportSession;
        boolean boolean20 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig29.shutdownHooks = shutdownHookList33;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig29.getproperties();
        atmosphereConfig21.setproperties(strMap36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig21.properties = strMap45;
        atmosphereConfig18.setproperties(strMap45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        java.lang.String str52 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean53 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig58.startupHook(startupHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig61.shutdownHook(shutdownHook64);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig65.startupHook(startupHook66);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig65.properties;
        atmosphereConfig58.properties = strMap68;
        atmosphereConfig0.properties = strMap68;
        boolean boolean71 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.slf4j.Logger logger72 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(logger72);
    }

    @Test
    public void test04615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04615");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig6.framework;
        boolean boolean8 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration9 = atmosphereConfig6.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test04616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04616");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        boolean boolean37 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        atmosphereConfig18.setuseServletContextParameters(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig18.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig18.setframework(atmosphereFramework41);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
    }

    @Test
    public void test04617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04617");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        boolean boolean14 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean17 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSupportSession(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test04618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04618");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.useServletContextParameters = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test04619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04619");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig0.framework;
        boolean boolean18 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig29.shutdownHooks = shutdownHookList33;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig29.getproperties();
        atmosphereConfig21.setproperties(strMap36);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig21.startupHook(startupHook38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig41.getAtmosphereHandlerConfig();
        atmosphereConfig40.atmosphereHandlerConfig = atmosphereHandlerConfigList46;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig48.destroy();
        boolean boolean50 = atmosphereConfig48.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray51 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList52, shutdownHookArray51);
        atmosphereConfig48.shutdownHooks = shutdownHookList52;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig48.getproperties();
        atmosphereConfig40.setproperties(strMap55);
        atmosphereConfig39.setproperties(strMap55);
        int int60 = atmosphereConfig39.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig39.startupHook(startupHook61);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig63.destroy();
        boolean boolean65 = atmosphereConfig63.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig63.shutdownHook(shutdownHook66);
        atmosphereConfig63.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig70.destroy();
        boolean boolean72 = atmosphereConfig70.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig70.shutdownHook(shutdownHook73);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList75 = atmosphereConfig70.getAtmosphereHandlerConfig();
        atmosphereConfig63.atmosphereHandlerConfig = atmosphereHandlerConfigList75;
        atmosphereConfig39.atmosphereHandlerConfig = atmosphereHandlerConfigList75;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList78 = atmosphereConfig39.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList78);
        boolean boolean80 = atmosphereConfig0.useServletContextParameters;
        boolean boolean81 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList82 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook85 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = atmosphereConfig0.startupHook(startupHook85);
        atmosphereConfig86.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook88 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig89 = atmosphereConfig86.shutdownHook(shutdownHook88);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList90 = atmosphereConfig86.startUpHook;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList75);
        org.junit.Assert.assertNotNull(startupHookList78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList82);
        org.junit.Assert.assertNotNull(atmosphereConfig86);
        org.junit.Assert.assertNotNull(atmosphereConfig89);
        org.junit.Assert.assertNotNull(startupHookList90);
    }

    @Test
    public void test04620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04620");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        boolean boolean8 = atmosphereConfig6.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        boolean boolean11 = atmosphereConfig10.supportSession;
        boolean boolean12 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        atmosphereConfig13.setproperties(strMap28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.getproperties();
        atmosphereConfig13.properties = strMap37;
        atmosphereConfig10.setproperties(strMap37);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig10.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        atmosphereConfig41.setuseServletContextParameters(false);
        atmosphereConfig41.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51, shutdownHookArray50);
        atmosphereConfig41.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        atmosphereConfig41.framework = atmosphereFramework54;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig41.getshutdownHooks();
        atmosphereConfig10.setshutdownHooks(shutdownHookList56);
        atmosphereConfig10.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig10);
        boolean boolean61 = atmosphereConfig60.isSessionTimeoutRemovalAllowed();
        boolean boolean62 = atmosphereConfig60.sessionTimeoutRemovalAllowed;
        java.lang.String str64 = atmosphereConfig60.getInitParameter("hi!");
        int int67 = atmosphereConfig60.getInitParameter("hi!", 0);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster68 = atmosphereConfig60.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(shutdownHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test04621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04621");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig0.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig21.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.populate(atmosphereConfig21);
        boolean boolean31 = atmosphereConfig21.sessionTimeoutRemovalAllowed;
        int int34 = atmosphereConfig21.getInitParameter("", 32);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 32 + "'", int34 == 32);
    }

    @Test
    public void test04622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04622");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        atmosphereConfig41.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig41.getstartUpHook();
        boolean boolean45 = atmosphereConfig41.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig41.shutdownHook(shutdownHook46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig48.destroy();
        boolean boolean50 = atmosphereConfig48.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig48.shutdownHook(shutdownHook51);
        atmosphereConfig48.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.destroy();
        boolean boolean57 = atmosphereConfig55.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig55.shutdownHook(shutdownHook58);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig55.getAtmosphereHandlerConfig();
        atmosphereConfig48.atmosphereHandlerConfig = atmosphereHandlerConfigList60;
        atmosphereConfig48.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig48.atmosphereHandlerConfig;
        boolean boolean65 = atmosphereConfig48.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig66.destroy();
        boolean boolean68 = atmosphereConfig66.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig66.shutdownHook(shutdownHook69);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig66.getAtmosphereHandlerConfig();
        boolean boolean72 = atmosphereConfig66.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray73 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList74 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList74, shutdownHookArray73);
        atmosphereConfig66.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList74);
        atmosphereConfig48.shutdownHooks = shutdownHookList74;
        atmosphereConfig48.setuseServletContextParameters(false);
        atmosphereConfig48.setSupportSession(true);
        atmosphereConfig48.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList84 = atmosphereConfig48.atmosphereHandlerConfig;
        atmosphereConfig47.atmosphereHandlerConfig = atmosphereHandlerConfigList84;
        boolean boolean86 = atmosphereConfig47.isThrowExceptionOnCloned();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(startupHookList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test04623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04623");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(logger10);
    }

    @Test
    public void test04624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04624");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        boolean boolean34 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        boolean boolean39 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig36.startUpHook;
        atmosphereConfig33.setstartUpHook(startupHookList40);
        atmosphereConfig0.startUpHook = startupHookList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        boolean boolean46 = atmosphereConfig43.isSessionTimeoutRemovalAllowed();
        java.lang.String str48 = atmosphereConfig43.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig43.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList49;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig0.startupHook(startupHook52);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig54 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
    }

    @Test
    public void test04625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04625");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig18.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26);
        atmosphereConfig0.shutdownHooks = shutdownHookList26;
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.setSupportSession(true);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig36.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig36.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList43;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(startupHookList43);
    }

    @Test
    public void test04626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04626");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.framework = atmosphereFramework9;
        atmosphereConfig8.destroy();
        boolean boolean12 = atmosphereConfig8.getuseServletContextParameters();
        boolean boolean13 = atmosphereConfig8.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        atmosphereConfig14.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig14.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        atmosphereConfig14.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig14.atmosphereHandlerConfig;
        boolean boolean31 = atmosphereConfig14.getuseServletContextParameters();
        atmosphereConfig14.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig40.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig40.shutdownHooks;
        atmosphereConfig14.shutdownHooks = shutdownHookList44;
        atmosphereConfig8.shutdownHooks = shutdownHookList44;
        boolean boolean47 = atmosphereConfig8.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig48.destroy();
        boolean boolean50 = atmosphereConfig48.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig48.shutdownHook(shutdownHook51);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig48.getAtmosphereHandlerConfig();
        boolean boolean54 = atmosphereConfig48.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray55 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList56, shutdownHookArray55);
        atmosphereConfig48.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList56);
        java.lang.String str61 = atmosphereConfig48.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = atmosphereConfig48.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig48.getstartUpHook();
        atmosphereConfig8.startUpHook = startupHookList63;
        boolean boolean65 = atmosphereConfig8.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework62);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test04627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04627");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        int int40 = atmosphereConfig18.getInitParameter("", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig18.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig18.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig18.startupHook(startupHook43);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig44.getshutdownHooks();
        atmosphereConfig44.setSessionTimeoutRemovalAllowed(true);
        boolean boolean48 = atmosphereConfig44.isSessionTimeoutRemovalAllowed();
        atmosphereConfig44.throwExceptionOnCloned = false;
        boolean boolean51 = atmosphereConfig44.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig44.shutdownHook(shutdownHook52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        boolean boolean59 = atmosphereConfig58.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig58.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig58.properties;
        atmosphereConfig58.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig58.shutdownHook(shutdownHook64);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList66 = atmosphereConfig65.getstartUpHook();
        boolean boolean67 = atmosphereConfig65.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig68.shutdownHook(shutdownHook69);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig71.destroy();
        boolean boolean73 = atmosphereConfig71.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray74 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList75 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList75, shutdownHookArray74);
        atmosphereConfig71.shutdownHooks = shutdownHookList75;
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = atmosphereConfig71.getproperties();
        atmosphereConfig70.properties = strMap78;
        atmosphereConfig70.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig70.properties;
        atmosphereConfig65.properties = strMap82;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework84 = null;
        atmosphereConfig65.setframework(atmosphereFramework84);
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = null;
        atmosphereConfig65.setproperties(strMap86);
        atmosphereConfig65.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig90 = atmosphereConfig53.populate(atmosphereConfig65);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext91 = atmosphereConfig90.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(startupHookList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(atmosphereConfig90);
    }

    @Test
    public void test04628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04628");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        atmosphereConfig0.setuseServletContextParameters(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        boolean boolean14 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider15 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test04629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04629");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.throwExceptionOnCloned = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
    }

    @Test
    public void test04630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04630");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        boolean boolean25 = atmosphereConfig11.throwExceptionOnCloned;
        java.lang.String str28 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig29.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig29.atmosphereHandlerConfig;
        boolean boolean46 = atmosphereConfig29.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        atmosphereConfig29.shutdownHooks = shutdownHookList55;
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig11);
        atmosphereConfig60.supportSession = true;
        atmosphereConfig60.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = atmosphereConfig60.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = null;
        atmosphereConfig60.setframework(atmosphereFramework66);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig60.shutdownHook(shutdownHook68);
        atmosphereConfig60.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNull(atmosphereFramework65);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
    }

    @Test
    public void test04631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04631");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig4.populate(atmosphereConfig18);
        boolean boolean21 = atmosphereConfig4.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig4.startUpHook;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap23 = atmosphereConfig4.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
    }

    @Test
    public void test04632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04632");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        boolean boolean34 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        boolean boolean39 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig36.startUpHook;
        atmosphereConfig33.setstartUpHook(startupHookList40);
        atmosphereConfig0.startUpHook = startupHookList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        boolean boolean46 = atmosphereConfig43.isSessionTimeoutRemovalAllowed();
        java.lang.String str48 = atmosphereConfig43.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig43.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList49;
        boolean boolean51 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        boolean boolean54 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test04633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04633");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework();
        boolean boolean21 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(startupHookList23);
    }

    @Test
    public void test04634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04634");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties();
        boolean boolean12 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        atmosphereConfig13.setuseServletContextParameters(false);
        atmosphereConfig13.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig13.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig13.properties();
        atmosphereConfig0.properties = strMap24;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test04635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04635");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig6.useServletContextParameters;
        atmosphereConfig6.initComplete();
        atmosphereConfig6.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig6.startUpHook;
        java.lang.String str12 = atmosphereConfig6.getInitParameter("");
        boolean boolean13 = atmosphereConfig6.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test04636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04636");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        org.slf4j.Logger logger7 = atmosphereConfig0.getlogger();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory9 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(logger8);
    }

    @Test
    public void test04637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04637");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.properties();
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList16, startupHookArray15);
        atmosphereConfig12.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList16);
        atmosphereConfig12.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig12.framework();
        atmosphereConfig12.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig12.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig12.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList26;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(startupHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(startupHookList26);
    }

    @Test
    public void test04638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04638");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.shutdownHook(shutdownHook10);
        boolean boolean12 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test04639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04639");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        boolean boolean11 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
    }

    @Test
    public void test04640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04640");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean4 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.supportSession = true;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (-1));
        boolean boolean10 = atmosphereConfig0.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test04641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04641");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList9;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        boolean boolean13 = atmosphereConfig0.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test04642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04642");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList3 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
    }

    @Test
    public void test04643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04643");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        boolean boolean26 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.throwExceptionOnCloned = false;
        boolean boolean29 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig30.getAtmosphereHandlerConfig();
        boolean boolean36 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig30.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig0.populate(atmosphereConfig30);
        atmosphereConfig30.throwExceptionOnCloned = true;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory42 = atmosphereConfig30.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
    }

    @Test
    public void test04644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04644");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        java.lang.String str43 = atmosphereConfig41.getInitParameter("hi!");
        atmosphereConfig41.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig41.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory47 = atmosphereConfig41.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test04645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04645");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean31 = atmosphereConfig0.isSupportSession();
        boolean boolean32 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean33 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str35 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.sessionTimeoutRemovalAllowed;
        boolean boolean39 = atmosphereConfig36.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig0.populate(atmosphereConfig36);
        atmosphereConfig36.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
    }

    @Test
    public void test04646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04646");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        boolean boolean10 = atmosphereConfig4.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.startupHook(startupHook23);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.getstartUpHook();
        atmosphereConfig15.setstartUpHook(startupHookList25);
        atmosphereConfig4.setstartUpHook(startupHookList25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        atmosphereConfig28.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig28.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig28.framework = atmosphereFramework33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig35.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig37.properties = strMap45;
        atmosphereConfig28.properties = strMap45;
        boolean boolean48 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig50.getAtmosphereHandlerConfig();
        atmosphereConfig49.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray60 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList61, shutdownHookArray60);
        atmosphereConfig57.shutdownHooks = shutdownHookList61;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig57.getproperties();
        atmosphereConfig49.setproperties(strMap64);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig49.startupHook(startupHook66);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        atmosphereConfig49.framework = atmosphereFramework68;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig70.destroy();
        boolean boolean72 = atmosphereConfig70.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig70.shutdownHook(shutdownHook73);
        boolean boolean75 = atmosphereConfig74.supportSession;
        boolean boolean76 = atmosphereConfig74.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework77 = null;
        atmosphereConfig74.framework = atmosphereFramework77;
        java.lang.String str80 = atmosphereConfig74.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig81.destroy();
        boolean boolean83 = atmosphereConfig81.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook84 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig85 = atmosphereConfig81.shutdownHook(shutdownHook84);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook86 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig87 = atmosphereConfig85.startupHook(startupHook86);
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = atmosphereConfig85.properties;
        java.lang.String str90 = atmosphereConfig85.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = atmosphereConfig85.getproperties();
        atmosphereConfig74.properties = strMap91;
        atmosphereConfig49.properties = strMap91;
        atmosphereConfig28.setproperties(strMap91);
        atmosphereConfig4.setproperties(strMap91);
        boolean boolean96 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList97 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig85);
        org.junit.Assert.assertNotNull(atmosphereConfig87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(shutdownHookList97);
    }

    @Test
    public void test04647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04647");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        boolean boolean8 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test04648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04648");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean37 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig4.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig4.getshutdownHooks();
        boolean boolean40 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test04649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04649");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.destroy();
        boolean boolean7 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig5.properties();
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig14.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig14.startUpHook;
        atmosphereConfig5.setstartUpHook(startupHookList18);
        atmosphereConfig0.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        atmosphereConfig24.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig24.getAtmosphereHandlerConfig();
        atmosphereConfig24.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig24.startupHook(startupHook31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = null;
        atmosphereConfig24.setshutdownHooks(shutdownHookList33);
        org.slf4j.Logger logger35 = atmosphereConfig24.getlogger();
        boolean boolean36 = atmosphereConfig24.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig24.getstartUpHook();
        atmosphereConfig22.setstartUpHook(startupHookList37);
        atmosphereConfig22.throwExceptionOnCloned = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(logger35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(startupHookList37);
    }

    @Test
    public void test04650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04650");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        boolean boolean25 = atmosphereConfig24.supportSession;
        atmosphereConfig24.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig0.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig0.startupHook(startupHook40);
        int int44 = atmosphereConfig41.getInitParameter("", (int) (byte) 100);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        atmosphereConfig41.setframework(atmosphereFramework45);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
    }

    @Test
    public void test04651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04651");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig18.startupHook(startupHook37);
        org.slf4j.Logger logger39 = atmosphereConfig18.getlogger();
        boolean boolean40 = atmosphereConfig18.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig18.framework = atmosphereFramework41;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig18.startUpHook;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(logger39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(startupHookList43);
    }

    @Test
    public void test04652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04652");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        boolean boolean14 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.slf4j.Logger logger17 = atmosphereConfig0.getlogger();
        org.slf4j.Logger logger18 = atmosphereConfig0.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig0.properties();
        boolean boolean20 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test04653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04653");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig6.useServletContextParameters;
        atmosphereConfig6.initComplete();
        boolean boolean9 = atmosphereConfig6.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        boolean boolean13 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.startUpHook;
        atmosphereConfig6.startUpHook = startupHookList14;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig6.getframework();
        boolean boolean17 = atmosphereConfig6.useServletContextParameters;
        java.lang.String str19 = atmosphereConfig6.getInitParameter("hi!");
        atmosphereConfig6.throwExceptionOnCloned = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster22 = atmosphereConfig6.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test04654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04654");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.setframework(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.startupHook(startupHook19);
        boolean boolean21 = atmosphereConfig20.useServletContextParameters;
        atmosphereConfig20.initComplete();
        boolean boolean23 = atmosphereConfig20.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        boolean boolean27 = atmosphereConfig24.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig24.startUpHook;
        atmosphereConfig20.startUpHook = startupHookList28;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig20.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig20.atmosphereHandlerConfig;
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList31;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig13.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext34 = atmosphereConfig13.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(shutdownHookList33);
    }

    @Test
    public void test04655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04655");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig8.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig10.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig10.shutdownHooks;
        atmosphereConfig8.setshutdownHooks(shutdownHookList17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig8.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = null;
        atmosphereConfig8.setshutdownHooks(shutdownHookList20);
        // The following exception was thrown during execution in test generation
        try {
            atmosphereConfig8.destroy();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNull(atmosphereFramework19);
    }

    @Test
    public void test04656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04656");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        int int9 = atmosphereConfig4.getInitParameter("", (int) (short) 10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig4.atmosphereHandlerConfig;
        org.slf4j.Logger logger11 = atmosphereConfig4.getlogger();
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig4.atmosphereHandlerConfig;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean20 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(logger11);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test04657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04657");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig6.getframework();
        atmosphereConfig6.throwExceptionOnCloned = false;
        boolean boolean10 = atmosphereConfig6.isThrowExceptionOnCloned();
        java.lang.String str12 = atmosphereConfig6.getInitParameter("hi!");
        java.lang.String str14 = atmosphereConfig6.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig6.atmosphereHandlerConfig;
        atmosphereConfig6.setSessionTimeoutRemovalAllowed(true);
        boolean boolean18 = atmosphereConfig6.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test04658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04658");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        boolean boolean6 = atmosphereConfig4.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.startUpHook;
        boolean boolean8 = atmosphereConfig4.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig9.setproperties(strMap24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig9.startupHook(startupHook26);
        boolean boolean28 = atmosphereConfig27.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig27.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig30.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig30.shutdownHooks;
        atmosphereConfig27.shutdownHooks = shutdownHookList36;
        atmosphereConfig4.setshutdownHooks(shutdownHookList36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig40.getAtmosphereHandlerConfig();
        atmosphereConfig39.atmosphereHandlerConfig = atmosphereHandlerConfigList45;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51, shutdownHookArray50);
        atmosphereConfig47.shutdownHooks = shutdownHookList51;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig47.getproperties();
        atmosphereConfig39.setproperties(strMap54);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig39.startupHook(startupHook56);
        org.slf4j.Logger logger58 = atmosphereConfig39.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig59.shutdownHook(shutdownHook62);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig63.startupHook(startupHook64);
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig63.properties;
        atmosphereConfig63.sessionTimeoutRemovalAllowed = false;
        boolean boolean69 = atmosphereConfig63.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList70 = atmosphereConfig63.getshutdownHooks();
        atmosphereConfig39.setshutdownHooks(shutdownHookList70);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework72 = null;
        atmosphereConfig39.framework = atmosphereFramework72;
        atmosphereConfig39.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig39.properties;
        atmosphereConfig4.properties = strMap76;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(logger58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(shutdownHookList70);
        org.junit.Assert.assertNotNull(strMap76);
    }

    @Test
    public void test04659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04659");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        int int9 = atmosphereConfig4.getInitParameter("", (int) (short) 10);
        java.lang.String str11 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig4.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig4.getstartUpHook();
        java.lang.String str16 = atmosphereConfig4.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig4.getproperties();
        int int20 = atmosphereConfig4.getInitParameter("hi!", (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test04660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04660");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig0.startupHook(startupHook4);
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
    }

    @Test
    public void test04661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04661");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.lang.String str13 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        atmosphereConfig15.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig15.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.getproperties();
        atmosphereConfig20.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig20.startupHook(startupHook37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig38.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig38.atmosphereHandlerConfig;
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig42.shutdownHooks = shutdownHookList46;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig42.getproperties();
        atmosphereConfig15.properties = strMap49;
        atmosphereConfig0.properties = strMap49;
        boolean boolean52 = atmosphereConfig0.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig0.properties();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration54 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMap53);
    }

    @Test
    public void test04662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04662");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean31 = atmosphereConfig0.isSupportSession();
        boolean boolean32 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig0.shutdownHook(shutdownHook37);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
    }

    @Test
    public void test04663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04663");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig9.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig9.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.populate(atmosphereConfig9);
        atmosphereConfig17.sessionTimeoutRemovalAllowed = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider20 = atmosphereConfig17.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
    }

    @Test
    public void test04664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04664");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig7.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig27.getAtmosphereHandlerConfig();
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray37 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList38, shutdownHookArray37);
        atmosphereConfig34.shutdownHooks = shutdownHookList38;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig34.getproperties();
        atmosphereConfig26.setproperties(strMap41);
        atmosphereConfig25.setproperties(strMap41);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig4.setshutdownHooks(shutdownHookList44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig46.atmosphereHandlerConfig = atmosphereHandlerConfigList52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray57 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList58, shutdownHookArray57);
        atmosphereConfig54.shutdownHooks = shutdownHookList58;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig54.getproperties();
        atmosphereConfig46.setproperties(strMap61);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig46.startupHook(startupHook63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig66.destroy();
        boolean boolean68 = atmosphereConfig66.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig66.shutdownHook(shutdownHook69);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig66.getAtmosphereHandlerConfig();
        atmosphereConfig65.atmosphereHandlerConfig = atmosphereHandlerConfigList71;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        boolean boolean75 = atmosphereConfig73.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray76 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList77, shutdownHookArray76);
        atmosphereConfig73.shutdownHooks = shutdownHookList77;
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = atmosphereConfig73.getproperties();
        atmosphereConfig65.setproperties(strMap80);
        atmosphereConfig64.setproperties(strMap80);
        int int85 = atmosphereConfig64.getInitParameter("", 100);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList86 = atmosphereConfig64.shutdownHooks;
        boolean boolean87 = atmosphereConfig64.isSupportSession();
        boolean boolean88 = atmosphereConfig64.isSupportSession();
        atmosphereConfig64.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig91 = atmosphereConfig4.populate(atmosphereConfig64);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework92 = null;
        atmosphereConfig4.framework = atmosphereFramework92;
        boolean boolean94 = atmosphereConfig4.getuseServletContextParameters();
        atmosphereConfig4.initComplete();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertNotNull(shutdownHookList86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test04665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04665");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        boolean boolean28 = atmosphereConfig23.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        atmosphereConfig29.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig29.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig29.atmosphereHandlerConfig;
        atmosphereConfig23.atmosphereHandlerConfig = atmosphereHandlerConfigList42;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig0.populate(atmosphereConfig23);
        boolean boolean45 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.supportSession = true;
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test04666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04666");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        boolean boolean25 = atmosphereConfig24.supportSession;
        atmosphereConfig24.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        boolean boolean33 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig0.framework;
        boolean boolean37 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean38 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean39 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig0.shutdownHook(shutdownHook40);
        atmosphereConfig41.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
    }

    @Test
    public void test04667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04667");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.framework();
        boolean boolean9 = atmosphereConfig0.getInitParameter("", false);
        atmosphereConfig0.useServletContextParameters = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test04668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04668");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        java.lang.Class<?> wildcardClass5 = strMap4.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test04669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04669");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig4.startUpHook;
        org.slf4j.Logger logger11 = atmosphereConfig4.getlogger();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(logger11);
    }

    @Test
    public void test04670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04670");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = false;
        int int15 = atmosphereConfig0.getInitParameter("hi!", (int) (byte) 100);
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.getproperties();
        atmosphereConfig20.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig20.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig40.getAtmosphereHandlerConfig();
        atmosphereConfig39.atmosphereHandlerConfig = atmosphereHandlerConfigList45;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51, shutdownHookArray50);
        atmosphereConfig47.shutdownHooks = shutdownHookList51;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig47.getproperties();
        atmosphereConfig39.setproperties(strMap54);
        atmosphereConfig38.setproperties(strMap54);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig38.shutdownHooks;
        atmosphereConfig38.useServletContextParameters = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig38.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList60);
        org.slf4j.Logger logger62 = atmosphereConfig0.getlogger();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.slf4j.Logger logger65 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(logger62);
        org.junit.Assert.assertNotNull(logger65);
    }

    @Test
    public void test04671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04671");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig13.startupHook(startupHook15);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext17 = atmosphereConfig16.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
    }

    @Test
    public void test04672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04672");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.supportSession = true;
        org.slf4j.Logger logger32 = atmosphereConfig0.getlogger();
        boolean boolean33 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig36.properties = strMap44;
        boolean boolean46 = atmosphereConfig36.useServletContextParameters;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig36.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory49 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
    }

    @Test
    public void test04673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04673");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        boolean boolean6 = atmosphereConfig4.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.startupHook(startupHook13);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig14.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList15);
        java.lang.String str18 = atmosphereConfig4.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig4.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig4.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        boolean boolean24 = atmosphereConfig4.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig4.getframework();
        int int28 = atmosphereConfig4.getInitParameter("", 52);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider29 = atmosphereConfig4.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
    }

    @Test
    public void test04674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04674");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        org.slf4j.Logger logger38 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig18.framework();
        atmosphereConfig18.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(logger38);
        org.junit.Assert.assertNull(atmosphereFramework39);
    }

    @Test
    public void test04675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04675");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        int int9 = atmosphereConfig4.getInitParameter("", (int) (short) 10);
        java.lang.String str11 = atmosphereConfig4.getInitParameter("");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory12 = atmosphereConfig4.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test04676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04676");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.slf4j.Logger logger19 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig18.framework;
        atmosphereConfig18.supportSession = true;
        int int25 = atmosphereConfig18.getInitParameter("hi!", (int) (byte) 0);
        atmosphereConfig18.destroy();
        atmosphereConfig18.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig18.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig18.properties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory31 = atmosphereConfig18.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test04677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04677");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig0.framework = atmosphereFramework18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.getproperties();
        atmosphereConfig20.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig20.properties = strMap44;
        atmosphereConfig20.sessionTimeoutRemovalAllowed = true;
        boolean boolean50 = atmosphereConfig20.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig20.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig20.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig0.populate(atmosphereConfig20);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig20.getproperties();
        boolean boolean57 = atmosphereConfig20.getInitParameter("hi!", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test04678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04678");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.destroy();
        boolean boolean7 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig5.properties();
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig14.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig14.startUpHook;
        atmosphereConfig5.setstartUpHook(startupHookList18);
        atmosphereConfig0.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig22.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.startupHook(startupHook25);
        atmosphereConfig22.setSupportSession(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
    }

    @Test
    public void test04679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04679");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList14);
        atmosphereConfig4.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        atmosphereConfig21.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26, startupHookArray25);
        atmosphereConfig21.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26);
        atmosphereConfig18.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26);
        atmosphereConfig18.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig4.populate(atmosphereConfig18);
        boolean boolean32 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        java.lang.String str34 = atmosphereConfig4.getInitParameter("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test04680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04680");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig18.startupHook(startupHook37);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig38.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig38.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig38.startUpHook;
        java.lang.Class<?> wildcardClass42 = startupHookList41.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test04681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04681");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        boolean boolean6 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig4.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig8.startupHook(startupHook9);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList11;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.shutdownHook(shutdownHook16);
        boolean boolean18 = atmosphereConfig0.supportSession;
        boolean boolean19 = atmosphereConfig0.getuseServletContextParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory20 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test04682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04682");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.supportSession = true;
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
    }

    @Test
    public void test04683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04683");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.supportSession = true;
        boolean boolean11 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean12 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.getshutdownHooks();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig15 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
    }

    @Test
    public void test04684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04684");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig18.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26);
        atmosphereConfig0.shutdownHooks = shutdownHookList26;
        boolean boolean30 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig0.getproperties();
        atmosphereConfig0.setuseServletContextParameters(false);
        org.slf4j.Logger logger34 = atmosphereConfig0.getlogger();
        boolean boolean35 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(logger34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test04685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04685");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray9 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList10, shutdownHookArray9);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        boolean boolean21 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.shutdownHook(shutdownHook22);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap24 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(shutdownHookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
    }

    @Test
    public void test04686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04686");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        int int9 = atmosphereConfig4.getInitParameter("", (int) (short) 10);
        java.lang.String str11 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig4.startupHook(startupHook12);
        atmosphereConfig4.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig4.framework;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNull(atmosphereFramework17);
    }

    @Test
    public void test04687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04687");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.framework = atmosphereFramework10;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig13.getAtmosphereHandlerConfig();
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig20.shutdownHooks = shutdownHookList24;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.getproperties();
        atmosphereConfig12.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig12.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig32.getAtmosphereHandlerConfig();
        atmosphereConfig31.atmosphereHandlerConfig = atmosphereHandlerConfigList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43, shutdownHookArray42);
        atmosphereConfig39.shutdownHooks = shutdownHookList43;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig39.getproperties();
        atmosphereConfig31.setproperties(strMap46);
        atmosphereConfig30.setproperties(strMap46);
        int int51 = atmosphereConfig30.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig30.startupHook(startupHook52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        atmosphereConfig54.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig61.shutdownHook(shutdownHook64);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig61.getAtmosphereHandlerConfig();
        atmosphereConfig54.atmosphereHandlerConfig = atmosphereHandlerConfigList66;
        atmosphereConfig30.atmosphereHandlerConfig = atmosphereHandlerConfigList66;
        java.lang.String str70 = atmosphereConfig30.getInitParameter("hi!");
        atmosphereConfig30.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        boolean boolean75 = atmosphereConfig73.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray76 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList77, shutdownHookArray76);
        atmosphereConfig73.shutdownHooks = shutdownHookList77;
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = atmosphereConfig73.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList81 = atmosphereConfig73.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework82 = null;
        atmosphereConfig73.setframework(atmosphereFramework82);
        boolean boolean84 = atmosphereConfig73.getuseServletContextParameters();
        atmosphereConfig73.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig87 = atmosphereConfig30.populate(atmosphereConfig73);
        boolean boolean88 = atmosphereConfig87.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList89 = atmosphereConfig87.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList89;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList89);
    }

    @Test
    public void test04688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04688");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean31 = atmosphereConfig0.isSupportSession();
        boolean boolean32 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean33 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str35 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.sessionTimeoutRemovalAllowed;
        boolean boolean39 = atmosphereConfig36.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig0.populate(atmosphereConfig36);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap41 = atmosphereConfig36.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
    }

    @Test
    public void test04689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04689");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        boolean boolean11 = atmosphereConfig0.isSupportSession();
        boolean boolean12 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.setuseServletContextParameters(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test04690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04690");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19, startupHookArray18);
        atmosphereConfig8.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig8.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig24.getAtmosphereHandlerConfig();
        atmosphereConfig23.atmosphereHandlerConfig = atmosphereHandlerConfigList29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        boolean boolean33 = atmosphereConfig31.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray34 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList35, shutdownHookArray34);
        atmosphereConfig31.shutdownHooks = shutdownHookList35;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig31.getproperties();
        atmosphereConfig23.setproperties(strMap38);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig23.startupHook(startupHook40);
        boolean boolean42 = atmosphereConfig41.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        boolean boolean47 = atmosphereConfig44.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig44.startUpHook;
        atmosphereConfig41.setstartUpHook(startupHookList48);
        atmosphereConfig8.startUpHook = startupHookList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        boolean boolean54 = atmosphereConfig51.isSessionTimeoutRemovalAllowed();
        java.lang.String str56 = atmosphereConfig51.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig51.getshutdownHooks();
        atmosphereConfig8.shutdownHooks = shutdownHookList57;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig4.populate(atmosphereConfig8);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster60 = atmosphereConfig59.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(startupHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
    }

    @Test
    public void test04691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04691");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        boolean boolean25 = atmosphereConfig24.supportSession;
        atmosphereConfig24.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        boolean boolean33 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        int int36 = atmosphereConfig0.getInitParameter("", (int) (byte) 10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        boolean boolean42 = atmosphereConfig41.supportSession;
        boolean boolean43 = atmosphereConfig41.isSessionTimeoutRemovalAllowed();
        boolean boolean44 = atmosphereConfig41.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig41.properties();
        atmosphereConfig0.setproperties(strMap45);
        int int49 = atmosphereConfig0.getInitParameter("hi!", (int) 'a');
        boolean boolean50 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.lang.String str53 = atmosphereConfig0.getInitParameter("hi!", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 97 + "'", int49 == 97);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
    }

    @Test
    public void test04692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04692");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.supportSession = true;
        boolean boolean11 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig14 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test04693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04693");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties();
        atmosphereConfig0.setproperties(strMap16);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("", "");
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.slf4j.Logger logger23 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig0.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig0.getframework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster28 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNull(atmosphereFramework27);
    }

    @Test
    public void test04694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04694");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        boolean boolean14 = atmosphereConfig13.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig16.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig16.startupHook(startupHook33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig35.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray46 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList47, shutdownHookArray46);
        atmosphereConfig43.shutdownHooks = shutdownHookList47;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig43.getproperties();
        atmosphereConfig35.setproperties(strMap50);
        atmosphereConfig34.setproperties(strMap50);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig34.shutdownHooks;
        atmosphereConfig13.setshutdownHooks(shutdownHookList53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.destroy();
        boolean boolean57 = atmosphereConfig55.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray58 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList59, shutdownHookArray58);
        atmosphereConfig55.shutdownHooks = shutdownHookList59;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = atmosphereConfig55.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig55.properties;
        atmosphereConfig13.properties = strMap63;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig0.populate(atmosphereConfig13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = atmosphereConfig65.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(atmosphereFramework62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
    }

    @Test
    public void test04695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04695");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        boolean boolean11 = atmosphereConfig0.isSupportSession();
        boolean boolean12 = atmosphereConfig0.useServletContextParameters;
        java.lang.String str14 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean15 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.startupHook(startupHook21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties;
        org.slf4j.Logger logger24 = atmosphereConfig20.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        atmosphereConfig25.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig32.getAtmosphereHandlerConfig();
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList37;
        atmosphereConfig25.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig25.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig25.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        atmosphereConfig25.framework = atmosphereFramework43;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig20.populate(atmosphereConfig25);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig45.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig0.populate(atmosphereConfig45);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory48 = atmosphereConfig45.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(logger24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
    }

    @Test
    public void test04696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04696");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig59.setframework(atmosphereFramework60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63, startupHookArray62);
        atmosphereConfig59.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63);
        atmosphereConfig59.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig59.framework();
        java.lang.String str71 = atmosphereConfig59.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig18.populate(atmosphereConfig59);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework73 = null;
        atmosphereConfig18.setframework(atmosphereFramework73);
        atmosphereConfig18.initComplete();
        org.slf4j.Logger logger76 = atmosphereConfig18.getlogger();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(startupHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(logger76);
    }

    @Test
    public void test04697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04697");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean6 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        boolean boolean12 = atmosphereConfig11.supportSession;
        boolean boolean13 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        boolean boolean14 = atmosphereConfig11.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig11.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.populate(atmosphereConfig11);
        boolean boolean17 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig19.getAtmosphereHandlerConfig();
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30, shutdownHookArray29);
        atmosphereConfig26.shutdownHooks = shutdownHookList30;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig26.getproperties();
        atmosphereConfig18.setproperties(strMap33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig35.shutdownHooks = shutdownHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig35.getproperties();
        atmosphereConfig18.properties = strMap42;
        atmosphereConfig18.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig18.setSupportSession(false);
        boolean boolean48 = atmosphereConfig18.isThrowExceptionOnCloned();
        boolean boolean49 = atmosphereConfig18.isSupportSession();
        boolean boolean50 = atmosphereConfig18.throwExceptionOnCloned;
        atmosphereConfig18.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.destroy();
        boolean boolean55 = atmosphereConfig53.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig57.startupHook(startupHook58);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig57.properties;
        org.slf4j.Logger logger61 = atmosphereConfig57.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        boolean boolean64 = atmosphereConfig62.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig62.shutdownHook(shutdownHook65);
        atmosphereConfig62.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig69.destroy();
        boolean boolean71 = atmosphereConfig69.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig69.shutdownHook(shutdownHook72);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = atmosphereConfig69.getAtmosphereHandlerConfig();
        atmosphereConfig62.atmosphereHandlerConfig = atmosphereHandlerConfigList74;
        atmosphereConfig62.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList78 = atmosphereConfig62.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig62.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework80 = null;
        atmosphereConfig62.framework = atmosphereFramework80;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig57.populate(atmosphereConfig62);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig83.destroy();
        boolean boolean85 = atmosphereConfig83.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook86 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig87 = atmosphereConfig83.shutdownHook(shutdownHook86);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList88 = atmosphereConfig83.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList89 = atmosphereConfig83.shutdownHooks;
        atmosphereConfig57.setshutdownHooks(shutdownHookList89);
        atmosphereConfig18.shutdownHooks = shutdownHookList89;
        atmosphereConfig16.shutdownHooks = shutdownHookList89;
        atmosphereConfig16.setuseServletContextParameters(false);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig95 = atmosphereConfig16.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(logger61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList74);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig87);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList88);
        org.junit.Assert.assertNotNull(shutdownHookList89);
    }

    @Test
    public void test04698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04698");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig18.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26);
        atmosphereConfig0.shutdownHooks = shutdownHookList26;
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig0.properties();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig35 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test04699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04699");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.framework();
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.supportSession = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test04700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04700");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig18.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = atmosphereConfig18.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = null;
        atmosphereConfig62.setframework(atmosphereFramework63);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray65 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList66 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList66, startupHookArray65);
        atmosphereConfig62.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList66);
        atmosphereConfig62.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = atmosphereConfig62.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig72.destroy();
        boolean boolean74 = atmosphereConfig72.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig72.shutdownHook(shutdownHook75);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList77 = atmosphereConfig72.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = atmosphereConfig72.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig72.getAtmosphereHandlerConfig();
        atmosphereConfig62.atmosphereHandlerConfig = atmosphereHandlerConfigList79;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList79;
        boolean boolean82 = atmosphereConfig18.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework83 = null;
        atmosphereConfig18.framework = atmosphereFramework83;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(shutdownHookList61);
        org.junit.Assert.assertNotNull(startupHookArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(atmosphereFramework71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList77);
        org.junit.Assert.assertNotNull(shutdownHookList78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test04701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04701");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig2.destroy();
        boolean boolean4 = atmosphereConfig2.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig2.shutdownHook(shutdownHook5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig6.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig8.getframework();
        org.slf4j.Logger logger10 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        boolean boolean14 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig11.startUpHook;
        atmosphereConfig8.startUpHook = startupHookList15;
        atmosphereConfig0.setstartUpHook(startupHookList15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        boolean boolean23 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        atmosphereConfig18.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig18.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        atmosphereConfig28.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig35.getAtmosphereHandlerConfig();
        atmosphereConfig28.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig28.startupHook(startupHook42);
        atmosphereConfig43.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig50.startupHook(startupHook51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.destroy();
        boolean boolean55 = atmosphereConfig53.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig57.startupHook(startupHook58);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.getstartUpHook();
        atmosphereConfig50.setstartUpHook(startupHookList60);
        atmosphereConfig43.startUpHook = startupHookList60;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig43.properties;
        atmosphereConfig18.setproperties(strMap63);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig18.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig0.populate(atmosphereConfig18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig68.destroy();
        boolean boolean70 = atmosphereConfig68.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook71 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig68.shutdownHook(shutdownHook71);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList73 = atmosphereConfig72.startUpHook;
        boolean boolean74 = atmosphereConfig72.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList75 = atmosphereConfig72.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig76.destroy();
        boolean boolean78 = atmosphereConfig76.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook79 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = atmosphereConfig76.shutdownHook(shutdownHook79);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook81 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig80.startupHook(startupHook81);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig82.getshutdownHooks();
        atmosphereConfig72.setshutdownHooks(shutdownHookList83);
        java.lang.String str86 = atmosphereConfig72.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList87 = atmosphereConfig72.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList88 = atmosphereConfig72.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList89 = atmosphereConfig72.getstartUpHook();
        atmosphereConfig67.setstartUpHook(startupHookList89);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList91 = atmosphereConfig67.startUpHook;
        org.slf4j.Logger logger92 = atmosphereConfig67.getlogger();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(startupHookList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(startupHookList75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig80);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(startupHookList87);
        org.junit.Assert.assertNotNull(shutdownHookList88);
        org.junit.Assert.assertNotNull(startupHookList89);
        org.junit.Assert.assertNotNull(startupHookList91);
        org.junit.Assert.assertNotNull(logger92);
    }

    @Test
    public void test04702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04702");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig18.setframework(atmosphereFramework38);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig42.getAtmosphereHandlerConfig();
        boolean boolean48 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray49 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50, shutdownHookArray49);
        atmosphereConfig42.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50);
        atmosphereConfig18.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50);
        boolean boolean54 = atmosphereConfig18.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig18.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        atmosphereConfig18.setproperties(strMap56);
        atmosphereConfig18.setSupportSession(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig18.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig18.getAtmosphereHandlerConfig();
        java.lang.String str64 = atmosphereConfig18.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig65.shutdownHook(shutdownHook66);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig68.destroy();
        boolean boolean70 = atmosphereConfig68.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray71 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList72, shutdownHookArray71);
        atmosphereConfig68.shutdownHooks = shutdownHookList72;
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = atmosphereConfig68.getproperties();
        atmosphereConfig67.properties = strMap75;
        boolean boolean77 = atmosphereConfig67.useServletContextParameters;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList78 = atmosphereConfig67.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework79 = null;
        atmosphereConfig67.setframework(atmosphereFramework79);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = atmosphereConfig67.shutdownHooks;
        atmosphereConfig18.setshutdownHooks(shutdownHookList81);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList78);
        org.junit.Assert.assertNotNull(shutdownHookList81);
    }

    @Test
    public void test04703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04703");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        atmosphereConfig10.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        boolean boolean18 = atmosphereConfig15.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.getstartUpHook();
        atmosphereConfig15.startUpHook = startupHookList26;
        atmosphereConfig10.setstartUpHook(startupHookList26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig10.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        atmosphereConfig31.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig31.getAtmosphereHandlerConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        java.lang.String str39 = atmosphereConfig31.getInitParameter("hi!");
        atmosphereConfig31.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig31.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(shutdownHookList42);
    }

    @Test
    public void test04704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04704");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        boolean boolean21 = atmosphereConfig18.getInitParameter("hi!", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig18.properties();
        boolean boolean23 = atmosphereConfig18.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test04705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04705");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = null;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList12);
        boolean boolean14 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.startupHook(startupHook15);
        atmosphereConfig0.setuseServletContextParameters(false);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext19 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
    }

    @Test
    public void test04706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04706");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig0.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig21.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig30.startupHook(startupHook31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(startupHookList33);
    }

    @Test
    public void test04707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04707");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig11.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList15;
        boolean boolean17 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.framework;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNull(atmosphereFramework19);
    }

    @Test
    public void test04708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04708");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig8.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig10.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig10.shutdownHooks;
        atmosphereConfig8.setshutdownHooks(shutdownHookList17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig8.setframework(atmosphereFramework19);
        boolean boolean21 = atmosphereConfig8.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig8.properties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test04709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04709");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean31 = atmosphereConfig0.isSupportSession();
        boolean boolean32 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean33 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str35 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.sessionTimeoutRemovalAllowed;
        boolean boolean39 = atmosphereConfig36.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig0.populate(atmosphereConfig36);
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray41 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList42, atmosphereHandlerConfigArray41);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList42;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig46.getAtmosphereHandlerConfig();
        atmosphereConfig45.atmosphereHandlerConfig = atmosphereHandlerConfigList51;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.destroy();
        boolean boolean55 = atmosphereConfig53.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray56 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList57, shutdownHookArray56);
        atmosphereConfig53.shutdownHooks = shutdownHookList57;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig53.getproperties();
        atmosphereConfig45.setproperties(strMap60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig45.startupHook(startupHook62);
        java.lang.String str65 = atmosphereConfig45.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig45.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = null;
        atmosphereConfig45.setframework(atmosphereFramework67);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig45.shutdownHook(shutdownHook69);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig70.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList72 = atmosphereConfig70.getAtmosphereHandlerConfig();
        boolean boolean73 = atmosphereConfig70.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig0.populate(atmosphereConfig70);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList75 = atmosphereConfig70.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList76 = atmosphereConfig70.shutdownHooks;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertNotNull(startupHookList75);
        org.junit.Assert.assertNotNull(shutdownHookList76);
    }

    @Test
    public void test04710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04710");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        atmosphereConfig0.setuseServletContextParameters(true);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig0.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory26 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookList25);
    }

    @Test
    public void test04711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04711");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.setframework(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList12, startupHookArray11);
        atmosphereConfig8.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList12);
        atmosphereConfig8.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig8.framework();
        java.lang.String str20 = atmosphereConfig8.getInitParameter("", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap21);
        boolean boolean23 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory24 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(startupHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test04712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04712");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.getframework();
        java.lang.String str14 = atmosphereConfig0.getInitParameter("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster15 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test04713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04713");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig18.getstartUpHook();
        java.lang.String str63 = atmosphereConfig18.getInitParameter("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test04714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04714");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.supportSession = true;
        boolean boolean6 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.slf4j.Logger logger7 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.startupHook(startupHook20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.properties;
        atmosphereConfig19.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig19.initComplete();
        java.lang.String str27 = atmosphereConfig19.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig8.populate(atmosphereConfig19);
        java.lang.String str30 = atmosphereConfig19.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        atmosphereConfig32.setSupportSession(true);
        boolean boolean38 = atmosphereConfig32.getInitParameter("hi!", true);
        boolean boolean39 = atmosphereConfig32.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        atmosphereConfig40.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig40.getAtmosphereHandlerConfig();
        atmosphereConfig32.atmosphereHandlerConfig = atmosphereHandlerConfigList44;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig32.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig32.startUpHook;
        atmosphereConfig31.setstartUpHook(startupHookList47);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(startupHookList47);
    }

    @Test
    public void test04715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04715");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.startupHook(startupHook35);
        int int39 = atmosphereConfig34.getInitParameter("", (int) (short) 10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig34.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList40);
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig0.startupHook(startupHook44);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        atmosphereConfig0.framework = atmosphereFramework46;
        boolean boolean48 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
    }

    @Test
    public void test04716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04716");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig59.setframework(atmosphereFramework60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63, startupHookArray62);
        atmosphereConfig59.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63);
        atmosphereConfig59.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig59.framework();
        java.lang.String str71 = atmosphereConfig59.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig18.populate(atmosphereConfig59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        boolean boolean75 = atmosphereConfig73.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig73.shutdownHook(shutdownHook76);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList78 = atmosphereConfig77.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = atmosphereConfig77.getshutdownHooks();
        boolean boolean80 = atmosphereConfig77.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = atmosphereConfig77.shutdownHooks;
        atmosphereConfig59.shutdownHooks = shutdownHookList81;
        boolean boolean83 = atmosphereConfig59.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext84 = atmosphereConfig59.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(startupHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(startupHookList78);
        org.junit.Assert.assertNotNull(shutdownHookList79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(shutdownHookList81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test04717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04717");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        int int40 = atmosphereConfig18.getInitParameter("", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig18.getproperties();
        boolean boolean42 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig18.shutdownHook(shutdownHook43);
        boolean boolean45 = atmosphereConfig18.isThrowExceptionOnCloned();
        boolean boolean46 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test04718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04718");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setuseServletContextParameters(true);
        boolean boolean12 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test04719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04719");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        boolean boolean11 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test04720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04720");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        atmosphereConfig3.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig3.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8);
        atmosphereConfig0.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList18, startupHookArray17);
        atmosphereConfig14.startUpHook = startupHookList18;
        atmosphereConfig0.startUpHook = startupHookList18;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig0.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        atmosphereConfig26.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        atmosphereConfig30.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig26.populate(atmosphereConfig30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig35.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig35.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44);
        atmosphereConfig26.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig26.setframework(atmosphereFramework48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig51.shutdownHook(shutdownHook54);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig51.getAtmosphereHandlerConfig();
        atmosphereConfig50.atmosphereHandlerConfig = atmosphereHandlerConfigList56;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig50.properties();
        atmosphereConfig26.setproperties(strMap58);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig61.shutdownHook(shutdownHook64);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig61.getAtmosphereHandlerConfig();
        atmosphereConfig60.atmosphereHandlerConfig = atmosphereHandlerConfigList66;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig68.destroy();
        boolean boolean70 = atmosphereConfig68.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray71 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList72, shutdownHookArray71);
        atmosphereConfig68.shutdownHooks = shutdownHookList72;
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = atmosphereConfig68.getproperties();
        atmosphereConfig60.setproperties(strMap75);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework77 = atmosphereConfig60.framework;
        boolean boolean78 = atmosphereConfig60.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig79.destroy();
        boolean boolean81 = atmosphereConfig79.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig79.shutdownHook(shutdownHook82);
        atmosphereConfig79.setuseServletContextParameters(false);
        atmosphereConfig79.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig79.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = atmosphereConfig79.properties();
        atmosphereConfig60.properties = strMap90;
        atmosphereConfig26.properties = strMap90;
        atmosphereConfig0.properties = strMap90;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(startupHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(atmosphereFramework77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(strMap90);
    }

    @Test
    public void test04721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04721");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        boolean boolean6 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig4.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig8.startupHook(startupHook9);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList11;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
    }

    @Test
    public void test04722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04722");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.lang.String str20 = atmosphereConfig18.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig18.startUpHook;
        int int24 = atmosphereConfig18.getInitParameter("", 97);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig18.framework;
        atmosphereConfig18.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        atmosphereConfig28.supportSession = false;
        boolean boolean32 = atmosphereConfig28.getuseServletContextParameters();
        atmosphereConfig28.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig37.getAtmosphereHandlerConfig();
        atmosphereConfig36.atmosphereHandlerConfig = atmosphereHandlerConfigList42;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray47 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList48, shutdownHookArray47);
        atmosphereConfig44.shutdownHooks = shutdownHookList48;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig44.getproperties();
        atmosphereConfig36.setproperties(strMap51);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig36.startupHook(startupHook53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig56.getAtmosphereHandlerConfig();
        atmosphereConfig55.atmosphereHandlerConfig = atmosphereHandlerConfigList61;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig63.destroy();
        boolean boolean65 = atmosphereConfig63.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray66 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList67, shutdownHookArray66);
        atmosphereConfig63.shutdownHooks = shutdownHookList67;
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig63.getproperties();
        atmosphereConfig55.setproperties(strMap70);
        atmosphereConfig54.setproperties(strMap70);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = atmosphereConfig54.shutdownHooks;
        int int76 = atmosphereConfig54.getInitParameter("", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig54.getproperties();
        boolean boolean78 = atmosphereConfig54.supportSession;
        atmosphereConfig54.sessionTimeoutRemovalAllowed = false;
        int int83 = atmosphereConfig54.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig84 = atmosphereConfig28.populate(atmosphereConfig54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig85 = atmosphereConfig18.populate(atmosphereConfig84);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(shutdownHookList73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig84);
        org.junit.Assert.assertNotNull(atmosphereConfig85);
    }

    @Test
    public void test04723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04723");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.supportSession = true;
        boolean boolean6 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.slf4j.Logger logger7 = atmosphereConfig0.getlogger();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        boolean boolean11 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test04724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04724");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        int int45 = atmosphereConfig41.getInitParameter("", (int) (short) 100);
        atmosphereConfig41.destroy();
        atmosphereConfig41.setuseServletContextParameters(false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration49 = atmosphereConfig41.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
    }

    @Test
    public void test04725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04725");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        atmosphereConfig14.setuseServletContextParameters(false);
        atmosphereConfig14.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig14.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24);
        atmosphereConfig0.shutdownHooks = shutdownHookList24;
        org.slf4j.Logger logger28 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(logger28);
    }

    @Test
    public void test04726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04726");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig16.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.getproperties();
        atmosphereConfig15.properties = strMap31;
        atmosphereConfig15.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig15.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig15.startupHook(startupHook36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig42.startupHook(startupHook43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig44.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig44.atmosphereHandlerConfig;
        java.lang.String str49 = atmosphereConfig44.getInitParameter("hi!", "");
        boolean boolean50 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig51.shutdownHooks = shutdownHookList55;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig51.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig51.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig51.setframework(atmosphereFramework60);
        boolean boolean62 = atmosphereConfig51.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig51.startupHook(startupHook63);
        atmosphereConfig64.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig64.startUpHook;
        atmosphereConfig44.startUpHook = startupHookList67;
        atmosphereConfig37.startUpHook = startupHookList67;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = atmosphereConfig37.getframework();
        atmosphereConfig37.useServletContextParameters = true;
        atmosphereConfig37.supportSession = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(startupHookList67);
        org.junit.Assert.assertNull(atmosphereFramework70);
    }

    @Test
    public void test04727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04727");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        org.slf4j.Logger logger29 = atmosphereConfig21.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig21.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig21.getframework();
        atmosphereConfig21.supportSession = false;
        atmosphereConfig21.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig21.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList36;
        boolean boolean38 = atmosphereConfig0.getuseServletContextParameters();
        int int41 = atmosphereConfig0.getInitParameter("", (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
    }

    @Test
    public void test04728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04728");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        atmosphereConfig0.setuseServletContextParameters(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig0.getproperties();
        java.lang.Class<?> wildcardClass18 = strMap17.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test04729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04729");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        org.slf4j.Logger logger29 = atmosphereConfig21.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig21.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.populate(atmosphereConfig21);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = null;
        atmosphereConfig0.startUpHook = startupHookList35;
        boolean boolean39 = atmosphereConfig0.getInitParameter("", false);
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test04730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04730");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.startupHook(startupHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig14.shutdownHooks = shutdownHookList18;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig14.getproperties();
        org.slf4j.Logger logger22 = atmosphereConfig14.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig14.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig14.getframework();
        java.lang.String str26 = atmosphereConfig14.getInitParameter("hi!");
        boolean boolean27 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig29.getAtmosphereHandlerConfig();
        atmosphereConfig28.atmosphereHandlerConfig = atmosphereHandlerConfigList34;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray39 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList40, shutdownHookArray39);
        atmosphereConfig36.shutdownHooks = shutdownHookList40;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig36.getproperties();
        atmosphereConfig28.setproperties(strMap43);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig28.startupHook(startupHook45);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig46.properties;
        atmosphereConfig14.properties = strMap47;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig14.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.destroy();
        boolean boolean57 = atmosphereConfig55.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig55.shutdownHook(shutdownHook58);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig55.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig55.properties();
        atmosphereConfig55.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig64.destroy();
        boolean boolean66 = atmosphereConfig64.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = atmosphereConfig64.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig64.startUpHook;
        atmosphereConfig55.setstartUpHook(startupHookList68);
        atmosphereConfig50.setstartUpHook(startupHookList68);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook71 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig50.startupHook(startupHook71);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        boolean boolean75 = atmosphereConfig73.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray76 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList77, shutdownHookArray76);
        atmosphereConfig73.shutdownHooks = shutdownHookList77;
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = atmosphereConfig73.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList81 = atmosphereConfig73.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework82 = null;
        atmosphereConfig73.setframework(atmosphereFramework82);
        boolean boolean84 = atmosphereConfig73.getuseServletContextParameters();
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = atmosphereConfig73.getproperties();
        atmosphereConfig50.setproperties(strMap85);
        atmosphereConfig14.setproperties(strMap85);
        atmosphereConfig11.properties = strMap85;
        boolean boolean89 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        boolean boolean92 = atmosphereConfig11.getInitParameter("", true);
        atmosphereConfig11.useServletContextParameters = true;
        atmosphereConfig11.useServletContextParameters = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(atmosphereFramework67);
        org.junit.Assert.assertNotNull(startupHookList68);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test04731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04731");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig59.setframework(atmosphereFramework60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63, startupHookArray62);
        atmosphereConfig59.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63);
        atmosphereConfig59.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig59.framework();
        java.lang.String str71 = atmosphereConfig59.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig18.populate(atmosphereConfig59);
        atmosphereConfig59.sessionTimeoutRemovalAllowed = false;
        org.slf4j.Logger logger75 = atmosphereConfig59.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig76.destroy();
        atmosphereConfig76.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList80 = atmosphereConfig76.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = null;
        atmosphereConfig76.framework = atmosphereFramework81;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig76.getshutdownHooks();
        atmosphereConfig59.shutdownHooks = shutdownHookList83;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook85 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = atmosphereConfig59.shutdownHook(shutdownHook85);
        org.slf4j.Logger logger87 = atmosphereConfig59.getlogger();
        boolean boolean90 = atmosphereConfig59.getInitParameter("hi!", true);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap91 = atmosphereConfig59.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(startupHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(logger75);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList80);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNotNull(atmosphereConfig86);
        org.junit.Assert.assertNotNull(logger87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test04732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04732");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setuseServletContextParameters(true);
        int int8 = atmosphereConfig0.getInitParameter("", 0);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.shutdownHook(shutdownHook10);
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
    }

    @Test
    public void test04733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04733");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework();
        boolean boolean17 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookList20);
    }

    @Test
    public void test04734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04734");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig4.framework = atmosphereFramework12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig4.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig4.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
    }

    @Test
    public void test04735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04735");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig11.getAtmosphereHandlerConfig();
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList22, shutdownHookArray21);
        atmosphereConfig18.shutdownHooks = shutdownHookList22;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig18.getproperties();
        atmosphereConfig10.setproperties(strMap25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig10.startupHook(startupHook27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig30.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig29.setproperties(strMap44);
        atmosphereConfig28.setproperties(strMap44);
        int int49 = atmosphereConfig28.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig28.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.destroy();
        boolean boolean54 = atmosphereConfig52.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        atmosphereConfig52.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig59.shutdownHook(shutdownHook62);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig59.getAtmosphereHandlerConfig();
        atmosphereConfig52.atmosphereHandlerConfig = atmosphereHandlerConfigList64;
        atmosphereConfig28.atmosphereHandlerConfig = atmosphereHandlerConfigList64;
        java.lang.String str68 = atmosphereConfig28.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig28.properties;
        int int72 = atmosphereConfig28.getInitParameter("hi!", 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig28.properties;
        atmosphereConfig9.setproperties(strMap73);
        boolean boolean75 = atmosphereConfig9.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test04736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04736");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig14.shutdownHooks = shutdownHookList18;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig14.getproperties();
        atmosphereConfig6.setproperties(strMap21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig6.startupHook(startupHook23);
        org.slf4j.Logger logger25 = atmosphereConfig24.getlogger();
        atmosphereConfig24.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.populate(atmosphereConfig24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.startupHook(startupHook34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig35.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig39.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig39.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig39.atmosphereHandlerConfig;
        atmosphereConfig35.atmosphereHandlerConfig = atmosphereHandlerConfigList44;
        atmosphereConfig28.atmosphereHandlerConfig = atmosphereHandlerConfigList44;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        atmosphereConfig28.framework = atmosphereFramework47;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(logger25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(atmosphereFramework42);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
    }

    @Test
    public void test04737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04737");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.framework = atmosphereFramework4;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList6);
        boolean boolean10 = atmosphereConfig0.getInitParameter("", true);
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test04738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04738");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean5 = atmosphereConfig0.useServletContextParameters;
        boolean boolean6 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.framework = atmosphereFramework9;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig13.getAtmosphereHandlerConfig();
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig20.shutdownHooks = shutdownHookList24;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.getproperties();
        atmosphereConfig12.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig29.shutdownHooks = shutdownHookList33;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig29.getproperties();
        atmosphereConfig12.properties = strMap36;
        atmosphereConfig12.sessionTimeoutRemovalAllowed = true;
        java.lang.String str42 = atmosphereConfig12.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig47.startupHook(startupHook48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig47.properties;
        org.slf4j.Logger logger51 = atmosphereConfig47.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.destroy();
        boolean boolean54 = atmosphereConfig52.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        atmosphereConfig52.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig59.shutdownHook(shutdownHook62);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig59.getAtmosphereHandlerConfig();
        atmosphereConfig52.atmosphereHandlerConfig = atmosphereHandlerConfigList64;
        atmosphereConfig52.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig52.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList69 = atmosphereConfig52.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = null;
        atmosphereConfig52.framework = atmosphereFramework70;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig47.populate(atmosphereConfig52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        boolean boolean75 = atmosphereConfig73.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig73.shutdownHook(shutdownHook76);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList78 = atmosphereConfig73.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = atmosphereConfig73.shutdownHooks;
        atmosphereConfig47.setshutdownHooks(shutdownHookList79);
        atmosphereConfig12.shutdownHooks = shutdownHookList79;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig0.populate(atmosphereConfig12);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(logger51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList69);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList78);
        org.junit.Assert.assertNotNull(shutdownHookList79);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
    }

    @Test
    public void test04739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04739");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig8.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        boolean boolean20 = atmosphereConfig19.supportSession;
        boolean boolean21 = atmosphereConfig19.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.getproperties();
        atmosphereConfig22.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43, shutdownHookArray42);
        atmosphereConfig39.shutdownHooks = shutdownHookList43;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig39.getproperties();
        atmosphereConfig22.properties = strMap46;
        atmosphereConfig19.setproperties(strMap46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig19.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        boolean boolean52 = atmosphereConfig4.useServletContextParameters;
        atmosphereConfig4.setuseServletContextParameters(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test04740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04740");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig0.framework();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNull(atmosphereFramework14);
    }

    @Test
    public void test04741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04741");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig0.framework;
        boolean boolean18 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        atmosphereConfig19.setuseServletContextParameters(false);
        atmosphereConfig19.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig19.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig19.properties();
        atmosphereConfig0.properties = strMap30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        atmosphereConfig32.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        atmosphereConfig36.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig32.populate(atmosphereConfig36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig42.getAtmosphereHandlerConfig();
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray52 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList53, shutdownHookArray52);
        atmosphereConfig49.shutdownHooks = shutdownHookList53;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig49.getproperties();
        atmosphereConfig41.setproperties(strMap56);
        boolean boolean60 = atmosphereConfig41.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig32.populate(atmosphereConfig41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig0.populate(atmosphereConfig61);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig63.destroy();
        boolean boolean65 = atmosphereConfig63.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig63.shutdownHook(shutdownHook66);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig67.startupHook(startupHook68);
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig67.properties;
        atmosphereConfig67.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        boolean boolean75 = atmosphereConfig73.supportSession;
        boolean boolean76 = atmosphereConfig73.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList77 = atmosphereConfig73.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList78 = atmosphereConfig73.getAtmosphereHandlerConfig();
        atmosphereConfig67.atmosphereHandlerConfig = atmosphereHandlerConfigList78;
        atmosphereConfig62.atmosphereHandlerConfig = atmosphereHandlerConfigList78;
        boolean boolean81 = atmosphereConfig62.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework82 = null;
        atmosphereConfig62.setframework(atmosphereFramework82);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(startupHookList77);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test04742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04742");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.shutdownHook(shutdownHook10);
        atmosphereConfig11.setSupportSession(false);
        java.lang.String str15 = atmosphereConfig11.getInitParameter("");
        boolean boolean16 = atmosphereConfig11.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig11.startupHook(startupHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig11.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
    }

    @Test
    public void test04743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04743");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8, shutdownHookArray7);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig16.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig16.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.populate(atmosphereConfig34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = null;
        atmosphereConfig34.startUpHook = startupHookList37;
        org.slf4j.Logger logger39 = atmosphereConfig34.getlogger();
        atmosphereConfig34.setThrowExceptionOnCloned(false);
        java.lang.Class<?> wildcardClass42 = atmosphereConfig34.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(logger39);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test04744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04744");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.supportSession = true;
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties;
        org.slf4j.Logger logger13 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
    }

    @Test
    public void test04745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04745");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        boolean boolean11 = atmosphereConfig0.supportSession;
        boolean boolean12 = atmosphereConfig0.getuseServletContextParameters();
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test04746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04746");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17, shutdownHookArray16);
        atmosphereConfig13.shutdownHooks = shutdownHookList17;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig13.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig13.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig13.setframework(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig24.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray34 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList35, startupHookArray34);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList35);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig24.startUpHook;
        atmosphereConfig13.startUpHook = startupHookList38;
        atmosphereConfig0.startUpHook = startupHookList38;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig41 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(startupHookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(startupHookList38);
    }

    @Test
    public void test04747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04747");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        java.lang.String str43 = atmosphereConfig41.getInitParameter("hi!");
        atmosphereConfig41.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig50.startupHook(startupHook51);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = atmosphereConfig52.getframework();
        org.slf4j.Logger logger54 = atmosphereConfig52.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.destroy();
        boolean boolean57 = atmosphereConfig55.supportSession;
        boolean boolean58 = atmosphereConfig55.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig55.startUpHook;
        atmosphereConfig52.startUpHook = startupHookList59;
        atmosphereConfig41.startUpHook = startupHookList59;
        boolean boolean62 = atmosphereConfig41.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = null;
        atmosphereConfig41.setframework(atmosphereFramework63);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = null;
        atmosphereConfig41.framework = atmosphereFramework65;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNull(atmosphereFramework53);
        org.junit.Assert.assertNotNull(logger54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test04748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04748");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig18.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig18.shutdownHook(shutdownHook22);
        atmosphereConfig18.destroy();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
    }

    @Test
    public void test04749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04749");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean31 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig32.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig40.shutdownHooks = shutdownHookList44;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig40.getproperties();
        atmosphereConfig32.setproperties(strMap47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig32.startupHook(startupHook49);
        org.slf4j.Logger logger51 = atmosphereConfig32.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig32.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig0.populate(atmosphereConfig32);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory54 = atmosphereConfig53.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(logger51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
    }

    @Test
    public void test04750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04750");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        boolean boolean6 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig7.startupHook(startupHook33);
        atmosphereConfig34.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig37.getAtmosphereHandlerConfig();
        atmosphereConfig36.atmosphereHandlerConfig = atmosphereHandlerConfigList42;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray47 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList48, shutdownHookArray47);
        atmosphereConfig44.shutdownHooks = shutdownHookList48;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig44.getproperties();
        atmosphereConfig36.setproperties(strMap51);
        boolean boolean55 = atmosphereConfig36.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        boolean boolean61 = atmosphereConfig60.supportSession;
        atmosphereConfig60.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray64 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList65, startupHookArray64);
        atmosphereConfig60.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList65);
        atmosphereConfig36.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList65);
        atmosphereConfig34.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList65);
        atmosphereConfig4.startUpHook = startupHookList65;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig4.properties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(startupHookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strMap71);
    }

    @Test
    public void test04751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04751");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        boolean boolean5 = atmosphereConfig3.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig3.shutdownHooks = shutdownHookList7;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig3.getproperties();
        atmosphereConfig2.properties = strMap10;
        boolean boolean12 = atmosphereConfig2.useServletContextParameters;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig2.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig2.setframework(atmosphereFramework14);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig2.properties;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext17 = atmosphereConfig2.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test04752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04752");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        java.lang.String str11 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap12 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test04753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04753");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        boolean boolean12 = atmosphereConfig9.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig9.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        boolean boolean19 = atmosphereConfig16.throwExceptionOnCloned;
        atmosphereConfig16.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        boolean boolean27 = atmosphereConfig26.supportSession;
        boolean boolean28 = atmosphereConfig26.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig30.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig29.setproperties(strMap44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray49 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50, shutdownHookArray49);
        atmosphereConfig46.shutdownHooks = shutdownHookList50;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig46.getproperties();
        atmosphereConfig29.properties = strMap53;
        atmosphereConfig26.setproperties(strMap53);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig26.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig57.shutdownHook(shutdownHook60);
        atmosphereConfig57.setuseServletContextParameters(false);
        atmosphereConfig57.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray66 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList67, shutdownHookArray66);
        atmosphereConfig57.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList67);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = null;
        atmosphereConfig57.framework = atmosphereFramework70;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = atmosphereConfig57.getshutdownHooks();
        atmosphereConfig26.setshutdownHooks(shutdownHookList72);
        atmosphereConfig26.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig16.populate(atmosphereConfig26);
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig16.properties();
        atmosphereConfig0.setproperties(strMap77);
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig0.properties;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration80 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(shutdownHookArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(shutdownHookList72);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap79);
    }

    @Test
    public void test04754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04754");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework();
        boolean boolean21 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean22 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.useServletContextParameters = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider25 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test04755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04755");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig6.useServletContextParameters;
        atmosphereConfig6.initComplete();
        boolean boolean9 = atmosphereConfig6.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        boolean boolean13 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.startUpHook;
        atmosphereConfig6.startUpHook = startupHookList14;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig6.getframework();
        boolean boolean17 = atmosphereConfig6.useServletContextParameters;
        java.lang.String str19 = atmosphereConfig6.getInitParameter("hi!");
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig6.framework;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(atmosphereFramework22);
    }

    @Test
    public void test04756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04756");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig13.getAtmosphereHandlerConfig();
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig20.shutdownHooks = shutdownHookList24;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.getproperties();
        atmosphereConfig12.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig29.shutdownHooks = shutdownHookList33;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig29.getproperties();
        atmosphereConfig12.properties = strMap36;
        atmosphereConfig12.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig0.populate(atmosphereConfig12);
        atmosphereConfig40.setuseServletContextParameters(true);
        atmosphereConfig40.setuseServletContextParameters(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig40.getstartUpHook();
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(startupHookList45);
    }

    @Test
    public void test04757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04757");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = null;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList12);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig0.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider19 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(shutdownHookList18);
    }

    @Test
    public void test04758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04758");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        atmosphereConfig4.supportSession = false;
        boolean boolean8 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig4.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = atmosphereConfig4.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
    }

    @Test
    public void test04759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04759");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        atmosphereConfig9.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig23.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig23.getshutdownHooks();
        atmosphereConfig9.setshutdownHooks(shutdownHookList27);
        atmosphereConfig0.setshutdownHooks(shutdownHookList27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        boolean boolean33 = atmosphereConfig31.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig31.getAtmosphereHandlerConfig();
        atmosphereConfig30.atmosphereHandlerConfig = atmosphereHandlerConfigList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig30.setproperties(strMap45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51, shutdownHookArray50);
        atmosphereConfig47.shutdownHooks = shutdownHookList51;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig47.getproperties();
        atmosphereConfig30.properties = strMap54;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig30.startupHook(startupHook56);
        atmosphereConfig57.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig59.shutdownHook(shutdownHook60);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        boolean boolean64 = atmosphereConfig62.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig65.destroy();
        atmosphereConfig65.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray69 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList70 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList70, startupHookArray69);
        atmosphereConfig65.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList70);
        atmosphereConfig62.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList70);
        atmosphereConfig59.startUpHook = startupHookList70;
        atmosphereConfig57.startUpHook = startupHookList70;
        atmosphereConfig0.startUpHook = startupHookList70;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig0.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig78 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(startupHookArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shutdownHookList77);
    }

    @Test
    public void test04760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04760");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.slf4j.Logger logger31 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(true);
        atmosphereConfig0.setuseServletContextParameters(true);
        boolean boolean39 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig40 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test04761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04761");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig15.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.startupHook(startupHook23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.startupHook(startupHook30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.getstartUpHook();
        atmosphereConfig22.setstartUpHook(startupHookList32);
        atmosphereConfig15.startUpHook = startupHookList32;
        boolean boolean35 = atmosphereConfig15.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig15.getproperties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test04762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04762");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        boolean boolean38 = atmosphereConfig18.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig18.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig40.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig40.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig47.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        boolean boolean59 = atmosphereConfig58.supportSession;
        boolean boolean60 = atmosphereConfig58.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        boolean boolean64 = atmosphereConfig62.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig62.shutdownHook(shutdownHook65);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig62.getAtmosphereHandlerConfig();
        atmosphereConfig61.atmosphereHandlerConfig = atmosphereHandlerConfigList67;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig69.destroy();
        boolean boolean71 = atmosphereConfig69.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray72 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList73, shutdownHookArray72);
        atmosphereConfig69.shutdownHooks = shutdownHookList73;
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig69.getproperties();
        atmosphereConfig61.setproperties(strMap76);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig78.destroy();
        boolean boolean80 = atmosphereConfig78.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray81 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList82 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList82, shutdownHookArray81);
        atmosphereConfig78.shutdownHooks = shutdownHookList82;
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = atmosphereConfig78.getproperties();
        atmosphereConfig61.properties = strMap85;
        atmosphereConfig58.setproperties(strMap85);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList88 = atmosphereConfig58.getAtmosphereHandlerConfig();
        atmosphereConfig47.atmosphereHandlerConfig = atmosphereHandlerConfigList88;
        atmosphereConfig40.atmosphereHandlerConfig = atmosphereHandlerConfigList88;
        atmosphereConfig40.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap93 = atmosphereConfig40.getproperties();
        atmosphereConfig40.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList96 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig18.shutdownHooks = shutdownHookList96;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList88);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(shutdownHookList96);
    }

    @Test
    public void test04763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04763");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig0.framework;
        boolean boolean18 = atmosphereConfig0.isSupportSession();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration19 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test04764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04764");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig7.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        boolean boolean19 = atmosphereConfig18.supportSession;
        boolean boolean20 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig29.shutdownHooks = shutdownHookList33;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig29.getproperties();
        atmosphereConfig21.setproperties(strMap36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig21.properties = strMap45;
        atmosphereConfig18.setproperties(strMap45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray57 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList58, shutdownHookArray57);
        atmosphereConfig54.shutdownHooks = shutdownHookList58;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig54.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig54.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig54.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig54.getAtmosphereHandlerConfig();
        atmosphereConfig54.initComplete();
        boolean boolean66 = atmosphereConfig54.supportSession;
        boolean boolean67 = atmosphereConfig54.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList68 = atmosphereConfig54.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList68);
        boolean boolean70 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(atmosphereFramework61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(shutdownHookList68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test04765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04765");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        boolean boolean6 = atmosphereConfig0.getInitParameter("hi!", true);
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        atmosphereConfig8.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        boolean boolean16 = atmosphereConfig0.getInitParameter("hi!", false);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test04766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04766");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.framework = atmosphereFramework10;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNull(atmosphereFramework16);
    }

    @Test
    public void test04767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04767");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = null;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.shutdownHook(shutdownHook9);
        boolean boolean11 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig10.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig10.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
    }

    @Test
    public void test04768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04768");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig4.getframework();
        boolean boolean9 = atmosphereConfig4.isSupportSession();
        boolean boolean10 = atmosphereConfig4.getuseServletContextParameters();
        boolean boolean11 = atmosphereConfig4.throwExceptionOnCloned;
        atmosphereConfig4.useServletContextParameters = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test04769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04769");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig0.setSupportSession(true);
        boolean boolean18 = atmosphereConfig0.supportSession;
        boolean boolean19 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig20.shutdownHooks = shutdownHookList24;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.getproperties();
        org.slf4j.Logger logger28 = atmosphereConfig20.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig20.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig20.startupHook(startupHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig33.atmosphereHandlerConfig = atmosphereHandlerConfigList39;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig41.shutdownHooks = shutdownHookList45;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig41.getproperties();
        atmosphereConfig33.setproperties(strMap48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray53 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList54, shutdownHookArray53);
        atmosphereConfig50.shutdownHooks = shutdownHookList54;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig50.getproperties();
        atmosphereConfig33.properties = strMap57;
        atmosphereConfig32.properties = strMap57;
        atmosphereConfig0.setproperties(strMap57);
        atmosphereConfig0.supportSession = false;
        java.lang.String str64 = atmosphereConfig0.getInitParameter("hi!");
        java.lang.String str67 = atmosphereConfig0.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.lang.String str73 = atmosphereConfig0.getInitParameter("hi!", "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(startupHookList68);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
    }

    @Test
    public void test04770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04770");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean13 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig15.getAtmosphereHandlerConfig();
        atmosphereConfig14.atmosphereHandlerConfig = atmosphereHandlerConfigList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig22.shutdownHooks = shutdownHookList26;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.getproperties();
        atmosphereConfig14.setproperties(strMap29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig14.startupHook(startupHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig32.properties;
        atmosphereConfig0.properties = strMap33;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        boolean boolean39 = atmosphereConfig36.throwExceptionOnCloned;
        boolean boolean40 = atmosphereConfig36.useServletContextParameters;
        atmosphereConfig36.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig36.setuseServletContextParameters(true);
        boolean boolean45 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig0.populate(atmosphereConfig36);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig46.startupHook(startupHook47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap49 = atmosphereConfig46.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
    }

    @Test
    public void test04771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04771");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        boolean boolean11 = atmosphereConfig0.getuseServletContextParameters();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.properties;
        boolean boolean16 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.getframework();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(atmosphereFramework19);
    }

    @Test
    public void test04772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04772");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig9.setproperties(strMap24);
        boolean boolean28 = atmosphereConfig9.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig0.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig0.setframework(atmosphereFramework30);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
    }

    @Test
    public void test04773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04773");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean11 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        atmosphereConfig12.supportSession = false;
        boolean boolean16 = atmosphereConfig12.getuseServletContextParameters();
        boolean boolean17 = atmosphereConfig12.getuseServletContextParameters();
        java.lang.String str20 = atmosphereConfig12.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig12.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig12.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.populate(atmosphereConfig12);
        java.lang.String str25 = atmosphereConfig12.getInitParameter("hi!");
        atmosphereConfig12.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        atmosphereConfig28.supportSession = false;
        atmosphereConfig28.throwExceptionOnCloned = true;
        boolean boolean34 = atmosphereConfig28.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.properties();
        atmosphereConfig12.setproperties(strMap35);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig12.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
    }

    @Test
    public void test04774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04774");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        boolean boolean42 = atmosphereConfig18.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig44.getAtmosphereHandlerConfig();
        atmosphereConfig43.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        boolean boolean53 = atmosphereConfig51.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig51.shutdownHooks = shutdownHookList55;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig51.getproperties();
        atmosphereConfig43.setproperties(strMap58);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig43.startupHook(startupHook60);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig63.destroy();
        boolean boolean65 = atmosphereConfig63.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig63.shutdownHook(shutdownHook66);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig63.getAtmosphereHandlerConfig();
        atmosphereConfig62.atmosphereHandlerConfig = atmosphereHandlerConfigList68;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig70.destroy();
        boolean boolean72 = atmosphereConfig70.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray73 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList74 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList74, shutdownHookArray73);
        atmosphereConfig70.shutdownHooks = shutdownHookList74;
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig70.getproperties();
        atmosphereConfig62.setproperties(strMap77);
        atmosphereConfig61.setproperties(strMap77);
        int int82 = atmosphereConfig61.getInitParameter("", 100);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig61.shutdownHooks;
        java.lang.String str86 = atmosphereConfig61.getInitParameter("hi!", "");
        org.slf4j.Logger logger87 = atmosphereConfig61.getlogger();
        atmosphereConfig61.throwExceptionOnCloned = true;
        atmosphereConfig61.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList92 = atmosphereConfig61.getshutdownHooks();
        atmosphereConfig18.shutdownHooks = shutdownHookList92;
        atmosphereConfig18.useServletContextParameters = true;
        boolean boolean96 = atmosphereConfig18.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook97 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig98 = atmosphereConfig18.startupHook(startupHook97);
        boolean boolean99 = atmosphereConfig98.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNotNull(logger87);
        org.junit.Assert.assertNotNull(shutdownHookList92);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test04775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04775");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig4.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig4.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig4.getframework();
        atmosphereConfig4.setuseServletContextParameters(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(atmosphereFramework10);
    }

    @Test
    public void test04776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04776");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.startupHook(startupHook26);
        org.slf4j.Logger logger28 = atmosphereConfig0.getlogger();
        boolean boolean29 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig0.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
    }

    @Test
    public void test04777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04777");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig16.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.getproperties();
        atmosphereConfig15.properties = strMap31;
        atmosphereConfig15.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig15.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig15.startupHook(startupHook36);
        org.slf4j.Logger logger38 = atmosphereConfig15.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43, shutdownHookArray42);
        atmosphereConfig39.shutdownHooks = shutdownHookList43;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig39.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig39.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig39.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig39.atmosphereHandlerConfig;
        boolean boolean50 = atmosphereConfig39.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.destroy();
        atmosphereConfig51.supportSession = false;
        boolean boolean55 = atmosphereConfig51.getuseServletContextParameters();
        boolean boolean56 = atmosphereConfig51.getuseServletContextParameters();
        java.lang.String str59 = atmosphereConfig51.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = atmosphereConfig51.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig51.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig39.populate(atmosphereConfig51);
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig51.properties;
        atmosphereConfig15.setproperties(strMap63);
        boolean boolean65 = atmosphereConfig15.supportSession;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(logger38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList60);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test04778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04778");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig6.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig6.getproperties();
        atmosphereConfig6.sessionTimeoutRemovalAllowed = false;
        boolean boolean11 = atmosphereConfig6.throwExceptionOnCloned;
        boolean boolean12 = atmosphereConfig6.getuseServletContextParameters();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test04779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04779");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.framework = atmosphereFramework9;
        atmosphereConfig8.destroy();
        boolean boolean12 = atmosphereConfig8.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig8.framework = atmosphereFramework13;
        boolean boolean15 = atmosphereConfig8.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig8.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
    }

    @Test
    public void test04780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04780");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        org.slf4j.Logger logger29 = atmosphereConfig21.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig21.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.populate(atmosphereConfig21);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = null;
        atmosphereConfig0.startUpHook = startupHookList35;
        boolean boolean37 = atmosphereConfig0.throwExceptionOnCloned;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider38 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test04781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04781");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig0.startUpHook;
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig0.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig0.properties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test04782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04782");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.getproperties();
        atmosphereConfig0.setuseServletContextParameters(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.getframework();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNull(atmosphereFramework12);
    }

    @Test
    public void test04783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04783");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        boolean boolean10 = atmosphereConfig4.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test04784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04784");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        atmosphereConfig8.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig8.framework;
        boolean boolean26 = atmosphereConfig8.isSupportSession();
        atmosphereConfig8.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig30.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig29.setproperties(strMap44);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig29.startupHook(startupHook46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig48.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray59 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList60, shutdownHookArray59);
        atmosphereConfig56.shutdownHooks = shutdownHookList60;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig56.getproperties();
        atmosphereConfig48.setproperties(strMap63);
        atmosphereConfig47.setproperties(strMap63);
        int int68 = atmosphereConfig47.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig47.startupHook(startupHook69);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig71.destroy();
        boolean boolean73 = atmosphereConfig71.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig71.shutdownHook(shutdownHook74);
        atmosphereConfig71.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig78.destroy();
        boolean boolean80 = atmosphereConfig78.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook81 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig78.shutdownHook(shutdownHook81);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList83 = atmosphereConfig78.getAtmosphereHandlerConfig();
        atmosphereConfig71.atmosphereHandlerConfig = atmosphereHandlerConfigList83;
        atmosphereConfig47.atmosphereHandlerConfig = atmosphereHandlerConfigList83;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList86 = atmosphereConfig47.startUpHook;
        atmosphereConfig8.setstartUpHook(startupHookList86);
        atmosphereConfig4.startUpHook = startupHookList86;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList89 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList90 = atmosphereConfig4.getstartUpHook();
        boolean boolean93 = atmosphereConfig4.getInitParameter("hi!", true);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext94 = atmosphereConfig4.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList83);
        org.junit.Assert.assertNotNull(startupHookList86);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList89);
        org.junit.Assert.assertNotNull(startupHookList90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test04785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04785");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.destroy();
        boolean boolean7 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig5.properties();
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig14.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig14.startUpHook;
        atmosphereConfig5.setstartUpHook(startupHookList18);
        atmosphereConfig0.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig22.shutdownHooks;
        atmosphereConfig22.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
    }

    @Test
    public void test04786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04786");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.startUpHook = startupHookList4;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.setframework(atmosphereFramework8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster11 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(startupHookList10);
    }

    @Test
    public void test04787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04787");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties();
        atmosphereConfig0.setproperties(strMap16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig0.properties();
        atmosphereConfig0.throwExceptionOnCloned = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig0.framework();
        atmosphereConfig0.destroy();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(atmosphereFramework23);
    }

    @Test
    public void test04788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04788");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        boolean boolean34 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        boolean boolean39 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig36.startUpHook;
        atmosphereConfig33.setstartUpHook(startupHookList40);
        atmosphereConfig0.startUpHook = startupHookList40;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
    }

    @Test
    public void test04789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04789");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str37 = atmosphereConfig4.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig4.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
    }

    @Test
    public void test04790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04790");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        atmosphereConfig14.setuseServletContextParameters(false);
        atmosphereConfig14.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig14.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24);
        atmosphereConfig0.shutdownHooks = shutdownHookList24;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig0.startUpHook;
        int int31 = atmosphereConfig0.getInitParameter("", (-1));
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig0.properties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strMap32);
    }

    @Test
    public void test04791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04791");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean11 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        atmosphereConfig12.supportSession = false;
        boolean boolean16 = atmosphereConfig12.getuseServletContextParameters();
        boolean boolean17 = atmosphereConfig12.getuseServletContextParameters();
        java.lang.String str20 = atmosphereConfig12.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig12.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig12.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.populate(atmosphereConfig12);
        java.lang.String str25 = atmosphereConfig12.getInitParameter("hi!");
        atmosphereConfig12.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        atmosphereConfig28.supportSession = false;
        atmosphereConfig28.throwExceptionOnCloned = true;
        boolean boolean34 = atmosphereConfig28.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.properties();
        atmosphereConfig12.setproperties(strMap35);
        atmosphereConfig12.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test04792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04792");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        boolean boolean10 = atmosphereConfig4.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig4.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = null;
        atmosphereConfig12.setstartUpHook(startupHookList17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList24);
        boolean boolean26 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig12.startupHook(startupHook27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.startupHook(startupHook34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig40.startupHook(startupHook41);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.getstartUpHook();
        atmosphereConfig33.setstartUpHook(startupHookList43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.destroy();
        atmosphereConfig45.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        atmosphereConfig49.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig45.populate(atmosphereConfig49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.destroy();
        boolean boolean57 = atmosphereConfig55.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig55.shutdownHook(shutdownHook58);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig55.getAtmosphereHandlerConfig();
        atmosphereConfig54.atmosphereHandlerConfig = atmosphereHandlerConfigList60;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63, shutdownHookArray62);
        atmosphereConfig54.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63);
        atmosphereConfig45.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = null;
        atmosphereConfig45.setframework(atmosphereFramework67);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig45.properties;
        atmosphereConfig33.setproperties(strMap69);
        atmosphereConfig28.properties = strMap69;
        atmosphereConfig4.properties = strMap69;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        boolean boolean75 = atmosphereConfig73.supportSession;
        boolean boolean76 = atmosphereConfig73.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList77 = atmosphereConfig73.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList78 = atmosphereConfig73.getAtmosphereHandlerConfig();
        boolean boolean79 = atmosphereConfig73.isThrowExceptionOnCloned();
        boolean boolean80 = atmosphereConfig73.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework82 = null;
        atmosphereConfig81.setframework(atmosphereFramework82);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray84 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList85 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList85, startupHookArray84);
        atmosphereConfig81.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList85);
        atmosphereConfig81.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework90 = atmosphereConfig81.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList91 = atmosphereConfig81.getshutdownHooks();
        atmosphereConfig73.shutdownHooks = shutdownHookList91;
        atmosphereConfig4.setshutdownHooks(shutdownHookList91);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext94 = atmosphereConfig4.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertNotNull(shutdownHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(startupHookList77);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(startupHookArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(atmosphereFramework90);
        org.junit.Assert.assertNotNull(shutdownHookList91);
    }

    @Test
    public void test04793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04793");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList3 = atmosphereConfig2.getAtmosphereHandlerConfig();
        boolean boolean4 = atmosphereConfig2.isThrowExceptionOnCloned();
        atmosphereConfig2.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig2.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig2.getframework();
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNull(atmosphereFramework7);
    }

    @Test
    public void test04794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04794");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig18.setframework(atmosphereFramework38);
        int int42 = atmosphereConfig18.getInitParameter("hi!", (int) (short) 100);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        atmosphereConfig43.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig43.atmosphereHandlerConfig;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig18.getstartUpHook();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(startupHookList49);
    }

    @Test
    public void test04795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04795");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.startUpHook;
        boolean boolean12 = atmosphereConfig0.getInitParameter("hi!", false);
        java.lang.String str14 = atmosphereConfig0.getInitParameter("");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test04796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04796");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.getproperties();
        atmosphereConfig22.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig22.startupHook(startupHook39);
        boolean boolean41 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig40.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig43.shutdownHooks;
        atmosphereConfig40.shutdownHooks = shutdownHookList49;
        atmosphereConfig0.shutdownHooks = shutdownHookList49;
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
    }

    @Test
    public void test04797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04797");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig16.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.getproperties();
        atmosphereConfig15.properties = strMap31;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig15.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig15.shutdownHook(shutdownHook34);
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
    }

    @Test
    public void test04798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04798");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        int int9 = atmosphereConfig4.getInitParameter("", (int) (short) 10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig11.framework = atmosphereFramework18;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig11.shutdownHooks;
        atmosphereConfig4.setshutdownHooks(shutdownHookList20);
        atmosphereConfig4.initComplete();
        boolean boolean25 = atmosphereConfig4.getInitParameter("", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig4.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig4.startupHook(startupHook27);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig28.shutdownHook(shutdownHook29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig30.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig32 = atmosphereConfig30.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test04799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04799");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = null;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList12);
        boolean boolean14 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.startupHook(startupHook15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig22.properties = strMap30;
        boolean boolean32 = atmosphereConfig22.useServletContextParameters;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig22.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig22.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig22.getproperties();
        atmosphereConfig0.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig37.getAtmosphereHandlerConfig();
        boolean boolean43 = atmosphereConfig37.supportSession;
        atmosphereConfig37.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig37.shutdownHook(shutdownHook45);
        atmosphereConfig37.setSessionTimeoutRemovalAllowed(false);
        int int51 = atmosphereConfig37.getInitParameter("", (int) (byte) 10);
        atmosphereConfig37.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig0.populate(atmosphereConfig37);
        boolean boolean55 = atmosphereConfig54.supportSession;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test04800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04800");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.framework = atmosphereFramework9;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig15.properties;
        org.slf4j.Logger logger19 = atmosphereConfig15.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        atmosphereConfig20.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig27.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        atmosphereConfig20.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig20.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig20.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig20.framework = atmosphereFramework38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig15.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig40.shutdownHooks;
        atmosphereConfig8.setshutdownHooks(shutdownHookList41);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig8.setThrowExceptionOnCloned(false);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext46 = atmosphereConfig8.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
    }

    @Test
    public void test04801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04801");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.lang.String str4 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        boolean boolean8 = atmosphereConfig6.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        atmosphereConfig6.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig13.getAtmosphereHandlerConfig();
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        atmosphereConfig6.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig6.atmosphereHandlerConfig;
        boolean boolean23 = atmosphereConfig6.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig24.getAtmosphereHandlerConfig();
        boolean boolean30 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig24.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig6.shutdownHooks = shutdownHookList32;
        atmosphereConfig6.setuseServletContextParameters(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig6.properties();
        atmosphereConfig0.setproperties(strMap38);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap38);
    }

    @Test
    public void test04802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04802");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig6.getframework();
        atmosphereConfig6.throwExceptionOnCloned = false;
        boolean boolean10 = atmosphereConfig6.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig6.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig12.getproperties();
        atmosphereConfig12.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray22 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList23, startupHookArray22);
        atmosphereConfig12.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList23);
        boolean boolean26 = atmosphereConfig12.supportSession;
        boolean boolean27 = atmosphereConfig12.getuseServletContextParameters();
        java.lang.String str30 = atmosphereConfig12.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig12.startupHook(startupHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        atmosphereConfig33.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig33.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig33.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        atmosphereConfig41.framework = atmosphereFramework42;
        atmosphereConfig41.destroy();
        boolean boolean45 = atmosphereConfig41.getuseServletContextParameters();
        boolean boolean46 = atmosphereConfig41.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig12.populate(atmosphereConfig41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig6.populate(atmosphereConfig41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        atmosphereConfig49.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig56.getAtmosphereHandlerConfig();
        atmosphereConfig49.atmosphereHandlerConfig = atmosphereHandlerConfigList61;
        atmosphereConfig49.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig49.atmosphereHandlerConfig;
        atmosphereConfig49.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig49.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = atmosphereConfig49.framework();
        boolean boolean70 = atmosphereConfig49.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig49.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig72.destroy();
        boolean boolean74 = atmosphereConfig72.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig72.shutdownHook(shutdownHook75);
        atmosphereConfig72.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig79.destroy();
        boolean boolean81 = atmosphereConfig79.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig79.shutdownHook(shutdownHook82);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList84 = atmosphereConfig79.getAtmosphereHandlerConfig();
        atmosphereConfig72.atmosphereHandlerConfig = atmosphereHandlerConfigList84;
        atmosphereConfig72.useServletContextParameters = true;
        atmosphereConfig72.setSupportSession(true);
        boolean boolean90 = atmosphereConfig72.throwExceptionOnCloned;
        boolean boolean91 = atmosphereConfig72.throwExceptionOnCloned;
        boolean boolean92 = atmosphereConfig72.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList93 = atmosphereConfig72.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList94 = atmosphereConfig72.getshutdownHooks();
        atmosphereConfig49.setshutdownHooks(shutdownHookList94);
        atmosphereConfig41.shutdownHooks = shutdownHookList94;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster97 = atmosphereConfig41.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(startupHookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertNull(atmosphereFramework69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList84);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(startupHookList93);
        org.junit.Assert.assertNotNull(shutdownHookList94);
    }

    @Test
    public void test04803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04803");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig0.framework = atmosphereFramework19;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
    }

    @Test
    public void test04804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04804");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.setframework(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = null;
        atmosphereConfig14.setstartUpHook(startupHookList19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig13.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        atmosphereConfig22.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig22.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig22.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig22.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig14.populate(atmosphereConfig22);
        atmosphereConfig22.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
    }

    @Test
    public void test04805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04805");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig0.framework();
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        atmosphereConfig26.supportSession = false;
        boolean boolean30 = atmosphereConfig26.getuseServletContextParameters();
        atmosphereConfig26.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        atmosphereConfig33.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig33.startUpHook;
        atmosphereConfig26.startUpHook = startupHookList37;
        atmosphereConfig0.startUpHook = startupHookList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig41.getAtmosphereHandlerConfig();
        atmosphereConfig40.atmosphereHandlerConfig = atmosphereHandlerConfigList46;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig48.destroy();
        boolean boolean50 = atmosphereConfig48.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray51 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList52, shutdownHookArray51);
        atmosphereConfig48.shutdownHooks = shutdownHookList52;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig48.getproperties();
        atmosphereConfig40.setproperties(strMap55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray60 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList61, shutdownHookArray60);
        atmosphereConfig57.shutdownHooks = shutdownHookList61;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig57.getproperties();
        atmosphereConfig40.properties = strMap64;
        atmosphereConfig40.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig40.setSupportSession(false);
        boolean boolean70 = atmosphereConfig40.isThrowExceptionOnCloned();
        boolean boolean71 = atmosphereConfig40.isSupportSession();
        boolean boolean72 = atmosphereConfig40.throwExceptionOnCloned;
        atmosphereConfig40.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig0.populate(atmosphereConfig40);
        int int78 = atmosphereConfig40.getInitParameter("hi!", (int) (byte) 10);
        boolean boolean79 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test04806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04806");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.framework = atmosphereFramework10;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = atmosphereConfig13.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
    }

    @Test
    public void test04807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04807");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.startupHook(startupHook26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.shutdownHook(shutdownHook31);
        java.lang.Class<?> wildcardClass33 = atmosphereConfig0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test04808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04808");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        boolean boolean8 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig10.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.startupHook(startupHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig16.properties;
        java.lang.String str21 = atmosphereConfig16.getInitParameter("hi!");
        atmosphereConfig16.destroy();
        int int25 = atmosphereConfig16.getInitParameter("hi!", (int) (short) 1);
        boolean boolean28 = atmosphereConfig16.getInitParameter("hi!", false);
        atmosphereConfig16.throwExceptionOnCloned = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig16.getstartUpHook();
        atmosphereConfig10.setstartUpHook(startupHookList31);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig10.framework;
        java.lang.String str36 = atmosphereConfig10.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig10.framework;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework37);
    }

    @Test
    public void test04809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04809");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        boolean boolean25 = atmosphereConfig24.supportSession;
        atmosphereConfig24.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.startupHook(startupHook33);
        atmosphereConfig34.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig34.framework();
        atmosphereConfig34.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNull(atmosphereFramework37);
    }

    @Test
    public void test04810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04810");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.getproperties();
        boolean boolean12 = atmosphereConfig0.useServletContextParameters;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster13 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test04811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04811");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        boolean boolean12 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        boolean boolean13 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        boolean boolean14 = atmosphereConfig4.supportSession;
        boolean boolean15 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test04812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04812");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
    }

    @Test
    public void test04813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04813");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig15.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        atmosphereConfig17.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig24.getAtmosphereHandlerConfig();
        atmosphereConfig17.atmosphereHandlerConfig = atmosphereHandlerConfigList29;
        boolean boolean31 = atmosphereConfig17.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig17.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig33.atmosphereHandlerConfig = atmosphereHandlerConfigList39;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig41.shutdownHooks = shutdownHookList45;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig41.getproperties();
        atmosphereConfig33.setproperties(strMap48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig33.startupHook(startupHook50);
        boolean boolean52 = atmosphereConfig51.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig51.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig54.shutdownHook(shutdownHook55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray60 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList61, shutdownHookArray60);
        atmosphereConfig57.shutdownHooks = shutdownHookList61;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig57.getproperties();
        atmosphereConfig56.properties = strMap64;
        atmosphereConfig51.setproperties(strMap64);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = atmosphereConfig51.getshutdownHooks();
        atmosphereConfig17.setshutdownHooks(shutdownHookList67);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig15.populate(atmosphereConfig17);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig70 = atmosphereConfig17.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(shutdownHookList67);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
    }

    @Test
    public void test04814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04814");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        org.slf4j.Logger logger8 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        atmosphereConfig9.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        atmosphereConfig9.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig9.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig9.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig9.framework = atmosphereFramework27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig4.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        boolean boolean33 = atmosphereConfig31.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig31.getAtmosphereHandlerConfig();
        atmosphereConfig30.atmosphereHandlerConfig = atmosphereHandlerConfigList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig30.setproperties(strMap45);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig30.startupHook(startupHook47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig50.getAtmosphereHandlerConfig();
        atmosphereConfig49.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray60 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList61, shutdownHookArray60);
        atmosphereConfig57.shutdownHooks = shutdownHookList61;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig57.getproperties();
        atmosphereConfig49.setproperties(strMap64);
        atmosphereConfig48.setproperties(strMap64);
        int int69 = atmosphereConfig48.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig48.startupHook(startupHook70);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig72.destroy();
        boolean boolean74 = atmosphereConfig72.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig72.shutdownHook(shutdownHook75);
        atmosphereConfig72.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig79.destroy();
        boolean boolean81 = atmosphereConfig79.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig79.shutdownHook(shutdownHook82);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList84 = atmosphereConfig79.getAtmosphereHandlerConfig();
        atmosphereConfig72.atmosphereHandlerConfig = atmosphereHandlerConfigList84;
        atmosphereConfig48.atmosphereHandlerConfig = atmosphereHandlerConfigList84;
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList84;
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = atmosphereConfig29.getproperties();
        boolean boolean89 = atmosphereConfig29.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = atmosphereConfig29.getproperties();
        java.lang.Class<?> wildcardClass91 = strMap90.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList84);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test04815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04815");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        int int40 = atmosphereConfig18.getInitParameter("", 0);
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig18.atmosphereHandlerConfig;
        atmosphereConfig18.initComplete();
        boolean boolean45 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test04816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04816");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        boolean boolean11 = atmosphereConfig0.getuseServletContextParameters();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.properties;
        boolean boolean16 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean17 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.destroy();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test04817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04817");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray13 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList14, shutdownHookArray13);
        atmosphereConfig10.shutdownHooks = shutdownHookList14;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig10.getproperties();
        atmosphereConfig9.properties = strMap17;
        atmosphereConfig0.properties = strMap17;
        boolean boolean20 = atmosphereConfig0.supportSession;
        atmosphereConfig0.useServletContextParameters = true;
        atmosphereConfig0.throwExceptionOnCloned = true;
        atmosphereConfig0.setuseServletContextParameters(false);
        java.lang.String str29 = atmosphereConfig0.getInitParameter("", "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test04818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04818");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        boolean boolean25 = atmosphereConfig11.throwExceptionOnCloned;
        java.lang.String str28 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig29.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig29.atmosphereHandlerConfig;
        boolean boolean46 = atmosphereConfig29.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        atmosphereConfig29.shutdownHooks = shutdownHookList55;
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig11);
        atmosphereConfig60.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig60.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = atmosphereConfig60.framework;
        boolean boolean65 = atmosphereConfig60.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig60.startupHook(startupHook66);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig60.properties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNull(atmosphereFramework64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(strMap68);
    }

    @Test
    public void test04819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04819");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.setframework(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList12, startupHookArray11);
        atmosphereConfig8.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList12);
        atmosphereConfig8.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig8.framework();
        java.lang.String str20 = atmosphereConfig8.getInitParameter("", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap21);
        boolean boolean23 = atmosphereConfig0.getuseServletContextParameters();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(startupHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test04820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04820");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig2.destroy();
        boolean boolean4 = atmosphereConfig2.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig2.shutdownHook(shutdownHook5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig6.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig8.getframework();
        org.slf4j.Logger logger10 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        boolean boolean14 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig11.startUpHook;
        atmosphereConfig8.startUpHook = startupHookList15;
        atmosphereConfig0.setstartUpHook(startupHookList15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig0.startupHook(startupHook18);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
    }

    @Test
    public void test04821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04821");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        boolean boolean5 = atmosphereConfig3.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig3.shutdownHooks = shutdownHookList7;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig3.getproperties();
        atmosphereConfig2.properties = strMap10;
        boolean boolean12 = atmosphereConfig2.useServletContextParameters;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig2.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig2.shutdownHooks;
        boolean boolean15 = atmosphereConfig2.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test04822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04822");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = null;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList12);
        boolean boolean14 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.startupHook(startupHook15);
        boolean boolean19 = atmosphereConfig0.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig22.properties = strMap30;
        boolean boolean32 = atmosphereConfig22.useServletContextParameters;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig22.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig22.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig22.getproperties();
        atmosphereConfig0.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig37.getAtmosphereHandlerConfig();
        boolean boolean43 = atmosphereConfig37.supportSession;
        atmosphereConfig37.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig37.shutdownHook(shutdownHook45);
        atmosphereConfig37.setSessionTimeoutRemovalAllowed(false);
        int int51 = atmosphereConfig37.getInitParameter("", (int) (byte) 10);
        atmosphereConfig37.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig0.populate(atmosphereConfig37);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig0.shutdownHooks;
        boolean boolean56 = atmosphereConfig0.useServletContextParameters;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = atmosphereConfig0.getframework();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(atmosphereFramework58);
    }

    @Test
    public void test04823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04823");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = null;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList12);
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(startupHookList16);
    }

    @Test
    public void test04824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04824");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        boolean boolean5 = atmosphereConfig3.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        atmosphereConfig6.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig6.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        atmosphereConfig3.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        atmosphereConfig0.startUpHook = startupHookList11;
        int int18 = atmosphereConfig0.getInitParameter("hi!", (int) (byte) 10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig22.properties = strMap30;
        atmosphereConfig22.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig22.properties;
        atmosphereConfig0.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(startupHookList37);
    }

    @Test
    public void test04825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04825");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
    }

    @Test
    public void test04826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04826");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8, shutdownHookArray7);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig16.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig16.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.populate(atmosphereConfig34);
        boolean boolean39 = atmosphereConfig34.getInitParameter("", true);
        atmosphereConfig34.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig34.startupHook(startupHook42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig34.setframework(atmosphereFramework44);
        boolean boolean48 = atmosphereConfig34.getInitParameter("hi!", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig34.shutdownHooks;
        boolean boolean50 = atmosphereConfig34.isSupportSession();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test04827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04827");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        boolean boolean14 = atmosphereConfig0.supportSession;
        boolean boolean15 = atmosphereConfig0.getuseServletContextParameters();
        java.lang.String str18 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig0.startupHook(startupHook19);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.supportSession = false;
        int int27 = atmosphereConfig0.getInitParameter("", 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    }

    @Test
    public void test04828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04828");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        atmosphereConfig14.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig14.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        atmosphereConfig14.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig14.atmosphereHandlerConfig;
        boolean boolean31 = atmosphereConfig14.getuseServletContextParameters();
        atmosphereConfig14.setThrowExceptionOnCloned(true);
        atmosphereConfig14.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig36.framework();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNull(atmosphereFramework37);
    }

    @Test
    public void test04829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04829");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        boolean boolean8 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.shutdownHook(shutdownHook9);
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig4.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig4.setframework(atmosphereFramework15);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext17 = atmosphereConfig4.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
    }

    @Test
    public void test04830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04830");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig31.getproperties();
        atmosphereConfig0.properties = strMap32;
        atmosphereConfig0.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.startupHook(startupHook36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        atmosphereConfig38.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig38.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig38.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.destroy();
        boolean boolean47 = atmosphereConfig45.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList49, shutdownHookArray48);
        atmosphereConfig45.shutdownHooks = shutdownHookList49;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig45.getproperties();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray55 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList56, startupHookArray55);
        atmosphereConfig45.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList56);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig45.startUpHook;
        atmosphereConfig44.setstartUpHook(startupHookList59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig0.populate(atmosphereConfig44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig44.populate(atmosphereConfig62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNull(atmosphereFramework42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(startupHookArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
    }

    @Test
    public void test04831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04831");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig12.getproperties();
        atmosphereConfig11.setproperties(strMap19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        atmosphereConfig21.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig21.startupHook(startupHook35);
        atmosphereConfig21.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        atmosphereConfig21.framework = atmosphereFramework39;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig21.startUpHook;
        atmosphereConfig11.startUpHook = startupHookList41;
        atmosphereConfig11.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.destroy();
        atmosphereConfig45.supportSession = false;
        boolean boolean49 = atmosphereConfig45.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = atmosphereConfig45.framework();
        atmosphereConfig45.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig45.shutdownHooks;
        atmosphereConfig45.setuseServletContextParameters(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig45.getshutdownHooks();
        atmosphereConfig11.setshutdownHooks(shutdownHookList56);
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(atmosphereFramework50);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(shutdownHookList56);
    }

    @Test
    public void test04832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04832");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.lang.String str8 = atmosphereConfig0.getInitParameter("hi!");
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(shutdownHookList11);
    }

    @Test
    public void test04833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04833");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray13 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList14, shutdownHookArray13);
        atmosphereConfig10.shutdownHooks = shutdownHookList14;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig10.getproperties();
        atmosphereConfig9.properties = strMap17;
        atmosphereConfig0.properties = strMap17;
        boolean boolean20 = atmosphereConfig0.supportSession;
        atmosphereConfig0.useServletContextParameters = true;
        atmosphereConfig0.throwExceptionOnCloned = true;
        atmosphereConfig0.setuseServletContextParameters(false);
        boolean boolean27 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test04834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04834");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig7.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        boolean boolean19 = atmosphereConfig18.supportSession;
        boolean boolean20 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig29.shutdownHooks = shutdownHookList33;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig29.getproperties();
        atmosphereConfig21.setproperties(strMap36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig21.properties = strMap45;
        atmosphereConfig18.setproperties(strMap45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        java.lang.String str52 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean53 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        atmosphereConfig54.setSupportSession(true);
        boolean boolean60 = atmosphereConfig54.getInitParameter("hi!", true);
        boolean boolean61 = atmosphereConfig54.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        atmosphereConfig62.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig62.getAtmosphereHandlerConfig();
        atmosphereConfig54.atmosphereHandlerConfig = atmosphereHandlerConfigList66;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig54.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig0.populate(atmosphereConfig54);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = null;
        atmosphereConfig0.framework = atmosphereFramework70;
        boolean boolean72 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean73 = atmosphereConfig0.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test04835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04835");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig14.shutdownHooks = shutdownHookList18;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig14.getproperties();
        atmosphereConfig6.setproperties(strMap21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig6.startupHook(startupHook23);
        org.slf4j.Logger logger25 = atmosphereConfig24.getlogger();
        atmosphereConfig24.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.populate(atmosphereConfig24);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext29 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(logger25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
    }

    @Test
    public void test04836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04836");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig18.shutdownHooks;
        java.lang.String str43 = atmosphereConfig18.getInitParameter("hi!", "");
        org.slf4j.Logger logger44 = atmosphereConfig18.getlogger();
        boolean boolean45 = atmosphereConfig18.throwExceptionOnCloned;
        atmosphereConfig18.initComplete();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(logger44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test04837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04837");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig7.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig27.getAtmosphereHandlerConfig();
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray37 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList38, shutdownHookArray37);
        atmosphereConfig34.shutdownHooks = shutdownHookList38;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig34.getproperties();
        atmosphereConfig26.setproperties(strMap41);
        atmosphereConfig25.setproperties(strMap41);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig4.setshutdownHooks(shutdownHookList44);
        int int48 = atmosphereConfig4.getInitParameter("hi!", (int) '4');
        int int51 = atmosphereConfig4.getInitParameter("", (int) (byte) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig4.properties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strMap52);
    }

    @Test
    public void test04838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04838");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
    }

    @Test
    public void test04839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04839");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test04840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04840");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.getproperties();
        atmosphereConfig22.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig22.startupHook(startupHook39);
        boolean boolean41 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig40.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig43.shutdownHooks;
        atmosphereConfig40.shutdownHooks = shutdownHookList49;
        atmosphereConfig0.shutdownHooks = shutdownHookList49;
        boolean boolean52 = atmosphereConfig0.useServletContextParameters;
        boolean boolean53 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig0.properties;
        boolean boolean57 = atmosphereConfig0.getInitParameter("", true);
        java.lang.Class<?> wildcardClass58 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test04841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04841");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList9;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        atmosphereConfig12.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig19.getAtmosphereHandlerConfig();
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig12.startupHook(startupHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        boolean boolean43 = atmosphereConfig29.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig29.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig46.getAtmosphereHandlerConfig();
        atmosphereConfig45.atmosphereHandlerConfig = atmosphereHandlerConfigList51;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.destroy();
        boolean boolean55 = atmosphereConfig53.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray56 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList57, shutdownHookArray56);
        atmosphereConfig53.shutdownHooks = shutdownHookList57;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig53.getproperties();
        atmosphereConfig45.setproperties(strMap60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig45.startupHook(startupHook62);
        boolean boolean64 = atmosphereConfig63.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig63.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig66.shutdownHook(shutdownHook67);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig69.destroy();
        boolean boolean71 = atmosphereConfig69.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray72 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList73, shutdownHookArray72);
        atmosphereConfig69.shutdownHooks = shutdownHookList73;
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig69.getproperties();
        atmosphereConfig68.properties = strMap76;
        atmosphereConfig63.setproperties(strMap76);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = atmosphereConfig63.getshutdownHooks();
        atmosphereConfig29.setshutdownHooks(shutdownHookList79);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig27.populate(atmosphereConfig29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList82 = null;
        atmosphereConfig81.setshutdownHooks(shutdownHookList82);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList84 = atmosphereConfig81.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList84;
        atmosphereConfig0.setuseServletContextParameters(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(shutdownHookList79);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList84);
    }

    @Test
    public void test04842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04842");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig6.getframework();
        org.slf4j.Logger logger8 = atmosphereConfig6.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        boolean boolean12 = atmosphereConfig9.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig9.startUpHook;
        atmosphereConfig6.startUpHook = startupHookList13;
        org.slf4j.Logger logger15 = atmosphereConfig6.getlogger();
        atmosphereConfig6.setSessionTimeoutRemovalAllowed(false);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory18 = atmosphereConfig6.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(logger15);
    }

    @Test
    public void test04843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04843");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig0.setframework(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig0.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        atmosphereConfig26.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        boolean boolean40 = atmosphereConfig26.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig0.populate(atmosphereConfig26);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster42 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
    }

    @Test
    public void test04844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04844");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig15.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.startUpHook;
        boolean boolean19 = atmosphereConfig15.isSessionTimeoutRemovalAllowed();
        int int22 = atmosphereConfig15.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig15.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 35 + "'", int22 == 35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
    }

    @Test
    public void test04845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04845");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        boolean boolean8 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.shutdownHook(shutdownHook9);
        int int13 = atmosphereConfig10.getInitParameter("hi!", 0);
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test04846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04846");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.lang.String str30 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        boolean boolean33 = atmosphereConfig31.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig35.startupHook(startupHook36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig35.properties;
        org.slf4j.Logger logger39 = atmosphereConfig35.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        atmosphereConfig40.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig40.atmosphereHandlerConfig = atmosphereHandlerConfigList52;
        atmosphereConfig40.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig40.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig40.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = null;
        atmosphereConfig40.framework = atmosphereFramework58;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig35.populate(atmosphereConfig40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig61.shutdownHook(shutdownHook64);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig61.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = atmosphereConfig61.shutdownHooks;
        atmosphereConfig35.setshutdownHooks(shutdownHookList67);
        atmosphereConfig0.shutdownHooks = shutdownHookList67;
        boolean boolean70 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook71 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig0.startupHook(startupHook71);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory73 = atmosphereConfig72.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(logger39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertNotNull(shutdownHookList67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
    }

    @Test
    public void test04847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04847");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig59.setframework(atmosphereFramework60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63, startupHookArray62);
        atmosphereConfig59.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63);
        atmosphereConfig59.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig59.framework();
        java.lang.String str71 = atmosphereConfig59.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig18.populate(atmosphereConfig59);
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig72.properties;
        boolean boolean74 = atmosphereConfig72.isSupportSession();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap75 = atmosphereConfig72.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(startupHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test04848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04848");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        org.slf4j.Logger logger7 = atmosphereConfig0.getlogger();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        java.lang.Class<?> wildcardClass10 = atmosphereConfig0.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test04849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04849");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.supportSession = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
    }

    @Test
    public void test04850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04850");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        org.slf4j.Logger logger7 = atmosphereConfig0.getlogger();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test04851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04851");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig18.shutdownHooks;
        java.lang.String str43 = atmosphereConfig18.getInitParameter("hi!", "");
        boolean boolean44 = atmosphereConfig18.getuseServletContextParameters();
        boolean boolean45 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test04852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04852");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig0.framework();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.destroy();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory26 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(atmosphereFramework22);
    }

    @Test
    public void test04853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04853");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        boolean boolean26 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        atmosphereConfig29.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList34, startupHookArray33);
        atmosphereConfig29.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList34);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        atmosphereConfig38.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        atmosphereConfig42.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig38.populate(atmosphereConfig42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig51.startupHook(startupHook52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig58.startupHook(startupHook59);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig60.getstartUpHook();
        atmosphereConfig51.setstartUpHook(startupHookList61);
        atmosphereConfig46.startUpHook = startupHookList61;
        boolean boolean64 = atmosphereConfig46.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig0.populate(atmosphereConfig46);
        org.slf4j.Logger logger66 = atmosphereConfig46.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig67.destroy();
        atmosphereConfig67.supportSession = false;
        boolean boolean71 = atmosphereConfig67.getuseServletContextParameters();
        boolean boolean72 = atmosphereConfig67.getuseServletContextParameters();
        java.lang.String str75 = atmosphereConfig67.getInitParameter("hi!", "hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig67.properties;
        atmosphereConfig46.properties = strMap76;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = atmosphereConfig46.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory79 = atmosphereConfig46.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(logger66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(shutdownHookList78);
    }

    @Test
    public void test04854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04854");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean6 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties();
        boolean boolean8 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.slf4j.Logger logger11 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger11);
    }

    @Test
    public void test04855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04855");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        atmosphereConfig8.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig8.startupHook(startupHook25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig27.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig35.shutdownHooks = shutdownHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig35.getproperties();
        atmosphereConfig27.setproperties(strMap42);
        atmosphereConfig26.setproperties(strMap42);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig26.shutdownHooks;
        int int48 = atmosphereConfig26.getInitParameter("", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig26.getproperties();
        boolean boolean50 = atmosphereConfig26.supportSession;
        atmosphereConfig26.sessionTimeoutRemovalAllowed = false;
        int int55 = atmosphereConfig26.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig0.populate(atmosphereConfig26);
        java.lang.Class<?> wildcardClass57 = atmosphereConfig26.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test04856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04856");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        int int8 = atmosphereConfig0.getInitParameter("", 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test04857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04857");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig4.framework = atmosphereFramework7;
        java.lang.String str10 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig15.properties;
        java.lang.String str20 = atmosphereConfig15.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig15.getproperties();
        atmosphereConfig4.properties = strMap21;
        atmosphereConfig4.supportSession = false;
        java.lang.String str26 = atmosphereConfig4.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig4.getAtmosphereHandlerConfig();
        int int30 = atmosphereConfig4.getInitParameter("", (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
    }

    @Test
    public void test04858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04858");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.supportSession = true;
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties;
        int int15 = atmosphereConfig0.getInitParameter("", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig0.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig0.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider18 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 35 + "'", int15 == 35);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test04859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04859");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig0.properties();
        int int20 = atmosphereConfig0.getInitParameter("hi!", (int) (short) -1);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
    }

    @Test
    public void test04860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04860");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        int int8 = atmosphereConfig0.getInitParameter("", 0);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setuseServletContextParameters(true);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig12 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(shutdownHookList9);
    }

    @Test
    public void test04861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04861");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig0.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig21.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.populate(atmosphereConfig21);
        boolean boolean31 = atmosphereConfig21.sessionTimeoutRemovalAllowed;
        atmosphereConfig21.supportSession = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test04862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04862");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        atmosphereConfig0.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        org.slf4j.Logger logger25 = atmosphereConfig17.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig17.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig17.getframework();
        atmosphereConfig17.supportSession = false;
        int int32 = atmosphereConfig17.getInitParameter("hi!", (int) (byte) 100);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = null;
        atmosphereConfig17.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig17.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig17.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        boolean boolean42 = atmosphereConfig41.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig41.properties;
        atmosphereConfig41.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig41.shutdownHook(shutdownHook47);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.getstartUpHook();
        boolean boolean50 = atmosphereConfig48.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig51.shutdownHook(shutdownHook52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray57 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList58, shutdownHookArray57);
        atmosphereConfig54.shutdownHooks = shutdownHookList58;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig54.getproperties();
        atmosphereConfig53.properties = strMap61;
        atmosphereConfig53.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig53.properties;
        atmosphereConfig48.properties = strMap65;
        atmosphereConfig17.setproperties(strMap65);
        atmosphereConfig0.setproperties(strMap65);
        boolean boolean69 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(logger25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test04863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04863");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig4.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig4.setframework(atmosphereFramework37);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig4.getshutdownHooks();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertNotNull(shutdownHookList39);
    }

    @Test
    public void test04864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04864");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        boolean boolean25 = atmosphereConfig11.throwExceptionOnCloned;
        java.lang.String str28 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig29.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig29.atmosphereHandlerConfig;
        boolean boolean46 = atmosphereConfig29.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        atmosphereConfig29.shutdownHooks = shutdownHookList55;
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig11.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = atmosphereConfig11.getshutdownHooks();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNull(atmosphereFramework61);
        org.junit.Assert.assertNotNull(shutdownHookList62);
    }

    @Test
    public void test04865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04865");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig9.setproperties(strMap24);
        boolean boolean28 = atmosphereConfig9.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig0.populate(atmosphereConfig9);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig29.shutdownHooks;
        int int33 = atmosphereConfig29.getInitParameter("hi!", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig29.framework;
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNull(atmosphereFramework34);
    }

    @Test
    public void test04866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04866");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        atmosphereConfig41.setThrowExceptionOnCloned(false);
        atmosphereConfig41.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        atmosphereConfig41.setframework(atmosphereFramework45);
        atmosphereConfig41.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig41.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig41.startUpHook;
        java.lang.String str52 = atmosphereConfig41.getInitParameter("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test04867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04867");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.slf4j.Logger logger19 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig18.framework;
        atmosphereConfig18.supportSession = true;
        int int25 = atmosphereConfig18.getInitParameter("hi!", (int) (byte) 0);
        boolean boolean26 = atmosphereConfig18.isSupportSession();
        atmosphereConfig18.useServletContextParameters = false;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = atmosphereConfig18.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test04868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04868");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig12.getproperties();
        atmosphereConfig11.setproperties(strMap19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig11.properties;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext22 = atmosphereConfig11.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test04869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04869");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray9 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList10, startupHookArray9);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList10);
        boolean boolean15 = atmosphereConfig0.getInitParameter("hi!", false);
        boolean boolean16 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        boolean boolean28 = atmosphereConfig25.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.startupHook(startupHook34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.getstartUpHook();
        atmosphereConfig25.startUpHook = startupHookList36;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig25.startupHook(startupHook38);
        atmosphereConfig25.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig42.shutdownHooks = shutdownHookList46;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig42.getproperties();
        org.slf4j.Logger logger50 = atmosphereConfig42.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig42.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = atmosphereConfig42.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig42.startupHook(startupHook53);
        atmosphereConfig42.supportSession = true;
        atmosphereConfig42.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig58.destroy();
        boolean boolean60 = atmosphereConfig58.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig58.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig58.startUpHook;
        atmosphereConfig42.startUpHook = startupHookList62;
        atmosphereConfig25.startUpHook = startupHookList62;
        atmosphereConfig17.startUpHook = startupHookList62;
        atmosphereConfig0.setstartUpHook(startupHookList62);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(startupHookArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(logger50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNull(atmosphereFramework52);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(atmosphereFramework61);
        org.junit.Assert.assertNotNull(startupHookList62);
    }

    @Test
    public void test04870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04870");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList9;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        atmosphereConfig12.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig19.getAtmosphereHandlerConfig();
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig12.startupHook(startupHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        boolean boolean43 = atmosphereConfig29.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig29.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig46.getAtmosphereHandlerConfig();
        atmosphereConfig45.atmosphereHandlerConfig = atmosphereHandlerConfigList51;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.destroy();
        boolean boolean55 = atmosphereConfig53.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray56 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList57, shutdownHookArray56);
        atmosphereConfig53.shutdownHooks = shutdownHookList57;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig53.getproperties();
        atmosphereConfig45.setproperties(strMap60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig45.startupHook(startupHook62);
        boolean boolean64 = atmosphereConfig63.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig63.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig66.shutdownHook(shutdownHook67);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig69.destroy();
        boolean boolean71 = atmosphereConfig69.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray72 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList73, shutdownHookArray72);
        atmosphereConfig69.shutdownHooks = shutdownHookList73;
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig69.getproperties();
        atmosphereConfig68.properties = strMap76;
        atmosphereConfig63.setproperties(strMap76);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = atmosphereConfig63.getshutdownHooks();
        atmosphereConfig29.setshutdownHooks(shutdownHookList79);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig27.populate(atmosphereConfig29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList82 = null;
        atmosphereConfig81.setshutdownHooks(shutdownHookList82);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList84 = atmosphereConfig81.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList84;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList86 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(shutdownHookList79);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList84);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList86);
    }

    @Test
    public void test04871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04871");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        boolean boolean5 = atmosphereConfig3.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig3.shutdownHooks = shutdownHookList7;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig3.getproperties();
        atmosphereConfig2.properties = strMap10;
        boolean boolean12 = atmosphereConfig2.useServletContextParameters;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig2.atmosphereHandlerConfig;
        atmosphereConfig2.setuseServletContextParameters(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig2.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(startupHookList16);
    }

    @Test
    public void test04872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04872");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig8.framework;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig11.framework();
        org.slf4j.Logger logger13 = atmosphereConfig11.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(logger13);
    }

    @Test
    public void test04873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04873");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        java.lang.String str43 = atmosphereConfig41.getInitParameter("hi!");
        atmosphereConfig41.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig50.startupHook(startupHook51);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = atmosphereConfig52.getframework();
        org.slf4j.Logger logger54 = atmosphereConfig52.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.destroy();
        boolean boolean57 = atmosphereConfig55.supportSession;
        boolean boolean58 = atmosphereConfig55.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig55.startUpHook;
        atmosphereConfig52.startUpHook = startupHookList59;
        atmosphereConfig41.startUpHook = startupHookList59;
        boolean boolean62 = atmosphereConfig41.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = null;
        atmosphereConfig41.setframework(atmosphereFramework63);
        atmosphereConfig41.initComplete();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNull(atmosphereFramework53);
        org.junit.Assert.assertNotNull(logger54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test04874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04874");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8, shutdownHookArray7);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig15.getAtmosphereHandlerConfig();
        atmosphereConfig14.atmosphereHandlerConfig = atmosphereHandlerConfigList20;
        atmosphereConfig14.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig28.startupHook(startupHook29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig28.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig28.getshutdownHooks();
        atmosphereConfig14.setshutdownHooks(shutdownHookList32);
        java.lang.String str35 = atmosphereConfig14.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig14.getproperties();
        atmosphereConfig0.properties = strMap36;
        boolean boolean40 = atmosphereConfig0.getInitParameter("", false);
        boolean boolean41 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test04875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04875");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("");
        boolean boolean21 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig0.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig0.startupHook(startupHook24);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
    }

    @Test
    public void test04876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04876");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig13.getAtmosphereHandlerConfig();
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig20.shutdownHooks = shutdownHookList24;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.getproperties();
        atmosphereConfig12.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig29.shutdownHooks = shutdownHookList33;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig29.getproperties();
        atmosphereConfig12.properties = strMap36;
        atmosphereConfig12.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig0.populate(atmosphereConfig12);
        atmosphereConfig40.setuseServletContextParameters(true);
        atmosphereConfig40.setThrowExceptionOnCloned(true);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext45 = atmosphereConfig40.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
    }

    @Test
    public void test04877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04877");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        atmosphereConfig13.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig16.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig16.startupHook(startupHook33);
        org.slf4j.Logger logger35 = atmosphereConfig34.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig34.framework;
        atmosphereConfig34.supportSession = true;
        int int41 = atmosphereConfig34.getInitParameter("hi!", (int) (byte) 0);
        boolean boolean42 = atmosphereConfig34.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig34.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        boolean boolean47 = atmosphereConfig44.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig44.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig44.getAtmosphereHandlerConfig();
        atmosphereConfig34.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        boolean boolean52 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        atmosphereConfig13.destroy();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(logger35);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test04878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04878");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str17 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean18 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        atmosphereConfig19.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig19.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig19.framework = atmosphereFramework24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig30.startupHook(startupHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig30.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig30.getshutdownHooks();
        atmosphereConfig19.shutdownHooks = shutdownHookList34;
        atmosphereConfig0.shutdownHooks = shutdownHookList34;
        boolean boolean37 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig38.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49, startupHookArray48);
        atmosphereConfig38.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig38.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig54.getAtmosphereHandlerConfig();
        atmosphereConfig53.atmosphereHandlerConfig = atmosphereHandlerConfigList59;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray64 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList65, shutdownHookArray64);
        atmosphereConfig61.shutdownHooks = shutdownHookList65;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig61.getproperties();
        atmosphereConfig53.setproperties(strMap68);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig53.startupHook(startupHook70);
        boolean boolean72 = atmosphereConfig71.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig71.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig74.destroy();
        boolean boolean76 = atmosphereConfig74.supportSession;
        boolean boolean77 = atmosphereConfig74.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList78 = atmosphereConfig74.startUpHook;
        atmosphereConfig71.setstartUpHook(startupHookList78);
        atmosphereConfig38.startUpHook = startupHookList78;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList81 = atmosphereConfig38.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig82.destroy();
        boolean boolean84 = atmosphereConfig82.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook85 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = atmosphereConfig82.shutdownHook(shutdownHook85);
        boolean boolean87 = atmosphereConfig86.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = atmosphereConfig86.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = atmosphereConfig86.properties;
        atmosphereConfig86.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook92 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig93 = atmosphereConfig86.shutdownHook(shutdownHook92);
        java.util.Map<java.lang.String, java.lang.Object> strMap94 = atmosphereConfig93.properties;
        atmosphereConfig38.properties = strMap94;
        atmosphereConfig0.properties = strMap94;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList97 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean98 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList99 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(startupHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(startupHookList78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(atmosphereConfig93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(startupHookList99);
    }

    @Test
    public void test04879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04879");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        org.slf4j.Logger logger7 = atmosphereConfig0.getlogger();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        atmosphereConfig0.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.startUpHook;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext13 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(startupHookList12);
    }

    @Test
    public void test04880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04880");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig18.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig18.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig23.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList34, startupHookArray33);
        atmosphereConfig23.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig23.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig39.getAtmosphereHandlerConfig();
        atmosphereConfig38.atmosphereHandlerConfig = atmosphereHandlerConfigList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray49 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50, shutdownHookArray49);
        atmosphereConfig46.shutdownHooks = shutdownHookList50;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig46.getproperties();
        atmosphereConfig38.setproperties(strMap53);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig38.startupHook(startupHook55);
        boolean boolean57 = atmosphereConfig56.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig56.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        boolean boolean62 = atmosphereConfig59.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig59.startUpHook;
        atmosphereConfig56.setstartUpHook(startupHookList63);
        atmosphereConfig23.startUpHook = startupHookList63;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig23.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = null;
        atmosphereConfig23.framework = atmosphereFramework67;
        java.lang.String str70 = atmosphereConfig23.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig18.populate(atmosphereConfig23);
        java.lang.String str74 = atmosphereConfig18.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig18.startupHook(startupHook75);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(startupHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(atmosphereConfig76);
    }

    @Test
    public void test04881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04881");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig18.properties;
        atmosphereConfig18.throwExceptionOnCloned = false;
        atmosphereConfig18.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        atmosphereConfig24.setuseServletContextParameters(false);
        atmosphereConfig24.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig24.supportSession = true;
        boolean boolean35 = atmosphereConfig24.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig24.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig24.shutdownHooks;
        atmosphereConfig18.shutdownHooks = shutdownHookList37;
        boolean boolean39 = atmosphereConfig18.getuseServletContextParameters();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test04882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04882");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        boolean boolean8 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.shutdownHook(shutdownHook9);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext11 = atmosphereConfig10.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
    }

    @Test
    public void test04883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04883");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        boolean boolean26 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.throwExceptionOnCloned = false;
        boolean boolean29 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig30.getAtmosphereHandlerConfig();
        boolean boolean36 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig30.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig0.populate(atmosphereConfig30);
        java.lang.String str41 = atmosphereConfig39.getInitParameter("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test04884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04884");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig15.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.startUpHook;
        atmosphereConfig15.destroy();
        boolean boolean20 = atmosphereConfig15.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig15.getframework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig15.shutdownHook(shutdownHook22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig23.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        boolean boolean28 = atmosphereConfig25.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.startupHook(startupHook34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.getstartUpHook();
        atmosphereConfig25.startUpHook = startupHookList36;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig25.startupHook(startupHook38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        atmosphereConfig40.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig40.atmosphereHandlerConfig = atmosphereHandlerConfigList52;
        boolean boolean54 = atmosphereConfig40.throwExceptionOnCloned;
        java.lang.String str57 = atmosphereConfig40.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig58.destroy();
        boolean boolean60 = atmosphereConfig58.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig58.shutdownHook(shutdownHook61);
        atmosphereConfig58.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig65.destroy();
        boolean boolean67 = atmosphereConfig65.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig65.shutdownHook(shutdownHook68);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList70 = atmosphereConfig65.getAtmosphereHandlerConfig();
        atmosphereConfig58.atmosphereHandlerConfig = atmosphereHandlerConfigList70;
        atmosphereConfig58.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = atmosphereConfig58.atmosphereHandlerConfig;
        boolean boolean75 = atmosphereConfig58.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig76.destroy();
        boolean boolean78 = atmosphereConfig76.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook79 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = atmosphereConfig76.shutdownHook(shutdownHook79);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList81 = atmosphereConfig76.getAtmosphereHandlerConfig();
        boolean boolean82 = atmosphereConfig76.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray83 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList84 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList84, shutdownHookArray83);
        atmosphereConfig76.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList84);
        atmosphereConfig58.shutdownHooks = shutdownHookList84;
        atmosphereConfig40.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList84);
        atmosphereConfig25.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList84);
        boolean boolean90 = atmosphereConfig25.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList91 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig23.setshutdownHooks(shutdownHookList91);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework93 = atmosphereConfig23.getframework();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList70);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig80);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(shutdownHookList91);
        org.junit.Assert.assertNull(atmosphereFramework93);
    }

    @Test
    public void test04885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04885");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        atmosphereConfig8.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig8.startupHook(startupHook25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig27.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig35.shutdownHooks = shutdownHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig35.getproperties();
        atmosphereConfig27.setproperties(strMap42);
        atmosphereConfig26.setproperties(strMap42);
        atmosphereConfig26.destroy();
        java.lang.String str48 = atmosphereConfig26.getInitParameter("", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig26.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList49);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        boolean boolean53 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        boolean boolean56 = atmosphereConfig4.getInitParameter("", true);
        atmosphereConfig4.useServletContextParameters = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test04886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04886");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        atmosphereConfig0.destroy();
        boolean boolean10 = atmosphereConfig0.getuseServletContextParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap11 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test04887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04887");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean31 = atmosphereConfig0.isSupportSession();
        boolean boolean32 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean33 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str35 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.sessionTimeoutRemovalAllowed;
        boolean boolean39 = atmosphereConfig36.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig0.populate(atmosphereConfig36);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig40.properties;
        boolean boolean42 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test04888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04888");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig4.initComplete();
        boolean boolean11 = atmosphereConfig4.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig4.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        atmosphereConfig13.setproperties(strMap28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig13.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig32.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig40.shutdownHooks = shutdownHookList44;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig40.getproperties();
        atmosphereConfig32.setproperties(strMap47);
        atmosphereConfig31.setproperties(strMap47);
        atmosphereConfig31.destroy();
        atmosphereConfig31.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig31.getAtmosphereHandlerConfig();
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList52;
        java.lang.Class<?> wildcardClass54 = atmosphereConfig4.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test04889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04889");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        boolean boolean8 = atmosphereConfig6.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig6.getAtmosphereHandlerConfig();
        atmosphereConfig5.atmosphereHandlerConfig = atmosphereHandlerConfigList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17, shutdownHookArray16);
        atmosphereConfig13.shutdownHooks = shutdownHookList17;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig13.getproperties();
        atmosphereConfig5.setproperties(strMap20);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig5.startupHook(startupHook22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig23.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig23.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig0.properties = strMap34;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.startupHook(startupHook36);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory38 = atmosphereConfig37.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
    }

    @Test
    public void test04890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04890");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig4.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        atmosphereConfig35.setuseServletContextParameters(false);
        atmosphereConfig35.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig35.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig35.framework = atmosphereFramework48;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList50);
        atmosphereConfig4.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = null;
        atmosphereConfig4.shutdownHooks = shutdownHookList54;
        boolean boolean56 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig57.shutdownHook(shutdownHook60);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig61.getproperties();
        atmosphereConfig4.properties = strMap62;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig4.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig4.startupHook(startupHook65);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(shutdownHookList64);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
    }

    @Test
    public void test04891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04891");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        atmosphereConfig18.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray53 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList54, shutdownHookArray53);
        atmosphereConfig50.shutdownHooks = shutdownHookList54;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig50.getproperties();
        atmosphereConfig42.setproperties(strMap57);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig42.startupHook(startupHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        boolean boolean64 = atmosphereConfig62.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig62.shutdownHook(shutdownHook65);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig62.getAtmosphereHandlerConfig();
        atmosphereConfig61.atmosphereHandlerConfig = atmosphereHandlerConfigList67;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig69.destroy();
        boolean boolean71 = atmosphereConfig69.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray72 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList73, shutdownHookArray72);
        atmosphereConfig69.shutdownHooks = shutdownHookList73;
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig69.getproperties();
        atmosphereConfig61.setproperties(strMap76);
        atmosphereConfig60.setproperties(strMap76);
        int int81 = atmosphereConfig60.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig60.startupHook(startupHook82);
        atmosphereConfig83.setThrowExceptionOnCloned(false);
        atmosphereConfig83.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig83.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = atmosphereConfig18.populate(atmosphereConfig83);
        atmosphereConfig18.destroy();
        boolean boolean90 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework91 = atmosphereConfig18.framework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster92 = atmosphereConfig18.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertNotNull(atmosphereConfig88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(atmosphereFramework91);
    }

    @Test
    public void test04892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04892");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig4.getframework();
        boolean boolean9 = atmosphereConfig4.isSupportSession();
        boolean boolean10 = atmosphereConfig4.getuseServletContextParameters();
        boolean boolean11 = atmosphereConfig4.throwExceptionOnCloned;
        boolean boolean12 = atmosphereConfig4.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test04893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04893");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        atmosphereConfig9.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig9.startupHook(startupHook23);
        atmosphereConfig24.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig31.startupHook(startupHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig40.getstartUpHook();
        atmosphereConfig31.setstartUpHook(startupHookList41);
        atmosphereConfig24.startUpHook = startupHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig24.properties();
        atmosphereConfig0.properties = strMap44;
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test04894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04894");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean13 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig15.getAtmosphereHandlerConfig();
        atmosphereConfig14.atmosphereHandlerConfig = atmosphereHandlerConfigList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig22.shutdownHooks = shutdownHookList26;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.getproperties();
        atmosphereConfig14.setproperties(strMap29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig14.startupHook(startupHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig32.properties;
        atmosphereConfig0.properties = strMap33;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig0.getstartUpHook();
        boolean boolean36 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.useServletContextParameters = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test04895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04895");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.properties;
        atmosphereConfig11.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig11.initComplete();
        java.lang.String str19 = atmosphereConfig11.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig0.populate(atmosphereConfig11);
        atmosphereConfig11.destroy();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
    }

    @Test
    public void test04896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04896");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        atmosphereConfig18.useServletContextParameters = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig18.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig45.startupHook(startupHook46);
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig45.properties;
        atmosphereConfig45.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig45.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig54.getAtmosphereHandlerConfig();
        atmosphereConfig53.atmosphereHandlerConfig = atmosphereHandlerConfigList59;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray64 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList65, shutdownHookArray64);
        atmosphereConfig61.shutdownHooks = shutdownHookList65;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig61.getproperties();
        atmosphereConfig53.setproperties(strMap68);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig53.startupHook(startupHook70);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        boolean boolean75 = atmosphereConfig73.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig73.shutdownHook(shutdownHook76);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList78 = atmosphereConfig73.getAtmosphereHandlerConfig();
        atmosphereConfig72.atmosphereHandlerConfig = atmosphereHandlerConfigList78;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig80.destroy();
        boolean boolean82 = atmosphereConfig80.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray83 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList84 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList84, shutdownHookArray83);
        atmosphereConfig80.shutdownHooks = shutdownHookList84;
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = atmosphereConfig80.getproperties();
        atmosphereConfig72.setproperties(strMap87);
        atmosphereConfig71.setproperties(strMap87);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook90 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig91 = atmosphereConfig71.startupHook(startupHook90);
        java.util.Map<java.lang.String, java.lang.Object> strMap92 = atmosphereConfig71.properties();
        atmosphereConfig45.setproperties(strMap92);
        atmosphereConfig18.properties = strMap92;
        java.util.Map<java.lang.String, java.lang.Object> strMap95 = atmosphereConfig18.properties();
        boolean boolean96 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        boolean boolean97 = atmosphereConfig18.supportSession;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(atmosphereConfig91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test04897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04897");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        boolean boolean17 = atmosphereConfig14.getuseServletContextParameters();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test04898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04898");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.slf4j.Logger logger19 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig18.framework;
        atmosphereConfig18.supportSession = true;
        atmosphereConfig18.setuseServletContextParameters(false);
        boolean boolean25 = atmosphereConfig18.isSupportSession();
        boolean boolean26 = atmosphereConfig18.isThrowExceptionOnCloned();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test04899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04899");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        boolean boolean12 = atmosphereConfig0.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test04900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04900");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        atmosphereConfig18.destroy();
        atmosphereConfig18.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig18.shutdownHooks;
        boolean boolean42 = atmosphereConfig18.getInitParameter("", false);
        boolean boolean43 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider46 = atmosphereConfig18.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test04901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04901");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.slf4j.Logger logger19 = atmosphereConfig18.getlogger();
        atmosphereConfig18.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig18.framework = atmosphereFramework22;
        atmosphereConfig18.setuseServletContextParameters(true);
        atmosphereConfig18.throwExceptionOnCloned = false;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = atmosphereConfig18.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
    }

    @Test
    public void test04902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04902");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.destroy();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig17.getshutdownHooks();
        java.lang.String str24 = atmosphereConfig17.getInitParameter("hi!", "hi!");
        atmosphereConfig17.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig27.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray37 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList38, startupHookArray37);
        atmosphereConfig27.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList38);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig27.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray53 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList54, shutdownHookArray53);
        atmosphereConfig50.shutdownHooks = shutdownHookList54;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig50.getproperties();
        atmosphereConfig42.setproperties(strMap57);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig42.startupHook(startupHook59);
        boolean boolean61 = atmosphereConfig60.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig60.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig63.destroy();
        boolean boolean65 = atmosphereConfig63.supportSession;
        boolean boolean66 = atmosphereConfig63.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig63.startUpHook;
        atmosphereConfig60.setstartUpHook(startupHookList67);
        atmosphereConfig27.startUpHook = startupHookList67;
        atmosphereConfig17.startUpHook = startupHookList67;
        atmosphereConfig0.setstartUpHook(startupHookList67);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration72 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(startupHookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(startupHookList67);
    }

    @Test
    public void test04903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04903");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.shutdownHook(shutdownHook10);
        atmosphereConfig11.setSupportSession(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.getuseServletContextParameters();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test04904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04904");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig0.framework = atmosphereFramework18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.getproperties();
        atmosphereConfig20.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig20.properties = strMap44;
        atmosphereConfig20.sessionTimeoutRemovalAllowed = true;
        boolean boolean50 = atmosphereConfig20.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig20.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig20.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig0.populate(atmosphereConfig20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        atmosphereConfig20.framework = atmosphereFramework54;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory56 = atmosphereConfig20.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
    }

    @Test
    public void test04905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04905");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig4.populate(atmosphereConfig18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig20.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig20.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig20.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        atmosphereConfig25.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig25.startupHook(startupHook32);
        atmosphereConfig25.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig25.startupHook(startupHook36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig20.populate(atmosphereConfig37);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider39 = atmosphereConfig20.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
    }

    @Test
    public void test04906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04906");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.setuseServletContextParameters(false);
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        atmosphereConfig21.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        atmosphereConfig25.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig21.populate(atmosphereConfig25);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig21.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig21.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList31);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNotNull(startupHookList31);
    }

    @Test
    public void test04907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04907");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig18.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26);
        atmosphereConfig0.shutdownHooks = shutdownHookList26;
        atmosphereConfig0.setuseServletContextParameters(false);
        boolean boolean32 = atmosphereConfig0.useServletContextParameters;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig0.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory34 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test04908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04908");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList2 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList2);
        org.junit.Assert.assertNotNull(shutdownHookList4);
    }

    @Test
    public void test04909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04909");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig4.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        atmosphereConfig35.setuseServletContextParameters(false);
        atmosphereConfig35.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig35.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig35.framework = atmosphereFramework48;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList50);
        atmosphereConfig4.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = null;
        atmosphereConfig4.shutdownHooks = shutdownHookList54;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        atmosphereConfig56.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig60.destroy();
        atmosphereConfig60.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig56.populate(atmosphereConfig60);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig65.destroy();
        atmosphereConfig65.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList69 = atmosphereConfig65.getAtmosphereHandlerConfig();
        atmosphereConfig65.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig65.startupHook(startupHook72);
        atmosphereConfig65.setuseServletContextParameters(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig65.getAtmosphereHandlerConfig();
        atmosphereConfig64.atmosphereHandlerConfig = atmosphereHandlerConfigList76;
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList76;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework79 = null;
        atmosphereConfig4.setframework(atmosphereFramework79);
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework82 = atmosphereConfig4.getframework();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList69);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(atmosphereFramework82);
    }

    @Test
    public void test04910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04910");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str11 = atmosphereConfig4.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig4.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig4.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig21.getframework();
        org.slf4j.Logger logger23 = atmosphereConfig21.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        boolean boolean27 = atmosphereConfig24.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig24.startUpHook;
        atmosphereConfig21.startUpHook = startupHookList28;
        atmosphereConfig4.startUpHook = startupHookList28;
        atmosphereConfig4.setSupportSession(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(startupHookList28);
    }

    @Test
    public void test04911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04911");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = null;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList12);
        boolean boolean14 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.startupHook(startupHook15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig28.startupHook(startupHook29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig30.getstartUpHook();
        atmosphereConfig21.setstartUpHook(startupHookList31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        atmosphereConfig33.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        atmosphereConfig37.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig33.populate(atmosphereConfig37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51, shutdownHookArray50);
        atmosphereConfig42.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51);
        atmosphereConfig33.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = null;
        atmosphereConfig33.setframework(atmosphereFramework55);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig33.properties;
        atmosphereConfig21.setproperties(strMap57);
        atmosphereConfig16.properties = strMap57;
        atmosphereConfig16.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig16.getstartUpHook();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory63 = atmosphereConfig16.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(shutdownHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(startupHookList62);
    }

    @Test
    public void test04912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04912");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        atmosphereConfig16.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        atmosphereConfig20.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig16.populate(atmosphereConfig20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig26.getAtmosphereHandlerConfig();
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList31;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig25.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34);
        atmosphereConfig16.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig16.setframework(atmosphereFramework38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig16.properties;
        atmosphereConfig4.setproperties(strMap40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig4.getproperties();
        atmosphereConfig4.setuseServletContextParameters(true);
        boolean boolean47 = atmosphereConfig4.getInitParameter("hi!", false);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory48 = atmosphereConfig4.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test04913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04913");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig35.getAtmosphereHandlerConfig();
        atmosphereConfig34.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig42.shutdownHooks = shutdownHookList46;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig42.getproperties();
        atmosphereConfig34.setproperties(strMap49);
        atmosphereConfig33.setproperties(strMap49);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig33.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig54.getAtmosphereHandlerConfig();
        atmosphereConfig53.atmosphereHandlerConfig = atmosphereHandlerConfigList59;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray64 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList65, shutdownHookArray64);
        atmosphereConfig61.shutdownHooks = shutdownHookList65;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig61.getproperties();
        atmosphereConfig53.setproperties(strMap68);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig53.startupHook(startupHook70);
        boolean boolean72 = atmosphereConfig71.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig71.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig74.destroy();
        boolean boolean76 = atmosphereConfig74.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook77 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig74.shutdownHook(shutdownHook77);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig74.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList80 = atmosphereConfig74.shutdownHooks;
        atmosphereConfig71.shutdownHooks = shutdownHookList80;
        atmosphereConfig33.shutdownHooks = shutdownHookList80;
        atmosphereConfig0.shutdownHooks = shutdownHookList80;
        java.lang.String str86 = atmosphereConfig0.getInitParameter("", "hi!");
        atmosphereConfig0.setuseServletContextParameters(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertNotNull(shutdownHookList80);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
    }

    @Test
    public void test04914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04914");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        org.slf4j.Logger logger8 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        atmosphereConfig9.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        atmosphereConfig9.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig9.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig9.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig9.framework = atmosphereFramework27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig4.populate(atmosphereConfig9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = atmosphereConfig4.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
    }

    @Test
    public void test04915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04915");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.supportSession = false;
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean13 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test04916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04916");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        boolean boolean10 = atmosphereConfig4.getInitParameter("hi!", true);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        java.lang.String str14 = atmosphereConfig4.getInitParameter("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration15 = atmosphereConfig4.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test04917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04917");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig0.framework;
        boolean boolean18 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        atmosphereConfig19.setuseServletContextParameters(false);
        atmosphereConfig19.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig19.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig19.properties();
        atmosphereConfig0.properties = strMap30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        atmosphereConfig32.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        atmosphereConfig36.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig32.populate(atmosphereConfig36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig42.getAtmosphereHandlerConfig();
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray52 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList53, shutdownHookArray52);
        atmosphereConfig49.shutdownHooks = shutdownHookList53;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig49.getproperties();
        atmosphereConfig41.setproperties(strMap56);
        boolean boolean60 = atmosphereConfig41.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig32.populate(atmosphereConfig41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig0.populate(atmosphereConfig61);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig65.destroy();
        boolean boolean67 = atmosphereConfig65.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig65.shutdownHook(shutdownHook68);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList70 = atmosphereConfig65.getAtmosphereHandlerConfig();
        atmosphereConfig64.atmosphereHandlerConfig = atmosphereHandlerConfigList70;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray72 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList73, shutdownHookArray72);
        atmosphereConfig64.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList73);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig0.populate(atmosphereConfig64);
        atmosphereConfig64.useServletContextParameters = false;
        atmosphereConfig64.setSupportSession(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList70);
        org.junit.Assert.assertNotNull(shutdownHookArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
    }

    @Test
    public void test04918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04918");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.supportSession = true;
        org.slf4j.Logger logger32 = atmosphereConfig0.getlogger();
        boolean boolean33 = atmosphereConfig0.useServletContextParameters;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        boolean boolean40 = atmosphereConfig39.supportSession;
        boolean boolean41 = atmosphereConfig39.isSessionTimeoutRemovalAllowed();
        boolean boolean42 = atmosphereConfig39.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig39.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig39.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList44;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig0.startupHook(startupHook47);
        atmosphereConfig48.throwExceptionOnCloned = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
    }

    @Test
    public void test04919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04919");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        boolean boolean8 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.shutdownHook(shutdownHook9);
        boolean boolean11 = atmosphereConfig10.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties;
        boolean boolean13 = atmosphereConfig10.isSupportSession();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test04920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04920");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.slf4j.Logger logger19 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        atmosphereConfig20.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        atmosphereConfig24.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig20.populate(atmosphereConfig24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.startupHook(startupHook34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig40.startupHook(startupHook41);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.getstartUpHook();
        atmosphereConfig33.setstartUpHook(startupHookList43);
        atmosphereConfig28.startUpHook = startupHookList43;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig28.properties;
        atmosphereConfig18.properties = strMap46;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig18.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig18.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig18.properties();
        int int53 = atmosphereConfig18.getInitParameter("", (int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }

    @Test
    public void test04921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04921");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        atmosphereConfig13.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig13.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig13.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster18 = atmosphereConfig13.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
    }

    @Test
    public void test04922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04922");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        boolean boolean8 = atmosphereConfig6.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        boolean boolean11 = atmosphereConfig10.supportSession;
        boolean boolean12 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        atmosphereConfig13.setproperties(strMap28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.getproperties();
        atmosphereConfig13.properties = strMap37;
        atmosphereConfig10.setproperties(strMap37);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig10.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        atmosphereConfig41.setuseServletContextParameters(false);
        atmosphereConfig41.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51, shutdownHookArray50);
        atmosphereConfig41.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        atmosphereConfig41.framework = atmosphereFramework54;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig41.getshutdownHooks();
        atmosphereConfig10.setshutdownHooks(shutdownHookList56);
        atmosphereConfig10.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig10.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = atmosphereConfig10.framework;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(shutdownHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertNull(atmosphereFramework62);
    }

    @Test
    public void test04923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04923");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.startupHook(startupHook26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.shutdownHook(shutdownHook31);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster33 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
    }

    @Test
    public void test04924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04924");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.startupHook(startupHook9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = atmosphereConfig10.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
    }

    @Test
    public void test04925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04925");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        boolean boolean14 = atmosphereConfig13.supportSession;
        boolean boolean15 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        boolean boolean16 = atmosphereConfig13.getuseServletContextParameters();
        boolean boolean17 = atmosphereConfig13.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig13.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList20;
        int int24 = atmosphereConfig0.getInitParameter("hi!", 32);
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
    }

    @Test
    public void test04926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04926");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        org.slf4j.Logger logger29 = atmosphereConfig21.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig21.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.populate(atmosphereConfig21);
        boolean boolean33 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig0.setframework(atmosphereFramework34);
        atmosphereConfig0.useServletContextParameters = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test04927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04927");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.setframework(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = null;
        atmosphereConfig14.setstartUpHook(startupHookList19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig13.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        atmosphereConfig22.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig22.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig22.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig22.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig14.populate(atmosphereConfig22);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory30 = atmosphereConfig29.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
    }

    @Test
    public void test04928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04928");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        boolean boolean14 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        boolean boolean18 = atmosphereConfig15.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.getstartUpHook();
        atmosphereConfig15.startUpHook = startupHookList26;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig15.startupHook(startupHook28);
        boolean boolean30 = atmosphereConfig29.isSupportSession();
        java.lang.String str32 = atmosphereConfig29.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig29.setframework(atmosphereFramework33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig35.setframework(atmosphereFramework36);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList39, startupHookArray38);
        atmosphereConfig35.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList39);
        atmosphereConfig35.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = atmosphereConfig35.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig35.startupHook(startupHook45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51, shutdownHookArray50);
        atmosphereConfig47.shutdownHooks = shutdownHookList51;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig47.getproperties();
        atmosphereConfig46.setproperties(strMap54);
        atmosphereConfig29.properties = strMap54;
        atmosphereConfig13.properties = strMap54;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(startupHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(atmosphereFramework44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMap54);
    }

    @Test
    public void test04929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04929");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean13 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig0.framework;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNull(atmosphereFramework15);
    }

    @Test
    public void test04930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04930");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.startupHook(startupHook20);
        atmosphereConfig21.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig21.getshutdownHooks();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(shutdownHookList23);
    }

    @Test
    public void test04931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04931");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig8.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        boolean boolean20 = atmosphereConfig19.supportSession;
        boolean boolean21 = atmosphereConfig19.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.getproperties();
        atmosphereConfig22.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43, shutdownHookArray42);
        atmosphereConfig39.shutdownHooks = shutdownHookList43;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig39.getproperties();
        atmosphereConfig22.properties = strMap46;
        atmosphereConfig19.setproperties(strMap46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig19.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        atmosphereConfig4.setuseServletContextParameters(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
    }

    @Test
    public void test04932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04932");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        atmosphereConfig17.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        atmosphereConfig21.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig17.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig27.getAtmosphereHandlerConfig();
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray34 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList35, shutdownHookArray34);
        atmosphereConfig26.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList35);
        atmosphereConfig17.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList35);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList35);
        java.lang.String str42 = atmosphereConfig0.getInitParameter("", "");
        boolean boolean43 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(shutdownHookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test04933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04933");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = null;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList12);
        boolean boolean14 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.startupHook(startupHook15);
        boolean boolean17 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test04934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04934");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        atmosphereConfig18.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray53 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList54, shutdownHookArray53);
        atmosphereConfig50.shutdownHooks = shutdownHookList54;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig50.getproperties();
        atmosphereConfig42.setproperties(strMap57);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig42.startupHook(startupHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        boolean boolean64 = atmosphereConfig62.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig62.shutdownHook(shutdownHook65);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig62.getAtmosphereHandlerConfig();
        atmosphereConfig61.atmosphereHandlerConfig = atmosphereHandlerConfigList67;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig69.destroy();
        boolean boolean71 = atmosphereConfig69.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray72 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList73, shutdownHookArray72);
        atmosphereConfig69.shutdownHooks = shutdownHookList73;
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig69.getproperties();
        atmosphereConfig61.setproperties(strMap76);
        atmosphereConfig60.setproperties(strMap76);
        int int81 = atmosphereConfig60.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig60.startupHook(startupHook82);
        atmosphereConfig83.setThrowExceptionOnCloned(false);
        atmosphereConfig83.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig83.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = atmosphereConfig18.populate(atmosphereConfig83);
        atmosphereConfig18.destroy();
        boolean boolean90 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework91 = atmosphereConfig18.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook92 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig93 = atmosphereConfig18.startupHook(startupHook92);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext94 = atmosphereConfig93.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertNotNull(atmosphereConfig88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(atmosphereFramework91);
        org.junit.Assert.assertNotNull(atmosphereConfig93);
    }

    @Test
    public void test04935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04935");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.framework = atmosphereFramework14;
        atmosphereConfig0.setuseServletContextParameters(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNull(atmosphereFramework13);
    }

    @Test
    public void test04936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04936");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties();
        boolean boolean12 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.Class<?> wildcardClass13 = atmosphereConfig0.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test04937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04937");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        atmosphereConfig18.useServletContextParameters = false;
        atmosphereConfig18.useServletContextParameters = false;
        atmosphereConfig18.destroy();
        boolean boolean43 = atmosphereConfig18.throwExceptionOnCloned;
        boolean boolean44 = atmosphereConfig18.getuseServletContextParameters();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test04938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04938");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        atmosphereConfig18.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray53 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList54, shutdownHookArray53);
        atmosphereConfig50.shutdownHooks = shutdownHookList54;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig50.getproperties();
        atmosphereConfig42.setproperties(strMap57);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig42.startupHook(startupHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig62.destroy();
        boolean boolean64 = atmosphereConfig62.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig62.shutdownHook(shutdownHook65);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig62.getAtmosphereHandlerConfig();
        atmosphereConfig61.atmosphereHandlerConfig = atmosphereHandlerConfigList67;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig69.destroy();
        boolean boolean71 = atmosphereConfig69.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray72 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList73, shutdownHookArray72);
        atmosphereConfig69.shutdownHooks = shutdownHookList73;
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig69.getproperties();
        atmosphereConfig61.setproperties(strMap76);
        atmosphereConfig60.setproperties(strMap76);
        int int81 = atmosphereConfig60.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig60.startupHook(startupHook82);
        atmosphereConfig83.setThrowExceptionOnCloned(false);
        atmosphereConfig83.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig83.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = atmosphereConfig18.populate(atmosphereConfig83);
        atmosphereConfig18.destroy();
        boolean boolean90 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework91 = atmosphereConfig18.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook92 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig93 = atmosphereConfig18.startupHook(startupHook92);
        boolean boolean94 = atmosphereConfig18.isSupportSession();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig95 = atmosphereConfig18.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertNotNull(atmosphereConfig88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(atmosphereFramework91);
        org.junit.Assert.assertNotNull(atmosphereConfig93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test04939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04939");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        atmosphereConfig8.initComplete();
        org.slf4j.Logger logger10 = atmosphereConfig8.getlogger();
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(logger10);
    }

    @Test
    public void test04940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04940");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        atmosphereConfig10.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig10.startupHook(startupHook17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig22.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26, startupHookArray25);
        atmosphereConfig22.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26);
        atmosphereConfig22.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig22.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig32.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig32.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig32.setframework(atmosphereFramework41);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig32.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = atmosphereConfig32.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig32.getshutdownHooks();
        atmosphereConfig22.shutdownHooks = shutdownHookList45;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig0.populate(atmosphereConfig22);
        boolean boolean48 = atmosphereConfig47.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        boolean boolean55 = atmosphereConfig53.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = atmosphereConfig53.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig57.shutdownHook(shutdownHook60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig61.startupHook(startupHook62);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig63.getshutdownHooks();
        atmosphereConfig53.setshutdownHooks(shutdownHookList64);
        java.lang.String str67 = atmosphereConfig53.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig53.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = atmosphereConfig53.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList70 = atmosphereConfig53.shutdownHooks;
        atmosphereConfig53.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework73 = atmosphereConfig53.getframework();
        boolean boolean76 = atmosphereConfig53.getInitParameter("hi!", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig53.getshutdownHooks();
        atmosphereConfig47.shutdownHooks = shutdownHookList77;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(startupHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNull(atmosphereFramework44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(startupHookList56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(shutdownHookList64);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(startupHookList68);
        org.junit.Assert.assertNotNull(shutdownHookList69);
        org.junit.Assert.assertNotNull(shutdownHookList70);
        org.junit.Assert.assertNull(atmosphereFramework73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(shutdownHookList77);
    }

    @Test
    public void test04941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04941");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        boolean boolean6 = atmosphereConfig0.getInitParameter("hi!", true);
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean10 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean13 = atmosphereConfig0.getInitParameter("", true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test04942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04942");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.getproperties();
        atmosphereConfig22.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig22.startupHook(startupHook39);
        boolean boolean41 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig40.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig43.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig43.shutdownHooks;
        atmosphereConfig40.shutdownHooks = shutdownHookList49;
        atmosphereConfig0.shutdownHooks = shutdownHookList49;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig0.properties;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration53 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertNotNull(strMap52);
    }

    @Test
    public void test04943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04943");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        boolean boolean7 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        atmosphereConfig8.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig8.startupHook(startupHook25);
        org.slf4j.Logger logger27 = atmosphereConfig26.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        atmosphereConfig28.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        atmosphereConfig32.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig28.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.startupHook(startupHook42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig48.startupHook(startupHook49);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.getstartUpHook();
        atmosphereConfig41.setstartUpHook(startupHookList51);
        atmosphereConfig36.startUpHook = startupHookList51;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig36.properties;
        atmosphereConfig26.properties = strMap54;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig26.getAtmosphereHandlerConfig();
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList56;
        atmosphereConfig4.destroy();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext59 = atmosphereConfig4.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(logger27);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
    }

    @Test
    public void test04944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04944");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        boolean boolean16 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.destroy();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig19.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig19.shutdownHooks;
        atmosphereConfig18.shutdownHooks = shutdownHookList25;
        boolean boolean29 = atmosphereConfig18.getInitParameter("", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test04945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04945");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.startupHook(startupHook26);
        boolean boolean28 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.initComplete();
        boolean boolean32 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig33.atmosphereHandlerConfig = atmosphereHandlerConfigList39;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig33.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig33.startupHook(startupHook42);
        atmosphereConfig33.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig33.startupHook(startupHook46);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig47.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig0.populate(atmosphereConfig47);
        boolean boolean51 = atmosphereConfig50.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.destroy();
        boolean boolean54 = atmosphereConfig52.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig52.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig52.properties();
        atmosphereConfig52.setThrowExceptionOnCloned(false);
        boolean boolean61 = atmosphereConfig52.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig52.properties();
        atmosphereConfig50.properties = strMap62;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory64 = atmosphereConfig50.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMap62);
    }

    @Test
    public void test04946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04946");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList2 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean5 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        boolean boolean8 = atmosphereConfig6.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        boolean boolean11 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        atmosphereConfig6.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig6.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig16.startupHook(startupHook30);
        atmosphereConfig31.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig45.startupHook(startupHook46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.getstartUpHook();
        atmosphereConfig38.setstartUpHook(startupHookList48);
        atmosphereConfig31.startUpHook = startupHookList48;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig31.properties;
        atmosphereConfig6.setproperties(strMap51);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig6.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig0.populate(atmosphereConfig6);
        boolean boolean55 = atmosphereConfig0.getuseServletContextParameters();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
    }

    @Test
    public void test04947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04947");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19, startupHookArray18);
        atmosphereConfig8.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19);
        boolean boolean22 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig8.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.startupHook(startupHook30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig29.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig29.getshutdownHooks();
        java.lang.String str36 = atmosphereConfig29.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig29.getshutdownHooks();
        atmosphereConfig8.shutdownHooks = shutdownHookList37;
        atmosphereConfig0.setshutdownHooks(shutdownHookList37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig0.startupHook(startupHook40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.destroy();
        boolean boolean45 = atmosphereConfig43.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        atmosphereConfig43.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig50.getAtmosphereHandlerConfig();
        atmosphereConfig43.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig43.startupHook(startupHook57);
        atmosphereConfig43.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        atmosphereConfig43.framework = atmosphereFramework61;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig64.destroy();
        boolean boolean66 = atmosphereConfig64.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig64.shutdownHook(shutdownHook67);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList69 = atmosphereConfig64.getAtmosphereHandlerConfig();
        atmosphereConfig63.atmosphereHandlerConfig = atmosphereHandlerConfigList69;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig71.destroy();
        boolean boolean73 = atmosphereConfig71.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray74 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList75 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList75, shutdownHookArray74);
        atmosphereConfig71.shutdownHooks = shutdownHookList75;
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = atmosphereConfig71.getproperties();
        atmosphereConfig63.setproperties(strMap78);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig80.destroy();
        boolean boolean82 = atmosphereConfig80.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray83 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList84 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList84, shutdownHookArray83);
        atmosphereConfig80.shutdownHooks = shutdownHookList84;
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = atmosphereConfig80.getproperties();
        atmosphereConfig63.properties = strMap87;
        atmosphereConfig63.sessionTimeoutRemovalAllowed = true;
        boolean boolean93 = atmosphereConfig63.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework94 = atmosphereConfig63.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList95 = atmosphereConfig63.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig96 = atmosphereConfig43.populate(atmosphereConfig63);
        java.util.Map<java.lang.String, java.lang.Object> strMap97 = atmosphereConfig63.getproperties();
        atmosphereConfig0.properties = strMap97;
        atmosphereConfig0.destroy();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(startupHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(atmosphereFramework94);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList95);
        org.junit.Assert.assertNotNull(atmosphereConfig96);
        org.junit.Assert.assertNotNull(strMap97);
    }

    @Test
    public void test04948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04948");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework();
        boolean boolean11 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.setframework(atmosphereFramework13);
        atmosphereConfig0.setuseServletContextParameters(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig0.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory18 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test04949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04949");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = null;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList12);
        boolean boolean14 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean15 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig16.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig16.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig16.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig16.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig16.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList27;
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig32.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig40.shutdownHooks = shutdownHookList44;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig40.getproperties();
        atmosphereConfig32.setproperties(strMap47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig32.startupHook(startupHook49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.destroy();
        boolean boolean54 = atmosphereConfig52.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig52.getAtmosphereHandlerConfig();
        atmosphereConfig51.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63, shutdownHookArray62);
        atmosphereConfig59.shutdownHooks = shutdownHookList63;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig59.getproperties();
        atmosphereConfig51.setproperties(strMap66);
        atmosphereConfig50.setproperties(strMap66);
        int int71 = atmosphereConfig50.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig50.startupHook(startupHook72);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig74.destroy();
        boolean boolean76 = atmosphereConfig74.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook77 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig74.shutdownHook(shutdownHook77);
        atmosphereConfig74.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig81.destroy();
        boolean boolean83 = atmosphereConfig81.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook84 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig85 = atmosphereConfig81.shutdownHook(shutdownHook84);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList86 = atmosphereConfig81.getAtmosphereHandlerConfig();
        atmosphereConfig74.atmosphereHandlerConfig = atmosphereHandlerConfigList86;
        atmosphereConfig50.atmosphereHandlerConfig = atmosphereHandlerConfigList86;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList89 = atmosphereConfig50.startUpHook;
        atmosphereConfig50.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = atmosphereConfig50.properties();
        atmosphereConfig0.properties = strMap91;
        boolean boolean93 = atmosphereConfig0.supportSession;
        atmosphereConfig0.initComplete();
        boolean boolean95 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig85);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList86);
        org.junit.Assert.assertNotNull(startupHookList89);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test04950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04950");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.destroy();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        atmosphereConfig42.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.lang.String str58 = atmosphereConfig18.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig59.setframework(atmosphereFramework60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63, startupHookArray62);
        atmosphereConfig59.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63);
        atmosphereConfig59.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig59.framework();
        java.lang.String str71 = atmosphereConfig59.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig18.populate(atmosphereConfig59);
        boolean boolean73 = atmosphereConfig18.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(startupHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test04951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04951");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig18.framework;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNull(atmosphereFramework40);
    }

    @Test
    public void test04952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04952");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties();
        atmosphereConfig0.setproperties(strMap16);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("", "");
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.getproperties();
        boolean boolean26 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test04953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04953");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig6.getframework();
        atmosphereConfig6.throwExceptionOnCloned = false;
        boolean boolean10 = atmosphereConfig6.throwExceptionOnCloned;
        atmosphereConfig6.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig6.getshutdownHooks();
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.startupHook(startupHook21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties;
        atmosphereConfig20.sessionTimeoutRemovalAllowed = false;
        boolean boolean26 = atmosphereConfig20.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig31.startupHook(startupHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.destroy();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig40.getstartUpHook();
        atmosphereConfig31.setstartUpHook(startupHookList41);
        atmosphereConfig20.setstartUpHook(startupHookList41);
        atmosphereConfig6.setstartUpHook(startupHookList41);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(startupHookList41);
    }

    @Test
    public void test04954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04954");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        atmosphereConfig18.useServletContextParameters = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig18.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig45.startupHook(startupHook46);
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig45.properties;
        atmosphereConfig45.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig45.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig54.getAtmosphereHandlerConfig();
        atmosphereConfig53.atmosphereHandlerConfig = atmosphereHandlerConfigList59;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray64 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList65, shutdownHookArray64);
        atmosphereConfig61.shutdownHooks = shutdownHookList65;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig61.getproperties();
        atmosphereConfig53.setproperties(strMap68);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig53.startupHook(startupHook70);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig73.destroy();
        boolean boolean75 = atmosphereConfig73.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig73.shutdownHook(shutdownHook76);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList78 = atmosphereConfig73.getAtmosphereHandlerConfig();
        atmosphereConfig72.atmosphereHandlerConfig = atmosphereHandlerConfigList78;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig80.destroy();
        boolean boolean82 = atmosphereConfig80.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray83 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList84 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList84, shutdownHookArray83);
        atmosphereConfig80.shutdownHooks = shutdownHookList84;
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = atmosphereConfig80.getproperties();
        atmosphereConfig72.setproperties(strMap87);
        atmosphereConfig71.setproperties(strMap87);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook90 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig91 = atmosphereConfig71.startupHook(startupHook90);
        java.util.Map<java.lang.String, java.lang.Object> strMap92 = atmosphereConfig71.properties();
        atmosphereConfig45.setproperties(strMap92);
        atmosphereConfig18.properties = strMap92;
        boolean boolean95 = atmosphereConfig18.isSupportSession();
        boolean boolean96 = atmosphereConfig18.isThrowExceptionOnCloned();
        atmosphereConfig18.initComplete();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(atmosphereConfig91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test04955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04955");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList4, startupHookArray3);
        atmosphereConfig0.startUpHook = startupHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig7.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig7.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26, startupHookArray25);
        atmosphereConfig15.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26);
        boolean boolean29 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig15.setframework(atmosphereFramework30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig36.startupHook(startupHook37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig36.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig36.getshutdownHooks();
        java.lang.String str43 = atmosphereConfig36.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig36.getshutdownHooks();
        atmosphereConfig15.shutdownHooks = shutdownHookList44;
        atmosphereConfig7.setshutdownHooks(shutdownHookList44);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig7.framework();
        atmosphereConfig7.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray53 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList54, shutdownHookArray53);
        atmosphereConfig50.shutdownHooks = shutdownHookList54;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig50.getproperties();
        org.slf4j.Logger logger58 = atmosphereConfig50.getlogger();
        boolean boolean59 = atmosphereConfig50.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig50.setframework(atmosphereFramework60);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig50.shutdownHook(shutdownHook62);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = null;
        atmosphereConfig64.setframework(atmosphereFramework65);
        boolean boolean67 = atmosphereConfig64.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig64.getproperties();
        atmosphereConfig50.properties = strMap68;
        atmosphereConfig7.setproperties(strMap68);
        atmosphereConfig0.properties = strMap68;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(startupHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(startupHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(logger58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strMap68);
    }

    @Test
    public void test04956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04956");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook1 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = atmosphereConfig0.shutdownHook(shutdownHook1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.destroy();
        boolean boolean5 = atmosphereConfig3.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.destroy();
        atmosphereConfig6.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig6.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        atmosphereConfig3.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        atmosphereConfig0.startUpHook = startupHookList11;
        int int18 = atmosphereConfig0.getInitParameter("hi!", (int) (byte) 10);
        boolean boolean19 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig20.shutdownHooks = shutdownHookList24;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.getproperties();
        org.slf4j.Logger logger28 = atmosphereConfig20.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig20.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig20.getframework();
        atmosphereConfig20.supportSession = false;
        int int35 = atmosphereConfig20.getInitParameter("hi!", (int) (byte) 100);
        atmosphereConfig20.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig20.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.destroy();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        atmosphereConfig39.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig46.getAtmosphereHandlerConfig();
        atmosphereConfig39.atmosphereHandlerConfig = atmosphereHandlerConfigList51;
        atmosphereConfig39.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig39.atmosphereHandlerConfig;
        atmosphereConfig39.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = atmosphereConfig39.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = atmosphereConfig39.framework();
        boolean boolean60 = atmosphereConfig39.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig39.getstartUpHook();
        atmosphereConfig20.setstartUpHook(startupHookList61);
        atmosphereConfig0.startUpHook = startupHookList61;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig64.destroy();
        boolean boolean66 = atmosphereConfig64.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig64.shutdownHook(shutdownHook67);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList69 = atmosphereConfig64.getAtmosphereHandlerConfig();
        boolean boolean70 = atmosphereConfig64.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray71 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList72, shutdownHookArray71);
        atmosphereConfig64.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList72);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList72);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap76 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNull(atmosphereFramework58);
        org.junit.Assert.assertNull(atmosphereFramework59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test04957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04957");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig23.getproperties();
        atmosphereConfig15.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.startupHook(startupHook32);
        boolean boolean34 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        boolean boolean39 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig36.startUpHook;
        atmosphereConfig33.setstartUpHook(startupHookList40);
        atmosphereConfig0.startUpHook = startupHookList40;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
    }

    @Test
    public void test04958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04958");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig4);
        boolean boolean9 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        atmosphereConfig8.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.destroy();
        boolean boolean14 = atmosphereConfig12.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig12.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig12.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig12.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig12.startUpHook;
        atmosphereConfig8.startUpHook = startupHookList23;
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(startupHookList23);
    }

    @Test
    public void test04959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04959");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray13 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList14, shutdownHookArray13);
        atmosphereConfig10.shutdownHooks = shutdownHookList14;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig10.getproperties();
        atmosphereConfig9.properties = strMap17;
        atmosphereConfig0.properties = strMap17;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.useServletContextParameters = false;
        java.lang.String str26 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test04960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04960");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        atmosphereConfig16.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.destroy();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig16.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.getproperties();
        atmosphereConfig15.properties = strMap31;
        java.lang.String str35 = atmosphereConfig15.getInitParameter("", "");
        atmosphereConfig15.setSupportSession(true);
        java.lang.String str39 = atmosphereConfig15.getInitParameter("");
        atmosphereConfig15.initComplete();
        atmosphereConfig15.setSessionTimeoutRemovalAllowed(false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration43 = atmosphereConfig15.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test04961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04961");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig15.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.startUpHook;
        atmosphereConfig15.destroy();
        boolean boolean20 = atmosphereConfig15.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig21.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig21.shutdownHooks;
        atmosphereConfig15.shutdownHooks = shutdownHookList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.destroy();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig30.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        atmosphereConfig30.setframework(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig41.shutdownHooks = shutdownHookList45;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig41.getproperties();
        atmosphereConfig41.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray51 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList52, startupHookArray51);
        atmosphereConfig41.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList52);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig41.startUpHook;
        atmosphereConfig30.startUpHook = startupHookList55;
        atmosphereConfig15.startUpHook = startupHookList55;
        atmosphereConfig15.useServletContextParameters = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = atmosphereConfig15.shutdownHooks;
        boolean boolean61 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        boolean boolean62 = atmosphereConfig15.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(startupHookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertNotNull(shutdownHookList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test04962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04962");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.lang.String str20 = atmosphereConfig18.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig18.framework = atmosphereFramework21;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig18.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.destroy();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig26.getAtmosphereHandlerConfig();
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList31;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.destroy();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList37, shutdownHookArray36);
        atmosphereConfig33.shutdownHooks = shutdownHookList37;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig33.getproperties();
        atmosphereConfig25.setproperties(strMap40);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig25.startupHook(startupHook42);
        java.lang.String str45 = atmosphereConfig25.getInitParameter("");
        boolean boolean46 = atmosphereConfig25.getuseServletContextParameters();
        atmosphereConfig25.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.destroy();
        boolean boolean51 = atmosphereConfig49.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray52 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList53, shutdownHookArray52);
        atmosphereConfig49.shutdownHooks = shutdownHookList53;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig49.getproperties();
        atmosphereConfig49.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.destroy();
        boolean boolean61 = atmosphereConfig59.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig59.shutdownHook(shutdownHook62);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig59.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig59.properties();
        atmosphereConfig49.setproperties(strMap65);
        java.lang.String str69 = atmosphereConfig49.getInitParameter("", "");
        atmosphereConfig49.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework72 = atmosphereConfig49.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList73 = atmosphereConfig49.atmosphereHandlerConfig;
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList73;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList73;
        atmosphereConfig18.supportSession = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNull(atmosphereFramework72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList73);
    }

    @Test
    public void test04963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04963");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig4.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig4.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig4.shutdownHook(shutdownHook39);
        boolean boolean41 = atmosphereConfig40.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig40.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig40.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.destroy();
        boolean boolean46 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray47 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList48, shutdownHookArray47);
        atmosphereConfig44.shutdownHooks = shutdownHookList48;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig44.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig44.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig44.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig44.properties;
        atmosphereConfig40.setproperties(strMap54);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(atmosphereFramework42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(strMap54);
    }

    @Test
    public void test04964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04964");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19, startupHookArray18);
        atmosphereConfig8.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19);
        boolean boolean22 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig8.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.startupHook(startupHook30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig29.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig29.getshutdownHooks();
        java.lang.String str36 = atmosphereConfig29.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig29.getshutdownHooks();
        atmosphereConfig8.shutdownHooks = shutdownHookList37;
        atmosphereConfig0.setshutdownHooks(shutdownHookList37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig0.startupHook(startupHook40);
        atmosphereConfig0.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = atmosphereConfig0.framework();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(startupHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNull(atmosphereFramework44);
    }

    @Test
    public void test04965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04965");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        boolean boolean6 = atmosphereConfig0.getInitParameter("hi!", true);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        atmosphereConfig11.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig11.supportSession = true;
        boolean boolean22 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig11.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig24.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig32.getproperties();
        atmosphereConfig24.setproperties(strMap39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig41.shutdownHooks = shutdownHookList45;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig41.getproperties();
        atmosphereConfig24.properties = strMap48;
        atmosphereConfig24.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig24.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.destroy();
        boolean boolean55 = atmosphereConfig53.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray56 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList57, shutdownHookArray56);
        atmosphereConfig53.shutdownHooks = shutdownHookList57;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig53.getproperties();
        org.slf4j.Logger logger61 = atmosphereConfig53.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig53.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = atmosphereConfig53.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig53.atmosphereHandlerConfig;
        atmosphereConfig24.atmosphereHandlerConfig = atmosphereHandlerConfigList64;
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList64;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList64;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext68 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(logger61);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
        org.junit.Assert.assertNull(atmosphereFramework63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
    }

    @Test
    public void test04966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04966");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.setSupportSession(false);
        boolean boolean14 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean15 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test04967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04967");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig4.framework = atmosphereFramework7;
        java.lang.String str10 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig15.properties;
        java.lang.String str20 = atmosphereConfig15.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig15.getproperties();
        atmosphereConfig4.properties = strMap21;
        atmosphereConfig4.supportSession = false;
        java.lang.String str26 = atmosphereConfig4.getInitParameter("hi!");
        boolean boolean27 = atmosphereConfig4.throwExceptionOnCloned;
        atmosphereConfig4.destroy();
        boolean boolean29 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test04968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04968");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.framework = atmosphereFramework10;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.startupHook(startupHook20);
        int int24 = atmosphereConfig19.getInitParameter("", (int) (short) 10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig19.atmosphereHandlerConfig;
        org.slf4j.Logger logger26 = atmosphereConfig19.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig27.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig35.shutdownHooks = shutdownHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig35.getproperties();
        atmosphereConfig27.setproperties(strMap42);
        boolean boolean46 = atmosphereConfig27.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig27.framework();
        boolean boolean48 = atmosphereConfig27.isSessionTimeoutRemovalAllowed();
        boolean boolean49 = atmosphereConfig27.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig27.getstartUpHook();
        atmosphereConfig19.setstartUpHook(startupHookList50);
        atmosphereConfig13.setstartUpHook(startupHookList50);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(logger26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(startupHookList50);
    }

    @Test
    public void test04969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04969");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.isSupportSession();
        java.lang.String str10 = atmosphereConfig4.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        atmosphereConfig11.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig11.getAtmosphereHandlerConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList22, shutdownHookArray21);
        atmosphereConfig18.shutdownHooks = shutdownHookList22;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig18.getproperties();
        atmosphereConfig11.setproperties(strMap25);
        atmosphereConfig11.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig11.startupHook(startupHook28);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig11.getstartUpHook();
        atmosphereConfig4.startUpHook = startupHookList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.destroy();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        boolean boolean37 = atmosphereConfig36.supportSession;
        boolean boolean38 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        boolean boolean39 = atmosphereConfig36.getuseServletContextParameters();
        boolean boolean40 = atmosphereConfig36.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig36.shutdownHook(shutdownHook41);
        boolean boolean43 = atmosphereConfig36.getuseServletContextParameters();
        atmosphereConfig36.setSupportSession(true);
        atmosphereConfig36.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig4.populate(atmosphereConfig36);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap49 = atmosphereConfig36.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
    }

    @Test
    public void test04970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04970");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray8 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList9, shutdownHookArray8);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig0.framework = atmosphereFramework12;
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        boolean boolean22 = atmosphereConfig21.supportSession;
        boolean boolean23 = atmosphereConfig21.isSessionTimeoutRemovalAllowed();
        atmosphereConfig21.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        boolean boolean27 = atmosphereConfig25.supportSession;
        boolean boolean28 = atmosphereConfig25.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.startupHook(startupHook34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.getstartUpHook();
        atmosphereConfig25.startUpHook = startupHookList36;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig25.startupHook(startupHook38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.destroy();
        boolean boolean42 = atmosphereConfig40.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        atmosphereConfig40.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig40.atmosphereHandlerConfig = atmosphereHandlerConfigList52;
        boolean boolean54 = atmosphereConfig40.throwExceptionOnCloned;
        java.lang.String str57 = atmosphereConfig40.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig58.destroy();
        boolean boolean60 = atmosphereConfig58.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig58.shutdownHook(shutdownHook61);
        atmosphereConfig58.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig65.destroy();
        boolean boolean67 = atmosphereConfig65.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig65.shutdownHook(shutdownHook68);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList70 = atmosphereConfig65.getAtmosphereHandlerConfig();
        atmosphereConfig58.atmosphereHandlerConfig = atmosphereHandlerConfigList70;
        atmosphereConfig58.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = atmosphereConfig58.atmosphereHandlerConfig;
        boolean boolean75 = atmosphereConfig58.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig76.destroy();
        boolean boolean78 = atmosphereConfig76.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook79 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = atmosphereConfig76.shutdownHook(shutdownHook79);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList81 = atmosphereConfig76.getAtmosphereHandlerConfig();
        boolean boolean82 = atmosphereConfig76.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray83 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList84 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList84, shutdownHookArray83);
        atmosphereConfig76.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList84);
        atmosphereConfig58.shutdownHooks = shutdownHookList84;
        atmosphereConfig40.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList84);
        atmosphereConfig25.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList84);
        atmosphereConfig21.shutdownHooks = shutdownHookList84;
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList84);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList92 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList70);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig80);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList92);
    }

    @Test
    public void test04971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04971");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties;
        org.slf4j.Logger logger8 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.destroy();
        boolean boolean11 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        atmosphereConfig9.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.destroy();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        atmosphereConfig9.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig9.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig9.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig9.framework = atmosphereFramework27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig4.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.destroy();
        boolean boolean33 = atmosphereConfig31.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig31.getAtmosphereHandlerConfig();
        atmosphereConfig30.atmosphereHandlerConfig = atmosphereHandlerConfigList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig30.setproperties(strMap45);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig30.startupHook(startupHook47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.destroy();
        boolean boolean52 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig50.getAtmosphereHandlerConfig();
        atmosphereConfig49.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.destroy();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray60 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList61, shutdownHookArray60);
        atmosphereConfig57.shutdownHooks = shutdownHookList61;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig57.getproperties();
        atmosphereConfig49.setproperties(strMap64);
        atmosphereConfig48.setproperties(strMap64);
        int int69 = atmosphereConfig48.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig48.startupHook(startupHook70);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig72.destroy();
        boolean boolean74 = atmosphereConfig72.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig72.shutdownHook(shutdownHook75);
        atmosphereConfig72.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig79.destroy();
        boolean boolean81 = atmosphereConfig79.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig79.shutdownHook(shutdownHook82);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList84 = atmosphereConfig79.getAtmosphereHandlerConfig();
        atmosphereConfig72.atmosphereHandlerConfig = atmosphereHandlerConfigList84;
        atmosphereConfig48.atmosphereHandlerConfig = atmosphereHandlerConfigList84;
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList84;
        atmosphereConfig29.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework90 = null;
        atmosphereConfig29.setframework(atmosphereFramework90);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework92 = atmosphereConfig29.framework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster93 = atmosphereConfig29.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList84);
        org.junit.Assert.assertNull(atmosphereFramework92);
    }

    @Test
    public void test04972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04972");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig4.getuseServletContextParameters();
        atmosphereConfig4.throwExceptionOnCloned = true;
        atmosphereConfig4.useServletContextParameters = true;
        java.lang.String str13 = atmosphereConfig4.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig4.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        boolean boolean20 = atmosphereConfig19.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties;
        atmosphereConfig19.initComplete();
        atmosphereConfig19.setuseServletContextParameters(false);
        boolean boolean25 = atmosphereConfig19.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig4.populate(atmosphereConfig19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = atmosphereConfig19.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
    }

    @Test
    public void test04973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04973");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        boolean boolean6 = atmosphereConfig4.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.startupHook(startupHook13);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig14.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList15);
        java.lang.String str18 = atmosphereConfig4.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig4.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig4.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig4.setuseServletContextParameters(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
    }

    @Test
    public void test04974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04974");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        atmosphereConfig0.useServletContextParameters = true;
        boolean boolean16 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.shutdownHook(shutdownHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        atmosphereConfig0.properties = strMap19;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(atmosphereFramework21);
    }

    @Test
    public void test04975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04975");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig7.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.destroy();
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        boolean boolean19 = atmosphereConfig18.supportSession;
        boolean boolean20 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.destroy();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig29.shutdownHooks = shutdownHookList33;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig29.getproperties();
        atmosphereConfig21.setproperties(strMap36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.destroy();
        boolean boolean40 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList42, shutdownHookArray41);
        atmosphereConfig38.shutdownHooks = shutdownHookList42;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig21.properties = strMap45;
        atmosphereConfig18.setproperties(strMap45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        java.lang.String str52 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean53 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.destroy();
        boolean boolean56 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig58.startupHook(startupHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.destroy();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig61.shutdownHook(shutdownHook64);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig65.startupHook(startupHook66);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig65.properties;
        atmosphereConfig58.properties = strMap68;
        atmosphereConfig0.properties = strMap68;
        boolean boolean71 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean72 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test04976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04976");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        boolean boolean11 = atmosphereConfig0.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig12 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test04977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04977");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.slf4j.Logger logger19 = atmosphereConfig18.getlogger();
        java.lang.String str22 = atmosphereConfig18.getInitParameter("", "hi!");
        atmosphereConfig18.setSupportSession(true);
        atmosphereConfig18.supportSession = false;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap27 = atmosphereConfig18.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
    }

    @Test
    public void test04978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04978");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.destroy();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        atmosphereConfig11.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.destroy();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        boolean boolean25 = atmosphereConfig11.throwExceptionOnCloned;
        java.lang.String str28 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.destroy();
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        atmosphereConfig29.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.destroy();
        boolean boolean38 = atmosphereConfig36.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig29.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig29.atmosphereHandlerConfig;
        boolean boolean46 = atmosphereConfig29.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.destroy();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        atmosphereConfig29.shutdownHooks = shutdownHookList55;
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig11);
        atmosphereConfig60.setThrowExceptionOnCloned(true);
        java.lang.String str65 = atmosphereConfig60.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = atmosphereConfig60.framework();
        atmosphereConfig60.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig60.getproperties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(atmosphereFramework66);
        org.junit.Assert.assertNotNull(strMap69);
    }

    @Test
    public void test04979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04979");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setSupportSession(true);
        boolean boolean10 = atmosphereConfig4.supportSession;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig4.getframework();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = atmosphereConfig4.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(atmosphereFramework13);
    }

    @Test
    public void test04980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04980");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.shutdownHooks;
        boolean boolean9 = atmosphereConfig0.isSupportSession();
        boolean boolean10 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.lang.String str15 = atmosphereConfig0.getInitParameter("", "hi!");
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test04981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04981");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        java.lang.String str43 = atmosphereConfig41.getInitParameter("hi!");
        atmosphereConfig41.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig50.startupHook(startupHook51);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = atmosphereConfig52.getframework();
        org.slf4j.Logger logger54 = atmosphereConfig52.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.destroy();
        boolean boolean57 = atmosphereConfig55.supportSession;
        boolean boolean58 = atmosphereConfig55.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig55.startUpHook;
        atmosphereConfig52.startUpHook = startupHookList59;
        atmosphereConfig41.startUpHook = startupHookList59;
        boolean boolean62 = atmosphereConfig41.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = null;
        atmosphereConfig41.setframework(atmosphereFramework63);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext65 = atmosphereConfig41.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNull(atmosphereFramework53);
        org.junit.Assert.assertNotNull(logger54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test04982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04982");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig4.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig4.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig4.shutdownHook(shutdownHook39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig41.shutdownHooks = shutdownHookList45;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig41.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig41.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        atmosphereConfig41.setframework(atmosphereFramework50);
        boolean boolean52 = atmosphereConfig41.getuseServletContextParameters();
        atmosphereConfig41.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.destroy();
        boolean boolean58 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig56.getAtmosphereHandlerConfig();
        atmosphereConfig55.atmosphereHandlerConfig = atmosphereHandlerConfigList61;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig63.destroy();
        boolean boolean65 = atmosphereConfig63.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray66 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList67, shutdownHookArray66);
        atmosphereConfig63.shutdownHooks = shutdownHookList67;
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig63.getproperties();
        atmosphereConfig55.setproperties(strMap70);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig55.startupHook(startupHook72);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig75.destroy();
        boolean boolean77 = atmosphereConfig75.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook78 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig75.shutdownHook(shutdownHook78);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList80 = atmosphereConfig75.getAtmosphereHandlerConfig();
        atmosphereConfig74.atmosphereHandlerConfig = atmosphereHandlerConfigList80;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig82.destroy();
        boolean boolean84 = atmosphereConfig82.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray85 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList86 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList86, shutdownHookArray85);
        atmosphereConfig82.shutdownHooks = shutdownHookList86;
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = atmosphereConfig82.getproperties();
        atmosphereConfig74.setproperties(strMap89);
        atmosphereConfig73.setproperties(strMap89);
        boolean boolean92 = atmosphereConfig73.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig93 = atmosphereConfig41.populate(atmosphereConfig73);
        boolean boolean94 = atmosphereConfig41.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList95 = atmosphereConfig41.startUpHook;
        atmosphereConfig40.setstartUpHook(startupHookList95);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider97 = atmosphereConfig40.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList80);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(startupHookList95);
    }

    @Test
    public void test04983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04983");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.destroy();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig0.framework = atmosphereFramework18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.destroy();
        boolean boolean30 = atmosphereConfig28.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.getproperties();
        atmosphereConfig20.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.destroy();
        boolean boolean39 = atmosphereConfig37.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList41, shutdownHookArray40);
        atmosphereConfig37.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig37.getproperties();
        atmosphereConfig20.properties = strMap44;
        atmosphereConfig20.sessionTimeoutRemovalAllowed = true;
        boolean boolean50 = atmosphereConfig20.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig20.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig20.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig0.populate(atmosphereConfig20);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig20.getproperties();
        java.lang.Class<?> wildcardClass55 = atmosphereConfig20.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test04984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04984");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.shutdownHook(shutdownHook10);
        atmosphereConfig11.supportSession = false;
        atmosphereConfig11.supportSession = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
    }

    @Test
    public void test04985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04985");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig6.useServletContextParameters;
        atmosphereConfig6.initComplete();
        boolean boolean9 = atmosphereConfig6.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.destroy();
        boolean boolean12 = atmosphereConfig10.supportSession;
        boolean boolean13 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.startUpHook;
        atmosphereConfig6.startUpHook = startupHookList14;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig6.getframework();
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig6.throwExceptionOnCloned = false;
        atmosphereConfig6.setSessionTimeoutRemovalAllowed(false);
        int int25 = atmosphereConfig6.getInitParameter("hi!", 0);
        atmosphereConfig6.supportSession = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test04986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04986");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        java.lang.String str43 = atmosphereConfig41.getInitParameter("hi!");
        atmosphereConfig41.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig50.startupHook(startupHook51);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = atmosphereConfig52.getframework();
        org.slf4j.Logger logger54 = atmosphereConfig52.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.destroy();
        boolean boolean57 = atmosphereConfig55.supportSession;
        boolean boolean58 = atmosphereConfig55.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig55.startUpHook;
        atmosphereConfig52.startUpHook = startupHookList59;
        atmosphereConfig41.startUpHook = startupHookList59;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig41.startUpHook;
        atmosphereConfig41.useServletContextParameters = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig41.getproperties();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNull(atmosphereFramework53);
        org.junit.Assert.assertNotNull(logger54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertNotNull(startupHookList62);
        org.junit.Assert.assertNotNull(strMap65);
    }

    @Test
    public void test04987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04987");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework();
        boolean boolean11 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.setframework(atmosphereFramework13);
        atmosphereConfig0.setuseServletContextParameters(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig0.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test04988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04988");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8, shutdownHookArray7);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList8);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig16.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig16.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.populate(atmosphereConfig34);
        atmosphereConfig34.useServletContextParameters = true;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider39 = atmosphereConfig34.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
    }

    @Test
    public void test04989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04989");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        boolean boolean6 = atmosphereConfig4.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext8 = atmosphereConfig4.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookList7);
    }

    @Test
    public void test04990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04990");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        boolean boolean3 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig7.getproperties();
        boolean boolean9 = atmosphereConfig7.isThrowExceptionOnCloned();
        java.lang.String str12 = atmosphereConfig7.getInitParameter("", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test04991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04991");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties;
        atmosphereConfig4.initComplete();
        boolean boolean8 = atmosphereConfig4.useServletContextParameters;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory9 = atmosphereConfig4.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test04992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04992");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
    }

    @Test
    public void test04993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04993");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.destroy();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.destroy();
        boolean boolean29 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.getproperties();
        atmosphereConfig19.setproperties(strMap34);
        atmosphereConfig18.setproperties(strMap34);
        int int39 = atmosphereConfig18.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig18.startupHook(startupHook40);
        java.lang.String str43 = atmosphereConfig41.getInitParameter("hi!");
        atmosphereConfig41.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.destroy();
        boolean boolean48 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig50.startupHook(startupHook51);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = atmosphereConfig52.getframework();
        org.slf4j.Logger logger54 = atmosphereConfig52.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.destroy();
        boolean boolean57 = atmosphereConfig55.supportSession;
        boolean boolean58 = atmosphereConfig55.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig55.startUpHook;
        atmosphereConfig52.startUpHook = startupHookList59;
        atmosphereConfig41.startUpHook = startupHookList59;
        boolean boolean62 = atmosphereConfig41.isThrowExceptionOnCloned();
        atmosphereConfig41.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig41.getAtmosphereHandlerConfig();
        boolean boolean66 = atmosphereConfig41.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig41.properties;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNull(atmosphereFramework53);
        org.junit.Assert.assertNotNull(logger54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strMap67);
    }

    @Test
    public void test04994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04994");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str37 = atmosphereConfig4.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = null;
        atmosphereConfig4.startUpHook = startupHookList38;
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig4.getstartUpHook();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster43 = atmosphereConfig4.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNull(startupHookList42);
    }

    @Test
    public void test04995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04995");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig4.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.destroy();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        atmosphereConfig35.setuseServletContextParameters(false);
        atmosphereConfig35.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig35.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig35.framework = atmosphereFramework48;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList50);
        atmosphereConfig4.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig4.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory55 = atmosphereConfig4.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(shutdownHookList54);
    }

    @Test
    public void test04996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04996");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(startupHookList15);
    }

    @Test
    public void test04997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04997");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        boolean boolean3 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig7.getproperties();
        boolean boolean9 = atmosphereConfig7.isThrowExceptionOnCloned();
        atmosphereConfig7.useServletContextParameters = true;
        boolean boolean12 = atmosphereConfig7.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig7.setframework(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test04998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04998");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.destroy();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean31 = atmosphereConfig0.isSupportSession();
        boolean boolean34 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.supportSession = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory39 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test04999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test04999");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig1.destroy();
        boolean boolean3 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.shutdownHook(shutdownHook4);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig18.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig18.initComplete();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory25 = atmosphereConfig18.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
    }

    @Test
    public void test05000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test05000");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.supportSession;
        boolean boolean6 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.destroy();
        boolean boolean10 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.destroy();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        atmosphereConfig7.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.destroy();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig7.properties = strMap31;
        atmosphereConfig4.setproperties(strMap31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.lang.String str37 = atmosphereConfig4.getInitParameter("", "hi!");
        boolean boolean38 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.slf4j.Logger logger39 = atmosphereConfig4.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig4.startUpHook;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(logger39);
        org.junit.Assert.assertNotNull(startupHookList40);
    }
}

