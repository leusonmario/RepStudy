import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test02001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02001");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.shutdownHooks;
        boolean boolean7 = atmosphereConfig4.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig4.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        atmosphereConfig9.setproperties(strMap10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig4.populate(atmosphereConfig9);
        org.slf4j.Logger logger13 = atmosphereConfig12.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        boolean boolean17 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig14.getstartUpHook();
        atmosphereConfig12.startUpHook = startupHookList18;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig12.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = null;
        atmosphereConfig24.setshutdownHooks(shutdownHookList26);
        boolean boolean28 = atmosphereConfig24.useServletContextParameters;
        atmosphereConfig24.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.properties;
        atmosphereConfig12.setproperties(strMap31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList33;
        boolean boolean35 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig0.getframework();
        boolean boolean37 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test02002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02002");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig13.shutdownHooks;
        boolean boolean16 = atmosphereConfig13.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig13.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        atmosphereConfig18.setproperties(strMap19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig13.populate(atmosphereConfig18);
        org.slf4j.Logger logger22 = atmosphereConfig21.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        atmosphereConfig23.setproperties(strMap24);
        boolean boolean26 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig23.getstartUpHook();
        atmosphereConfig21.startUpHook = startupHookList27;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig21.framework = atmosphereFramework29;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig21.startupHook(startupHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = null;
        atmosphereConfig33.setshutdownHooks(shutdownHookList35);
        boolean boolean37 = atmosphereConfig33.useServletContextParameters;
        atmosphereConfig33.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig33.properties;
        atmosphereConfig21.setproperties(strMap40);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig21.getshutdownHooks();
        boolean boolean45 = atmosphereConfig21.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig0.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig47.shutdownHooks;
        boolean boolean50 = atmosphereConfig47.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig47.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        atmosphereConfig52.setproperties(strMap53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig47.populate(atmosphereConfig52);
        boolean boolean56 = atmosphereConfig52.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig52.shutdownHook(shutdownHook57);
        atmosphereConfig58.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig61.startUpHook;
        boolean boolean63 = atmosphereConfig61.sessionTimeoutRemovalAllowed;
        boolean boolean64 = atmosphereConfig61.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig61.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = null;
        atmosphereConfig61.framework = atmosphereFramework66;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig61.startupHook(startupHook68);
        boolean boolean70 = atmosphereConfig69.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList71 = atmosphereConfig69.shutdownHooks;
        atmosphereConfig69.setSupportSession(true);
        java.lang.String str76 = atmosphereConfig69.getInitParameter("hi!", "hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig69.properties();
        atmosphereConfig58.properties = strMap77;
        atmosphereConfig46.properties = strMap77;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework80 = null;
        atmosphereConfig46.setframework(atmosphereFramework80);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(startupHookList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(shutdownHookList71);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(strMap77);
    }

    @Test
    public void test02003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02003");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        atmosphereConfig9.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray13 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList14, atmosphereHandlerConfigArray13);
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.populate(atmosphereConfig9);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig8.getAtmosphereHandlerConfig();
        boolean boolean19 = atmosphereConfig8.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig8.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.populate(atmosphereConfig8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig22.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.startupHook(startupHook27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig26.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig26.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig0.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig33.framework;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider35 = atmosphereConfig33.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNull(atmosphereFramework34);
    }

    @Test
    public void test02004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02004");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(atmosphereFramework14);
    }

    @Test
    public void test02005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02005");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig4.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig4.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext9 = atmosphereConfig4.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
    }

    @Test
    public void test02006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02006");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        boolean boolean12 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        boolean boolean13 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig10.properties();
        atmosphereConfig10.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig10.startupHook(startupHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.properties();
        atmosphereConfig9.properties = strMap18;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig9.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig21.shutdownHooks;
        boolean boolean24 = atmosphereConfig21.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig26.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig21.populate(atmosphereConfig26);
        boolean boolean30 = atmosphereConfig29.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        boolean boolean33 = atmosphereConfig31.sessionTimeoutRemovalAllowed;
        boolean boolean34 = atmosphereConfig31.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig31.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        atmosphereConfig36.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray39 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList40, shutdownHookArray39);
        atmosphereConfig36.shutdownHooks = shutdownHookList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig43.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = null;
        atmosphereConfig43.setshutdownHooks(shutdownHookList45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig36.populate(atmosphereConfig43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig36.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig36.getproperties();
        atmosphereConfig31.setproperties(strMap49);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig31.setframework(atmosphereFramework51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig29.populate(atmosphereConfig31);
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray54 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList55, atmosphereHandlerConfigArray54);
        atmosphereConfig31.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = null;
        atmosphereConfig59.setproperties(strMap60);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63, shutdownHookArray62);
        atmosphereConfig59.shutdownHooks = shutdownHookList63;
        boolean boolean66 = atmosphereConfig59.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = null;
        atmosphereConfig59.setframework(atmosphereFramework67);
        java.lang.String str71 = atmosphereConfig59.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework72 = atmosphereConfig59.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = atmosphereConfig59.shutdownHooks;
        atmosphereConfig9.shutdownHooks = shutdownHookList73;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str75 = atmosphereConfig9.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(shutdownHookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(startupHookList44);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework72);
        org.junit.Assert.assertNotNull(shutdownHookList73);
    }

    @Test
    public void test02007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02007");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.supportSession;
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.getshutdownHooks();
        boolean boolean10 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext14 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
    }

    @Test
    public void test02008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02008");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.getproperties();
        java.lang.String str16 = atmosphereConfig0.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig0.setframework(atmosphereFramework18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNull(atmosphereFramework20);
    }

    @Test
    public void test02009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02009");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.lang.String str4 = atmosphereConfig0.getInitParameter("", "");
        boolean boolean5 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig0.getuseServletContextParameters();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02010");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean7 = atmosphereConfig0.isSupportSession();
        boolean boolean8 = atmosphereConfig0.getuseServletContextParameters();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test02011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02011");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        atmosphereConfig7.setSessionTimeoutRemovalAllowed(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = atmosphereConfig7.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test02012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02012");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig0.setframework(atmosphereFramework11);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test02013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02013");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        atmosphereConfig7.setproperties(strMap8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList11, shutdownHookArray10);
        atmosphereConfig7.shutdownHooks = shutdownHookList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = null;
        atmosphereConfig14.setshutdownHooks(shutdownHookList16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig7.populate(atmosphereConfig14);
        org.slf4j.Logger logger19 = atmosphereConfig7.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig20.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.startupHook(startupHook26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig20.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig20.getproperties();
        atmosphereConfig7.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.populate(atmosphereConfig7);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(atmosphereFramework35);
    }

    @Test
    public void test02014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02014");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig11.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig15.framework = atmosphereFramework16;
        boolean boolean18 = atmosphereConfig15.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig15.properties;
        java.lang.String str22 = atmosphereConfig15.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig23.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig23.setframework(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig23.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig23.startupHook(startupHook29);
        boolean boolean31 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig23.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        atmosphereConfig33.setproperties(strMap34);
        boolean boolean36 = atmosphereConfig33.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig33.getproperties();
        boolean boolean38 = atmosphereConfig33.useServletContextParameters;
        atmosphereConfig33.setSupportSession(true);
        org.slf4j.Logger logger41 = atmosphereConfig33.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig33.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig43.startUpHook;
        atmosphereConfig33.startUpHook = startupHookList44;
        atmosphereConfig23.startUpHook = startupHookList44;
        atmosphereConfig15.startUpHook = startupHookList44;
        atmosphereConfig10.setstartUpHook(startupHookList44);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory49 = atmosphereConfig10.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(logger41);
        org.junit.Assert.assertNull(atmosphereFramework42);
        org.junit.Assert.assertNotNull(startupHookList44);
    }

    @Test
    public void test02015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02015");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray4 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList5, atmosphereHandlerConfigArray4);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean9 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02016");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        boolean boolean10 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean11 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig8.properties();
        atmosphereConfig8.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig15.framework = atmosphereFramework16;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        atmosphereConfig0.setuseServletContextParameters(true);
        boolean boolean22 = atmosphereConfig0.throwExceptionOnCloned;
        org.slf4j.Logger logger23 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        atmosphereConfig24.setproperties(strMap25);
        boolean boolean27 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig24.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig24.setframework(atmosphereFramework29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.shutdownHooks;
        boolean boolean34 = atmosphereConfig31.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig31.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig31.shutdownHooks;
        atmosphereConfig24.shutdownHooks = shutdownHookList36;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig24.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList38;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(shutdownHookList38);
    }

    @Test
    public void test02017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02017");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig1.startUpHook;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray5 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList6, atmosphereHandlerConfigArray5);
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig1);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig9.getframework();
        boolean boolean11 = atmosphereConfig9.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.shutdownHooks;
        boolean boolean15 = atmosphereConfig12.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig12.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        atmosphereConfig17.setproperties(strMap18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig12.populate(atmosphereConfig17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig21.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig21.setframework(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig17.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        atmosphereConfig27.setproperties(strMap28);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        boolean boolean34 = atmosphereConfig27.sessionTimeoutRemovalAllowed;
        java.lang.String str36 = atmosphereConfig27.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig27.setframework(atmosphereFramework38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = null;
        atmosphereConfig40.setproperties(strMap41);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig40.shutdownHooks = shutdownHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = null;
        atmosphereConfig47.setshutdownHooks(shutdownHookList49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig40.populate(atmosphereConfig47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = atmosphereConfig40.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig40.getproperties();
        atmosphereConfig27.properties = strMap53;
        atmosphereConfig21.properties = strMap53;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig57.startUpHook;
        atmosphereConfig57.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray61 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList62, atmosphereHandlerConfigArray61);
        atmosphereConfig57.atmosphereHandlerConfig = atmosphereHandlerConfigList62;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig57.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig66.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig66.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = null;
        atmosphereConfig66.setframework(atmosphereFramework69);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = atmosphereConfig66.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig66.startupHook(startupHook72);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList74 = atmosphereConfig66.getshutdownHooks();
        atmosphereConfig57.setshutdownHooks(shutdownHookList74);
        atmosphereConfig21.setshutdownHooks(shutdownHookList74);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig9.populate(atmosphereConfig21);
        boolean boolean78 = atmosphereConfig9.isSupportSession();
        java.lang.String str81 = atmosphereConfig9.getInitParameter("", "");
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNull(atmosphereFramework52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertNotNull(startupHookList67);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertNull(atmosphereFramework71);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(shutdownHookList74);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
    }

    @Test
    public void test02018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02018");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig0.setproperties(strMap9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.lang.String str15 = atmosphereConfig11.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig11.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig11.framework = atmosphereFramework17;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList19;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig0.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.properties;
        org.slf4j.Logger logger26 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.shutdownHook(shutdownHook27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig0.getshutdownHooks();
        boolean boolean30 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.shutdownHooks;
        boolean boolean34 = atmosphereConfig31.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig31.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        atmosphereConfig36.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig31.populate(atmosphereConfig36);
        org.slf4j.Logger logger40 = atmosphereConfig39.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig39.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig42.shutdownHooks;
        boolean boolean45 = atmosphereConfig42.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig42.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = null;
        atmosphereConfig47.setproperties(strMap48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig42.populate(atmosphereConfig47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig39.populate(atmosphereConfig47);
        java.lang.String str54 = atmosphereConfig39.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig39.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider57 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(logger26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(logger40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
    }

    @Test
    public void test02019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02019");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test02020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02020");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        boolean boolean10 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean11 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig8.properties();
        atmosphereConfig8.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig15.framework = atmosphereFramework16;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.lang.String str23 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        atmosphereConfig24.setproperties(strMap25);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = null;
        atmosphereConfig31.setshutdownHooks(shutdownHookList33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig24.populate(atmosphereConfig31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig31.getstartUpHook();
        boolean boolean37 = atmosphereConfig31.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig31.setframework(atmosphereFramework38);
        boolean boolean40 = atmosphereConfig31.useServletContextParameters;
        atmosphereConfig31.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        atmosphereConfig43.setproperties(strMap44);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray46 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList47, shutdownHookArray46);
        atmosphereConfig43.shutdownHooks = shutdownHookList47;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = null;
        atmosphereConfig50.setshutdownHooks(shutdownHookList52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig43.populate(atmosphereConfig50);
        boolean boolean55 = atmosphereConfig54.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = atmosphereConfig54.startUpHook;
        atmosphereConfig54.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig54.setuseServletContextParameters(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig54.getproperties();
        atmosphereConfig31.setproperties(strMap61);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig0.populate(atmosphereConfig31);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration64 = atmosphereConfig31.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(startupHookList56);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
    }

    @Test
    public void test02021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02021");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        boolean boolean7 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig10 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test02022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02022");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig7.getstartUpHook();
        boolean boolean13 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig7.setframework(atmosphereFramework14);
        boolean boolean16 = atmosphereConfig7.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        boolean boolean19 = atmosphereConfig17.sessionTimeoutRemovalAllowed;
        boolean boolean20 = atmosphereConfig17.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig17.properties();
        atmosphereConfig7.setproperties(strMap21);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig7.getshutdownHooks();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration24 = atmosphereConfig7.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(shutdownHookList23);
    }

    @Test
    public void test02023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02023");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig9.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig9.setframework(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig5.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        atmosphereConfig15.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        boolean boolean22 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        java.lang.String str24 = atmosphereConfig15.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig15.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig15.setframework(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        atmosphereConfig28.setproperties(strMap29);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = null;
        atmosphereConfig35.setshutdownHooks(shutdownHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig28.populate(atmosphereConfig35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig28.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig28.getproperties();
        atmosphereConfig15.properties = strMap41;
        atmosphereConfig9.properties = strMap41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig9.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig9.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig9.properties;
        boolean boolean47 = atmosphereConfig9.supportSession;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test02024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02024");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.framework = atmosphereFramework7;
        boolean boolean9 = atmosphereConfig6.useServletContextParameters;
        java.lang.String str11 = atmosphereConfig6.getInitParameter("hi!");
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        atmosphereConfig13.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17, shutdownHookArray16);
        atmosphereConfig13.shutdownHooks = shutdownHookList17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.setshutdownHooks(shutdownHookList22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig13.populate(atmosphereConfig20);
        boolean boolean25 = atmosphereConfig24.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig24.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig24.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig24.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig6.populate(atmosphereConfig24);
        atmosphereConfig24.useServletContextParameters = false;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(shutdownHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
    }

    @Test
    public void test02025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02025");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        int int3 = atmosphereConfig0.getInitParameter("", (int) 'a');
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        atmosphereConfig6.setproperties(strMap7);
        boolean boolean9 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig6.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig6.setframework(atmosphereFramework11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig6.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig6.startupHook(startupHook14);
        org.slf4j.Logger logger16 = atmosphereConfig15.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig15.shutdownHooks = shutdownHookList18;
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        org.slf4j.Logger logger22 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 97 + "'", int3 == 97);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(logger22);
    }

    @Test
    public void test02026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02026");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        atmosphereConfig11.useServletContextParameters = false;
        boolean boolean15 = atmosphereConfig11.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = null;
        atmosphereConfig16.setshutdownHooks(shutdownHookList18);
        atmosphereConfig16.throwExceptionOnCloned = true;
        atmosphereConfig16.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig16.shutdownHooks;
        atmosphereConfig16.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig16.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig11.populate(atmosphereConfig16);
        boolean boolean29 = atmosphereConfig16.supportSession;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test02027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02027");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.useServletContextParameters;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration7 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test02028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02028");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig11.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig11.setframework(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig11.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList17;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.shutdownHook(shutdownHook21);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
    }

    @Test
    public void test02029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02029");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        int int3 = atmosphereConfig0.getInitParameter("", (int) 'a');
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        boolean boolean8 = atmosphereConfig5.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig5.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig5.setframework(atmosphereFramework10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig5.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig5.startupHook(startupHook13);
        boolean boolean15 = atmosphereConfig5.sessionTimeoutRemovalAllowed;
        java.lang.String str18 = atmosphereConfig5.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig5.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig0.populate(atmosphereConfig5);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster21 = atmosphereConfig5.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 97 + "'", int3 == 97);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
    }

    @Test
    public void test02030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02030");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.lang.String str8 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap9 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test02031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02031");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        boolean boolean9 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig8.framework;
        boolean boolean11 = atmosphereConfig8.isSupportSession();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test02032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02032");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig1.startUpHook;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray5 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList6, atmosphereHandlerConfigArray5);
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig1);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework;
        boolean boolean13 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig14.shutdownHooks = shutdownHookList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = null;
        atmosphereConfig21.setshutdownHooks(shutdownHookList23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig14.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig26.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30, shutdownHookArray29);
        atmosphereConfig26.shutdownHooks = shutdownHookList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = null;
        atmosphereConfig33.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig26.populate(atmosphereConfig33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig26.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig26.getproperties();
        atmosphereConfig21.properties = strMap39;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig21.startupHook(startupHook41);
        boolean boolean43 = atmosphereConfig21.isSessionTimeoutRemovalAllowed();
        atmosphereConfig21.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig0.populate(atmosphereConfig21);
        atmosphereConfig21.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(shutdownHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
    }

    @Test
    public void test02033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02033");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        atmosphereConfig0.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        atmosphereConfig15.setproperties(strMap16);
        boolean boolean18 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig15.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig15.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21);
        boolean boolean26 = atmosphereConfig15.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig15.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig15.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        boolean boolean30 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        atmosphereConfig31.setproperties(strMap32);
        boolean boolean34 = atmosphereConfig31.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig31.getstartUpHook();
        atmosphereConfig31.supportSession = false;
        boolean boolean38 = atmosphereConfig31.isSessionTimeoutRemovalAllowed();
        atmosphereConfig31.initComplete();
        boolean boolean40 = atmosphereConfig31.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = null;
        atmosphereConfig41.setproperties(strMap42);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig41.shutdownHooks = shutdownHookList45;
        boolean boolean48 = atmosphereConfig41.sessionTimeoutRemovalAllowed;
        java.lang.String str50 = atmosphereConfig41.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig41.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig41.setframework(atmosphereFramework52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = null;
        atmosphereConfig54.setproperties(strMap55);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray57 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList58, shutdownHookArray57);
        atmosphereConfig54.shutdownHooks = shutdownHookList58;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig61.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = null;
        atmosphereConfig61.setshutdownHooks(shutdownHookList63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig54.populate(atmosphereConfig61);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = atmosphereConfig54.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig54.getproperties();
        atmosphereConfig41.properties = strMap67;
        atmosphereConfig31.setproperties(strMap67);
        atmosphereConfig0.properties = strMap67;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertNotNull(shutdownHookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(startupHookList62);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNull(atmosphereFramework66);
        org.junit.Assert.assertNotNull(strMap67);
    }

    @Test
    public void test02034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02034");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        org.slf4j.Logger logger10 = atmosphereConfig8.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig8.startUpHook;
        atmosphereConfig8.destroy();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration13 = atmosphereConfig8.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(startupHookList11);
    }

    @Test
    public void test02035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02035");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray4 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList5, atmosphereHandlerConfigArray4);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean9 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.lang.String str11 = atmosphereConfig0.getInitParameter("");
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.slf4j.Logger logger13 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(logger13);
    }

    @Test
    public void test02036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02036");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        atmosphereConfig28.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.shutdownHooks;
        atmosphereConfig28.setshutdownHooks(shutdownHookList33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig28.shutdownHooks;
        atmosphereConfig28.supportSession = false;
        atmosphereConfig28.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig28.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig28.atmosphereHandlerConfig;
        atmosphereConfig28.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        atmosphereConfig44.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray48 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList49, atmosphereHandlerConfigArray48);
        atmosphereConfig44.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig43.populate(atmosphereConfig44);
        org.slf4j.Logger logger53 = atmosphereConfig52.getlogger();
        int int56 = atmosphereConfig52.getInitParameter("", 1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig57.startUpHook;
        java.lang.String str61 = atmosphereConfig57.getInitParameter("", "");
        boolean boolean62 = atmosphereConfig57.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig57.getstartUpHook();
        atmosphereConfig52.startUpHook = startupHookList63;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig52.getstartUpHook();
        atmosphereConfig28.setstartUpHook(startupHookList65);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory67 = atmosphereConfig28.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(logger53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNotNull(startupHookList65);
    }

    @Test
    public void test02037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02037");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap11 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test02038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02038");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        boolean boolean11 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean12 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray15 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList16, atmosphereHandlerConfigArray15);
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig13.startupHook(startupHook19);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig20.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig20.shutdownHook(shutdownHook22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig20.properties();
        atmosphereConfig0.properties = strMap24;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test02039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02039");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.setframework(atmosphereFramework8);
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.lang.String str15 = atmosphereConfig11.getInitParameter("", "");
        boolean boolean16 = atmosphereConfig11.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig11.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList17);
        atmosphereConfig0.initComplete();
        boolean boolean20 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean21 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test02040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02040");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.getshutdownHooks();
        boolean boolean12 = atmosphereConfig0.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(startupHookList13);
    }

    @Test
    public void test02041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02041");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig7.startupHook(startupHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig13.getshutdownHooks();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNull(shutdownHookList15);
    }

    @Test
    public void test02042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02042");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig5.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig5.framework = atmosphereFramework10;
        atmosphereConfig5.setSupportSession(false);
        atmosphereConfig5.setSupportSession(false);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList9);
    }

    @Test
    public void test02043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02043");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray4 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList5, atmosphereHandlerConfigArray4);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        int int12 = atmosphereConfig0.getInitParameter("", (int) (short) 10);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
    }

    @Test
    public void test02044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02044");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        atmosphereConfig28.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.shutdownHooks;
        atmosphereConfig28.setshutdownHooks(shutdownHookList33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig28.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig36.shutdownHooks;
        boolean boolean39 = atmosphereConfig36.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig36.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = null;
        atmosphereConfig41.setproperties(strMap42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig36.populate(atmosphereConfig41);
        org.slf4j.Logger logger45 = atmosphereConfig44.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig44.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig47.shutdownHooks;
        boolean boolean50 = atmosphereConfig47.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig47.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        atmosphereConfig52.setproperties(strMap53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig47.populate(atmosphereConfig52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig44.populate(atmosphereConfig52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig28.populate(atmosphereConfig52);
        boolean boolean58 = atmosphereConfig28.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = atmosphereConfig28.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(shutdownHookList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(logger45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test02045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02045");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.slf4j.Logger logger9 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig10.setproperties(strMap11);
        boolean boolean13 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig8.startUpHook = startupHookList14;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig8.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig8.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.setshutdownHooks(shutdownHookList22);
        boolean boolean24 = atmosphereConfig20.useServletContextParameters;
        atmosphereConfig20.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.properties;
        atmosphereConfig8.setproperties(strMap27);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster29 = atmosphereConfig8.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test02046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02046");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray8 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList9, shutdownHookArray8);
        atmosphereConfig5.shutdownHooks = shutdownHookList9;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = null;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig5.populate(atmosphereConfig12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig5.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig5.getproperties();
        atmosphereConfig0.setproperties(strMap18);
        boolean boolean20 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig0.getframework();
        boolean boolean24 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean25 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test02047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02047");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray4 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList5, atmosphereHandlerConfigArray4);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        boolean boolean10 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.supportSession = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory13 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test02048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02048");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.useServletContextParameters;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig7.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig7.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = null;
        atmosphereConfig7.startUpHook = startupHookList11;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
    }

    @Test
    public void test02049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02049");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.framework = atmosphereFramework4;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.useServletContextParameters = true;
        boolean boolean9 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02050");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.slf4j.Logger logger12 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setuseServletContextParameters(false);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory15 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(logger12);
    }

    @Test
    public void test02051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02051");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig8.shutdownHooks;
        atmosphereConfig8.setSessionTimeoutRemovalAllowed(false);
        boolean boolean13 = atmosphereConfig8.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig8.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList14;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig0.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(shutdownHookList18);
    }

    @Test
    public void test02052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02052");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
    }

    @Test
    public void test02053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02053");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.getproperties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.shutdownHooks;
        boolean boolean15 = atmosphereConfig12.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig12.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        atmosphereConfig17.setproperties(strMap18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig12.populate(atmosphereConfig17);
        boolean boolean21 = atmosphereConfig20.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.populate(atmosphereConfig20);
        int int25 = atmosphereConfig20.getInitParameter("", (int) '#');
        boolean boolean26 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        atmosphereConfig27.setproperties(strMap28);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig27.shutdownHooks = shutdownHookList31;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = null;
        atmosphereConfig34.setshutdownHooks(shutdownHookList36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig27.populate(atmosphereConfig34);
        boolean boolean39 = atmosphereConfig38.supportSession;
        atmosphereConfig38.useServletContextParameters = false;
        boolean boolean42 = atmosphereConfig38.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig43.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig43.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig47.startupHook(startupHook48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig47.properties();
        atmosphereConfig38.properties = strMap50;
        atmosphereConfig20.setproperties(strMap50);
        boolean boolean53 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 35 + "'", int25 == 35);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(startupHookList44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test02054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02054");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        atmosphereConfig7.setproperties(strMap8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList11, shutdownHookArray10);
        atmosphereConfig7.shutdownHooks = shutdownHookList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = null;
        atmosphereConfig14.setshutdownHooks(shutdownHookList16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig7.populate(atmosphereConfig14);
        org.slf4j.Logger logger19 = atmosphereConfig7.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig20.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.startupHook(startupHook26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig20.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig20.getproperties();
        atmosphereConfig7.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.populate(atmosphereConfig7);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig0.properties;
        java.lang.String str36 = atmosphereConfig0.getInitParameter("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration37 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test02055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02055");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean14 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig15.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.startupHook(startupHook22);
        java.lang.String str25 = atmosphereConfig23.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = null;
        atmosphereConfig28.setshutdownHooks(shutdownHookList30);
        boolean boolean32 = atmosphereConfig28.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig28.getframework();
        atmosphereConfig28.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList37, shutdownHookArray36);
        atmosphereConfig28.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList37);
        atmosphereConfig23.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList37);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig23.shutdownHook(shutdownHook41);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig23.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig23.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig23.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList45;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNotNull(shutdownHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
    }

    @Test
    public void test02056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02056");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray10 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList11, atmosphereHandlerConfigArray10);
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList11;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.startupHook(startupHook14);
        boolean boolean16 = atmosphereConfig8.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig8.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        atmosphereConfig19.setproperties(strMap20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray22 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList23, shutdownHookArray22);
        atmosphereConfig19.shutdownHooks = shutdownHookList23;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig26.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = null;
        atmosphereConfig26.setshutdownHooks(shutdownHookList28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig19.populate(atmosphereConfig26);
        boolean boolean31 = atmosphereConfig30.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig30.getproperties();
        atmosphereConfig0.setproperties(strMap32);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(shutdownHookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap32);
    }

    @Test
    public void test02057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02057");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray4 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList5, atmosphereHandlerConfigArray4);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig9.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig9.setframework(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig9.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig9.startupHook(startupHook15);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig0.setframework(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig0.setframework(atmosphereFramework24);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
    }

    @Test
    public void test02058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02058");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray4 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList5, atmosphereHandlerConfigArray4);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.lang.String str11 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        atmosphereConfig16.setThrowExceptionOnCloned(true);
        boolean boolean19 = atmosphereConfig16.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig16.setframework(atmosphereFramework20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig16.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList22);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory24 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookList22);
    }

    @Test
    public void test02059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02059");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.useServletContextParameters = false;
        boolean boolean9 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
    }

    @Test
    public void test02060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02060");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.supportSession;
        boolean boolean6 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        atmosphereConfig7.setproperties(strMap8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList11, shutdownHookArray10);
        atmosphereConfig7.shutdownHooks = shutdownHookList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = null;
        atmosphereConfig14.setshutdownHooks(shutdownHookList16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig7.populate(atmosphereConfig14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig14.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList19;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        atmosphereConfig22.setproperties(strMap23);
        boolean boolean25 = atmosphereConfig22.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig22.getproperties();
        org.slf4j.Logger logger27 = atmosphereConfig22.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig22.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.shutdownHooks;
        boolean boolean36 = atmosphereConfig33.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig33.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig33.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList38);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(logger27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNull(atmosphereFramework40);
    }

    @Test
    public void test02061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02061");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean4 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig0.shutdownHooks;
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
    }

    @Test
    public void test02062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02062");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig8.shutdownHooks;
        boolean boolean11 = atmosphereConfig8.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig8.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        atmosphereConfig13.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig8.populate(atmosphereConfig13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.lang.String str21 = atmosphereConfig17.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.atmosphereHandlerConfig;
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig0.framework = atmosphereFramework26;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean30 = atmosphereConfig0.supportSession;
        java.lang.String str32 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean33 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test02063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02063");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig4.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig4.framework;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(atmosphereFramework6);
    }

    @Test
    public void test02064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02064");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.shutdownHooks;
        boolean boolean12 = atmosphereConfig9.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig9.populate(atmosphereConfig14);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        atmosphereConfig9.setproperties(strMap18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.lang.String str24 = atmosphereConfig20.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig20.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig20.framework = atmosphereFramework26;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig20.startUpHook;
        atmosphereConfig9.startUpHook = startupHookList28;
        atmosphereConfig0.setstartUpHook(startupHookList28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig0.framework;
        java.lang.Class<?> wildcardClass32 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test02065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02065");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        atmosphereConfig11.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig11.shutdownHooks;
        java.lang.String str17 = atmosphereConfig11.getInitParameter("hi!", "");
        java.lang.String str20 = atmosphereConfig11.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig21.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.startupHook(startupHook24);
        boolean boolean28 = atmosphereConfig25.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig11.populate(atmosphereConfig25);
        java.lang.String str32 = atmosphereConfig25.getInitParameter("", "");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration33 = atmosphereConfig25.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(shutdownHookList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test02066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02066");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        boolean boolean5 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test02067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02067");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        boolean boolean11 = atmosphereConfig10.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig10.setframework(atmosphereFramework12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig15.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.startupHook(startupHook22);
        java.lang.String str25 = atmosphereConfig23.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = null;
        atmosphereConfig28.setshutdownHooks(shutdownHookList30);
        boolean boolean32 = atmosphereConfig28.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig28.getframework();
        atmosphereConfig28.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList37, shutdownHookArray36);
        atmosphereConfig28.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList37);
        atmosphereConfig23.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList37);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig23.shutdownHook(shutdownHook41);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        atmosphereConfig42.framework = atmosphereFramework43;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.startUpHook;
        boolean boolean47 = atmosphereConfig45.sessionTimeoutRemovalAllowed;
        boolean boolean48 = atmosphereConfig45.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig45.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        atmosphereConfig45.framework = atmosphereFramework50;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig45.startupHook(startupHook52);
        boolean boolean54 = atmosphereConfig53.sessionTimeoutRemovalAllowed;
        boolean boolean55 = atmosphereConfig53.getuseServletContextParameters();
        atmosphereConfig53.useServletContextParameters = false;
        boolean boolean58 = atmosphereConfig53.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig53.properties();
        atmosphereConfig42.setproperties(strMap59);
        atmosphereConfig10.setproperties(strMap59);
        java.lang.String str63 = atmosphereConfig10.getInitParameter("hi!");
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNotNull(shutdownHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test02068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02068");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        org.slf4j.Logger logger10 = atmosphereConfig8.getlogger();
        int int13 = atmosphereConfig8.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = null;
        atmosphereConfig14.setshutdownHooks(shutdownHookList16);
        boolean boolean18 = atmosphereConfig14.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig8.populate(atmosphereConfig14);
        atmosphereConfig14.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig14.setshutdownHooks(shutdownHookList22);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
    }

    @Test
    public void test02069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02069");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.framework = atmosphereFramework7;
        boolean boolean9 = atmosphereConfig6.useServletContextParameters;
        java.lang.String str11 = atmosphereConfig6.getInitParameter("hi!");
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        atmosphereConfig13.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17, shutdownHookArray16);
        atmosphereConfig13.shutdownHooks = shutdownHookList17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.setshutdownHooks(shutdownHookList22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig13.populate(atmosphereConfig20);
        boolean boolean25 = atmosphereConfig24.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig24.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig24.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig24.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig6.populate(atmosphereConfig24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        atmosphereConfig31.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray35 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList36, atmosphereHandlerConfigArray35);
        atmosphereConfig31.atmosphereHandlerConfig = atmosphereHandlerConfigList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig30.populate(atmosphereConfig31);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig39.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig39.atmosphereHandlerConfig;
        atmosphereConfig24.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(shutdownHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
    }

    @Test
    public void test02070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02070");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.destroy();
        java.lang.String str11 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory12 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test02071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02071");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig4.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig4.startupHook(startupHook7);
        atmosphereConfig4.setuseServletContextParameters(false);
        boolean boolean11 = atmosphereConfig4.throwExceptionOnCloned;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory12 = atmosphereConfig4.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test02072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02072");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray4 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList5, atmosphereHandlerConfigArray4);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.lang.String str11 = atmosphereConfig0.getInitParameter("", "");
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.shutdownHook(shutdownHook14);
        boolean boolean16 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test02073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02073");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray4 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList5, atmosphereHandlerConfigArray4);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean9 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        atmosphereConfig12.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig12.shutdownHooks;
        atmosphereConfig12.useServletContextParameters = true;
        boolean boolean18 = atmosphereConfig12.isSupportSession();
        atmosphereConfig12.setThrowExceptionOnCloned(true);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig21 = atmosphereConfig12.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test02074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02074");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig1.startUpHook;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray5 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList6, atmosphereHandlerConfigArray5);
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.lang.String str14 = atmosphereConfig10.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig0.properties();
        atmosphereConfig0.destroy();
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test02075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02075");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.slf4j.Logger logger9 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig10.setproperties(strMap11);
        boolean boolean13 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig8.startUpHook = startupHookList14;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig8.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig8.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        atmosphereConfig20.setproperties(strMap21);
        boolean boolean23 = atmosphereConfig20.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig20.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig20.setframework(atmosphereFramework25);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig20.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig20.startupHook(startupHook28);
        org.slf4j.Logger logger30 = atmosphereConfig29.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig29.shutdownHooks = shutdownHookList32;
        atmosphereConfig8.shutdownHooks = shutdownHookList32;
        org.slf4j.Logger logger36 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig8.framework = atmosphereFramework37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = null;
        atmosphereConfig39.setshutdownHooks(shutdownHookList41);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig39.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig39.startupHook(startupHook44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig46.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        boolean boolean51 = atmosphereConfig46.supportSession;
        int int54 = atmosphereConfig46.getInitParameter("", (int) (short) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        atmosphereConfig55.setproperties(strMap56);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray58 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList59, shutdownHookArray58);
        atmosphereConfig55.shutdownHooks = shutdownHookList59;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig62.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = null;
        atmosphereConfig62.setshutdownHooks(shutdownHookList64);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig55.populate(atmosphereConfig62);
        boolean boolean67 = atmosphereConfig66.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = null;
        atmosphereConfig68.setproperties(strMap69);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray71 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList72, shutdownHookArray71);
        atmosphereConfig68.shutdownHooks = shutdownHookList72;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList75 = atmosphereConfig68.getstartUpHook();
        atmosphereConfig66.setstartUpHook(startupHookList75);
        atmosphereConfig46.startUpHook = startupHookList75;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = atmosphereConfig46.shutdownHooks;
        atmosphereConfig39.shutdownHooks = shutdownHookList78;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList81 = atmosphereConfig80.startUpHook;
        boolean boolean82 = atmosphereConfig80.sessionTimeoutRemovalAllowed;
        java.lang.String str84 = atmosphereConfig80.getInitParameter("");
        atmosphereConfig80.throwExceptionOnCloned = false;
        atmosphereConfig80.throwExceptionOnCloned = false;
        atmosphereConfig80.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList91 = atmosphereConfig80.shutdownHooks;
        atmosphereConfig39.shutdownHooks = shutdownHookList91;
        atmosphereConfig8.setshutdownHooks(shutdownHookList91);
        java.util.Map<java.lang.String, java.lang.Object> strMap94 = atmosphereConfig8.getproperties();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(logger30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(shutdownHookArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(startupHookList75);
        org.junit.Assert.assertNotNull(shutdownHookList78);
        org.junit.Assert.assertNotNull(startupHookList81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(shutdownHookList91);
        org.junit.Assert.assertNull(strMap94);
    }

    @Test
    public void test02076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02076");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.useServletContextParameters;
        boolean boolean7 = atmosphereConfig0.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig8.setproperties(strMap9);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        boolean boolean15 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig16.shutdownHooks;
        boolean boolean19 = atmosphereConfig16.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig16.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        atmosphereConfig21.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig16.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        java.lang.String str29 = atmosphereConfig25.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig25.atmosphereHandlerConfig;
        atmosphereConfig24.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        atmosphereConfig8.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig8.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig36.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig40.framework = atmosphereFramework41;
        boolean boolean43 = atmosphereConfig40.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig40.properties;
        atmosphereConfig8.setproperties(strMap44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.startUpHook;
        atmosphereConfig46.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig50.shutdownHooks;
        boolean boolean53 = atmosphereConfig50.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig50.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        atmosphereConfig55.setproperties(strMap56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig50.populate(atmosphereConfig55);
        org.slf4j.Logger logger59 = atmosphereConfig58.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig58.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig61.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig61.shutdownHooks;
        boolean boolean64 = atmosphereConfig61.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig61.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = null;
        atmosphereConfig66.setproperties(strMap67);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig61.populate(atmosphereConfig66);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig58.populate(atmosphereConfig66);
        java.lang.String str73 = atmosphereConfig58.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = atmosphereConfig58.getAtmosphereHandlerConfig();
        atmosphereConfig46.atmosphereHandlerConfig = atmosphereHandlerConfigList74;
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList74;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList74;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig78 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(shutdownHookList38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(logger59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(startupHookList62);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList74);
    }

    @Test
    public void test02077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02077");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        int int3 = atmosphereConfig0.getInitParameter("", (int) 'a');
        atmosphereConfig0.setuseServletContextParameters(false);
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 97 + "'", int3 == 97);
    }

    @Test
    public void test02078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02078");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        int int14 = atmosphereConfig7.getInitParameter("", (int) (byte) -1);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig7.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        atmosphereConfig16.setproperties(strMap17);
        boolean boolean19 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig16.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList22, shutdownHookArray21);
        atmosphereConfig16.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList22);
        boolean boolean27 = atmosphereConfig16.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig16.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig29.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = null;
        atmosphereConfig29.setframework(atmosphereFramework32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig29.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig29.startupHook(startupHook35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig29.properties();
        atmosphereConfig16.properties = strMap37;
        atmosphereConfig16.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig16.populate(atmosphereConfig41);
        atmosphereConfig43.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig43.getstartUpHook();
        atmosphereConfig7.setstartUpHook(startupHookList45);
        int int49 = atmosphereConfig7.getInitParameter("hi!", (-1));
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(shutdownHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNull(atmosphereFramework34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test02079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02079");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        boolean boolean11 = atmosphereConfig10.useServletContextParameters;
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.atmosphereHandlerConfig;
        boolean boolean16 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        atmosphereConfig17.setproperties(strMap18);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = null;
        atmosphereConfig24.setshutdownHooks(shutdownHookList26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig17.populate(atmosphereConfig24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        atmosphereConfig29.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig29.shutdownHooks = shutdownHookList33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = null;
        atmosphereConfig36.setshutdownHooks(shutdownHookList38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig29.populate(atmosphereConfig36);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig29.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig29.getproperties();
        atmosphereConfig24.properties = strMap42;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig24.startupHook(startupHook44);
        atmosphereConfig45.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig48.shutdownHooks;
        atmosphereConfig45.setshutdownHooks(shutdownHookList50);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig45.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig45.shutdownHooks;
        atmosphereConfig10.shutdownHooks = shutdownHookList53;
        java.lang.String str57 = atmosphereConfig10.getInitParameter("hi!", "");
        boolean boolean58 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = atmosphereConfig59.shutdownHooks;
        boolean boolean62 = atmosphereConfig59.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig59.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = null;
        atmosphereConfig64.setproperties(strMap65);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig59.populate(atmosphereConfig64);
        org.slf4j.Logger logger68 = atmosphereConfig67.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig67.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList71 = atmosphereConfig70.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = atmosphereConfig70.shutdownHooks;
        boolean boolean73 = atmosphereConfig70.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig70.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = null;
        atmosphereConfig75.setproperties(strMap76);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig70.populate(atmosphereConfig75);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig67.populate(atmosphereConfig75);
        java.lang.String str82 = atmosphereConfig67.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList83 = atmosphereConfig67.atmosphereHandlerConfig;
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList83;
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = atmosphereConfig10.properties();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(shutdownHookList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(logger68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(startupHookList71);
        org.junit.Assert.assertNotNull(shutdownHookList72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList83);
        org.junit.Assert.assertNotNull(strMap85);
    }

    @Test
    public void test02080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02080");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean7 = atmosphereConfig0.isSupportSession();
        boolean boolean8 = atmosphereConfig0.getuseServletContextParameters();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory10 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test02081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02081");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig13.shutdownHooks;
        boolean boolean16 = atmosphereConfig13.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig13.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        atmosphereConfig18.setproperties(strMap19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig13.populate(atmosphereConfig18);
        org.slf4j.Logger logger22 = atmosphereConfig21.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        atmosphereConfig23.setproperties(strMap24);
        boolean boolean26 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig23.getstartUpHook();
        atmosphereConfig21.startUpHook = startupHookList27;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig21.framework = atmosphereFramework29;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig21.startupHook(startupHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = null;
        atmosphereConfig33.setshutdownHooks(shutdownHookList35);
        boolean boolean37 = atmosphereConfig33.useServletContextParameters;
        atmosphereConfig33.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig33.properties;
        atmosphereConfig21.setproperties(strMap40);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig21.getshutdownHooks();
        boolean boolean45 = atmosphereConfig21.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig0.populate(atmosphereConfig21);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory47 = atmosphereConfig21.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
    }

    @Test
    public void test02082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02082");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean7 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.supportSession = true;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory10 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test02083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02083");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig7.throwExceptionOnCloned;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig7.supportSession = false;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
    }

    @Test
    public void test02084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02084");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.getframework();
        boolean boolean13 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean14 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig0.setframework(atmosphereFramework15);
        java.lang.Class<?> wildcardClass17 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02085");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig9.getframework();
        atmosphereConfig9.useServletContextParameters = false;
        atmosphereConfig9.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig9.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        atmosphereConfig16.setproperties(strMap17);
        boolean boolean19 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig16.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig16.setframework(atmosphereFramework21);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig16.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig16.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig25.getframework();
        atmosphereConfig25.useServletContextParameters = false;
        atmosphereConfig25.supportSession = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig25.atmosphereHandlerConfig;
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList31;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext33 = atmosphereConfig9.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
    }

    @Test
    public void test02086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02086");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.getframework();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.isSupportSession();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster7 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test02087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02087");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        boolean boolean11 = atmosphereConfig10.useServletContextParameters;
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        boolean boolean13 = atmosphereConfig10.isThrowExceptionOnCloned();
        atmosphereConfig10.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig10.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig10.framework();
        boolean boolean20 = atmosphereConfig10.getInitParameter("", false);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test02088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02088");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig8.setproperties(strMap9);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        boolean boolean15 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.lang.String str17 = atmosphereConfig8.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig8.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.slf4j.Logger logger21 = atmosphereConfig0.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig0.properties;
        boolean boolean25 = atmosphereConfig0.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig0.getstartUpHook();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory27 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(logger21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(startupHookList26);
    }

    @Test
    public void test02089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02089");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig1.startUpHook;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray5 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList6, atmosphereHandlerConfigArray5);
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig1);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig9.getframework();
        boolean boolean11 = atmosphereConfig9.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig9.atmosphereHandlerConfig;
        boolean boolean13 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        atmosphereConfig9.throwExceptionOnCloned = true;
        org.slf4j.Logger logger16 = atmosphereConfig9.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        atmosphereConfig17.setproperties(strMap18);
        boolean boolean20 = atmosphereConfig17.sessionTimeoutRemovalAllowed;
        boolean boolean21 = atmosphereConfig17.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig17.startUpHook;
        boolean boolean23 = atmosphereConfig17.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig17.startupHook(startupHook24);
        java.lang.String str27 = atmosphereConfig17.getInitParameter("");
        boolean boolean28 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        atmosphereConfig29.setproperties(strMap30);
        boolean boolean32 = atmosphereConfig29.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig29.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray34 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList35, shutdownHookArray34);
        atmosphereConfig29.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList35);
        boolean boolean40 = atmosphereConfig29.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig29.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = atmosphereConfig42.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        atmosphereConfig42.setframework(atmosphereFramework45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig42.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig42.startupHook(startupHook48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig42.properties();
        atmosphereConfig29.properties = strMap50;
        atmosphereConfig29.setSupportSession(false);
        boolean boolean54 = atmosphereConfig29.throwExceptionOnCloned;
        atmosphereConfig29.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig29.getproperties();
        atmosphereConfig17.properties = strMap56;
        atmosphereConfig9.setproperties(strMap56);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider59 = atmosphereConfig9.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(shutdownHookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNull(atmosphereFramework44);
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test02090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02090");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.throwExceptionOnCloned = true;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap13 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
    }

    @Test
    public void test02091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02091");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.setframework(atmosphereFramework8);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig0.setframework(atmosphereFramework12);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(startupHookList11);
    }

    @Test
    public void test02092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02092");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        boolean boolean11 = atmosphereConfig10.useServletContextParameters;
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.atmosphereHandlerConfig;
        boolean boolean16 = atmosphereConfig10.supportSession;
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        atmosphereConfig19.setproperties(strMap20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray22 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList23, shutdownHookArray22);
        atmosphereConfig19.shutdownHooks = shutdownHookList23;
        boolean boolean26 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig27.shutdownHooks;
        boolean boolean30 = atmosphereConfig27.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig27.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        atmosphereConfig32.setproperties(strMap33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig27.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.lang.String str40 = atmosphereConfig36.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig36.atmosphereHandlerConfig;
        atmosphereConfig35.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig19.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig19.properties;
        java.lang.String str48 = atmosphereConfig19.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig19.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = atmosphereConfig19.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig10.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        atmosphereConfig51.framework = atmosphereFramework54;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(atmosphereFramework50);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
    }

    @Test
    public void test02093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02093");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig7.getstartUpHook();
        boolean boolean13 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig7.setframework(atmosphereFramework14);
        boolean boolean16 = atmosphereConfig7.useServletContextParameters;
        atmosphereConfig7.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        atmosphereConfig18.setproperties(strMap19);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList22, shutdownHookArray21);
        atmosphereConfig18.shutdownHooks = shutdownHookList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = null;
        atmosphereConfig25.setshutdownHooks(shutdownHookList27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig18.populate(atmosphereConfig25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        atmosphereConfig30.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig37.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = null;
        atmosphereConfig37.setshutdownHooks(shutdownHookList39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig30.populate(atmosphereConfig37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig30.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig30.getproperties();
        atmosphereConfig25.properties = strMap43;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig25.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig25.getstartUpHook();
        atmosphereConfig7.setstartUpHook(startupHookList46);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig7.shutdownHook(shutdownHook48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNull(atmosphereFramework42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertNotNull(startupHookList46);
    }

    @Test
    public void test02094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02094");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig0.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig8 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
    }

    @Test
    public void test02095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02095");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.getuseServletContextParameters();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig7.properties();
        atmosphereConfig7.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test02096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02096");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig0.setproperties(strMap9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.lang.String str15 = atmosphereConfig11.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig11.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig11.framework = atmosphereFramework17;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList19;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig0.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.properties;
        org.slf4j.Logger logger26 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.shutdownHook(shutdownHook27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig0.getshutdownHooks();
        boolean boolean30 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.shutdownHooks;
        boolean boolean34 = atmosphereConfig31.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig31.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        atmosphereConfig36.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig31.populate(atmosphereConfig36);
        org.slf4j.Logger logger40 = atmosphereConfig39.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig39.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig42.shutdownHooks;
        boolean boolean45 = atmosphereConfig42.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig42.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = null;
        atmosphereConfig47.setproperties(strMap48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig42.populate(atmosphereConfig47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig39.populate(atmosphereConfig47);
        java.lang.String str54 = atmosphereConfig39.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig39.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        atmosphereConfig0.framework = atmosphereFramework57;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(logger26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(logger40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
    }

    @Test
    public void test02097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02097");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig0.useServletContextParameters;
        java.lang.String str11 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(startupHookList12);
    }

    @Test
    public void test02098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02098");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig0.setproperties(strMap9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.lang.String str15 = atmosphereConfig11.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig11.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig11.framework = atmosphereFramework17;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList19;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        atmosphereConfig25.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig0.populate(atmosphereConfig25);
        boolean boolean30 = atmosphereConfig25.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test02099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02099");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        atmosphereConfig28.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.shutdownHooks;
        atmosphereConfig28.setshutdownHooks(shutdownHookList33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig28.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig28.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig28.shutdownHooks;
        atmosphereConfig28.throwExceptionOnCloned = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory40 = atmosphereConfig28.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
    }

    @Test
    public void test02100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02100");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray8 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList9, shutdownHookArray8);
        atmosphereConfig5.shutdownHooks = shutdownHookList9;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = null;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig5.populate(atmosphereConfig12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig5.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig5.getproperties();
        atmosphereConfig0.setproperties(strMap18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.destroy();
        boolean boolean22 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.destroy();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test02101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02101");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean5 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig6.startUpHook;
        boolean boolean8 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig6.properties();
        atmosphereConfig6.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig6.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.populate(atmosphereConfig6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig15.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig15.setframework(atmosphereFramework18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig15.getframework();
        java.lang.String str23 = atmosphereConfig15.getInitParameter("hi!", "hi!");
        atmosphereConfig15.initComplete();
        boolean boolean25 = atmosphereConfig15.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig15.getproperties();
        atmosphereConfig6.setproperties(strMap26);
        atmosphereConfig6.destroy();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test02102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02102");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig13.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig17.atmosphereHandlerConfig;
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig11.startupHook(startupHook23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig24.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig24.framework = atmosphereFramework26;
        java.lang.String str30 = atmosphereConfig24.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.shutdownHooks;
        boolean boolean34 = atmosphereConfig31.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig31.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        atmosphereConfig36.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig31.populate(atmosphereConfig36);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig39.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        boolean boolean43 = atmosphereConfig41.sessionTimeoutRemovalAllowed;
        boolean boolean44 = atmosphereConfig41.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig41.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig41.startupHook(startupHook46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.startUpHook;
        boolean boolean50 = atmosphereConfig48.sessionTimeoutRemovalAllowed;
        boolean boolean51 = atmosphereConfig48.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig48.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig48.startupHook(startupHook53);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = null;
        atmosphereConfig54.framework = atmosphereFramework55;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig57.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = atmosphereConfig57.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig57.setframework(atmosphereFramework60);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = atmosphereConfig57.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig57.startUpHook;
        atmosphereConfig54.startUpHook = startupHookList63;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig41.populate(atmosphereConfig54);
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig65.properties();
        atmosphereConfig39.properties = strMap66;
        atmosphereConfig24.setproperties(strMap66);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertNull(atmosphereFramework59);
        org.junit.Assert.assertNull(atmosphereFramework62);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(strMap66);
    }

    @Test
    public void test02103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02103");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.shutdownHooks;
        boolean boolean13 = atmosphereConfig10.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig10.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig10);
        atmosphereConfig10.destroy();
        boolean boolean17 = atmosphereConfig10.getuseServletContextParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration18 = atmosphereConfig10.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test02104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02104");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray10 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList11, atmosphereHandlerConfigArray10);
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList11;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.startupHook(startupHook14);
        boolean boolean16 = atmosphereConfig8.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig8.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList17;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean21 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test02105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02105");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig4.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig4.startupHook(startupHook7);
        java.lang.String str10 = atmosphereConfig8.getInitParameter("");
        boolean boolean11 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.shutdownHooks;
        boolean boolean15 = atmosphereConfig12.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig12.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        atmosphereConfig17.setproperties(strMap18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig12.populate(atmosphereConfig17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig21.shutdownHooks;
        boolean boolean24 = atmosphereConfig21.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig26.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig21.populate(atmosphereConfig26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig26.getstartUpHook();
        atmosphereConfig20.startUpHook = startupHookList30;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig20.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig33.getframework();
        org.slf4j.Logger logger36 = atmosphereConfig33.getlogger();
        java.lang.String str38 = atmosphereConfig33.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig33.framework();
        atmosphereConfig33.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig20.populate(atmosphereConfig33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList43;
        java.lang.String str46 = atmosphereConfig8.getInitParameter("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration47 = atmosphereConfig8.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test02106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02106");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.useServletContextParameters = true;
        java.lang.String str8 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean9 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean12 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean13 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
    }

    @Test
    public void test02107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02107");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        atmosphereConfig7.setproperties(strMap8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList11, shutdownHookArray10);
        atmosphereConfig7.shutdownHooks = shutdownHookList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = null;
        atmosphereConfig14.setshutdownHooks(shutdownHookList16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig7.populate(atmosphereConfig14);
        org.slf4j.Logger logger19 = atmosphereConfig7.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig20.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.startupHook(startupHook26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig20.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig20.getproperties();
        atmosphereConfig7.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.populate(atmosphereConfig7);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig0.properties;
        java.lang.String str36 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig0.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory38 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(shutdownHookList37);
    }

    @Test
    public void test02108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02108");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        boolean boolean10 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean11 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig8.properties();
        atmosphereConfig8.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig15.framework = atmosphereFramework16;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        boolean boolean20 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
    }

    @Test
    public void test02109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02109");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.shutdownHooks;
        boolean boolean13 = atmosphereConfig10.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig10.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        atmosphereConfig15.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig10.populate(atmosphereConfig15);
        org.slf4j.Logger logger19 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        atmosphereConfig20.setproperties(strMap21);
        boolean boolean23 = atmosphereConfig20.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig20.getstartUpHook();
        atmosphereConfig18.startUpHook = startupHookList24;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig18.framework = atmosphereFramework26;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig18.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig30.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = null;
        atmosphereConfig30.setshutdownHooks(shutdownHookList32);
        boolean boolean34 = atmosphereConfig30.useServletContextParameters;
        atmosphereConfig30.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.properties;
        atmosphereConfig18.setproperties(strMap37);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig18.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig0.populate(atmosphereConfig18);
        boolean boolean43 = atmosphereConfig0.useServletContextParameters;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.startUpHook;
        boolean boolean47 = atmosphereConfig45.sessionTimeoutRemovalAllowed;
        boolean boolean48 = atmosphereConfig45.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig45.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig45.startupHook(startupHook50);
        boolean boolean52 = atmosphereConfig51.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig54.startUpHook;
        atmosphereConfig54.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray58 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList59, atmosphereHandlerConfigArray58);
        atmosphereConfig54.atmosphereHandlerConfig = atmosphereHandlerConfigList59;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig53.populate(atmosphereConfig54);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig53.getstartUpHook();
        atmosphereConfig51.startUpHook = startupHookList63;
        atmosphereConfig0.startUpHook = startupHookList63;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig66 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(startupHookList63);
    }

    @Test
    public void test02110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02110");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray4 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList5, atmosphereHandlerConfigArray4);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean9 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.supportSession = false;
        java.lang.String str13 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.setuseServletContextParameters(true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test02111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02111");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig7.getstartUpHook();
        boolean boolean13 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig7.setframework(atmosphereFramework14);
        boolean boolean16 = atmosphereConfig7.useServletContextParameters;
        atmosphereConfig7.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        atmosphereConfig19.setproperties(strMap20);
        boolean boolean22 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig19.getproperties();
        boolean boolean24 = atmosphereConfig19.isSupportSession();
        atmosphereConfig19.setThrowExceptionOnCloned(true);
        boolean boolean27 = atmosphereConfig19.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig19.startupHook(startupHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.atmosphereHandlerConfig;
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        boolean boolean32 = atmosphereConfig7.getuseServletContextParameters();
        atmosphereConfig7.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test02112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02112");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.useServletContextParameters = false;
        boolean boolean9 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean10 = atmosphereConfig0.supportSession;
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            atmosphereConfig0.destroy();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test02113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02113");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean7 = atmosphereConfig0.isSupportSession();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test02114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02114");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.lang.String str4 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        atmosphereConfig7.setproperties(strMap8);
        boolean boolean10 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig7.getstartUpHook();
        atmosphereConfig7.supportSession = false;
        boolean boolean14 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        atmosphereConfig7.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.populate(atmosphereConfig7);
        atmosphereConfig16.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
    }

    @Test
    public void test02115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02115");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean5 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig6.startUpHook;
        boolean boolean8 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig6.properties();
        atmosphereConfig6.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig6.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.populate(atmosphereConfig6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig15.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig15.setframework(atmosphereFramework18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig15.getframework();
        java.lang.String str23 = atmosphereConfig15.getInitParameter("hi!", "hi!");
        atmosphereConfig15.initComplete();
        boolean boolean25 = atmosphereConfig15.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig15.getproperties();
        atmosphereConfig6.setproperties(strMap26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig6.setframework(atmosphereFramework28);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test02116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02116");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        boolean boolean12 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        boolean boolean13 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig10.properties();
        atmosphereConfig10.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig10.startupHook(startupHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.properties();
        atmosphereConfig9.properties = strMap18;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig9.framework();
        boolean boolean21 = atmosphereConfig9.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig9.getproperties();
        boolean boolean23 = atmosphereConfig9.useServletContextParameters;
        atmosphereConfig9.initComplete();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig25 = atmosphereConfig9.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test02117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02117");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        int int5 = atmosphereConfig0.getInitParameter("hi!", 1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory8 = atmosphereConfig7.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
    }

    @Test
    public void test02118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02118");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.slf4j.Logger logger9 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig10.setproperties(strMap11);
        boolean boolean13 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig8.startUpHook = startupHookList14;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig8.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig8.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.setshutdownHooks(shutdownHookList22);
        boolean boolean24 = atmosphereConfig20.useServletContextParameters;
        atmosphereConfig20.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.properties;
        atmosphereConfig8.setproperties(strMap27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig8.getshutdownHooks();
        boolean boolean30 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig8.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        atmosphereConfig33.setproperties(strMap34);
        boolean boolean36 = atmosphereConfig33.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig33.getstartUpHook();
        atmosphereConfig33.supportSession = false;
        boolean boolean40 = atmosphereConfig33.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        atmosphereConfig42.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray46 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList47, atmosphereHandlerConfigArray46);
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig41.populate(atmosphereConfig42);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig41.getAtmosphereHandlerConfig();
        boolean boolean52 = atmosphereConfig41.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = atmosphereConfig41.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig33.populate(atmosphereConfig41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = atmosphereConfig55.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig55.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig55.shutdownHook(shutdownHook58);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig59.startupHook(startupHook60);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig59.atmosphereHandlerConfig;
        atmosphereConfig33.atmosphereHandlerConfig = atmosphereHandlerConfigList63;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig33.shutdownHook(shutdownHook65);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig8.populate(atmosphereConfig66);
        atmosphereConfig66.sessionTimeoutRemovalAllowed = false;
        int int72 = atmosphereConfig66.getInitParameter("hi!", (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration73 = atmosphereConfig66.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(atmosphereFramework53);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(startupHookList56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test02119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02119");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList13, startupHookArray12);
        atmosphereConfig11.startUpHook = startupHookList13;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig11.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig11.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig11.startUpHook;
        java.lang.String str20 = atmosphereConfig11.getInitParameter("hi!");
        boolean boolean21 = atmosphereConfig11.isSupportSession();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider22 = atmosphereConfig11.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test02120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02120");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray5 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList6, shutdownHookArray5);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList6);
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig13.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig13.setframework(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig13.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig13.startupHook(startupHook19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig13.properties();
        atmosphereConfig0.properties = strMap21;
        boolean boolean23 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.useServletContextParameters = true;
        atmosphereConfig0.destroy();
        java.lang.Class<?> wildcardClass27 = atmosphereConfig0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test02121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02121");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.slf4j.Logger logger9 = atmosphereConfig8.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig11.shutdownHooks;
        boolean boolean14 = atmosphereConfig11.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig11.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        atmosphereConfig16.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig11.populate(atmosphereConfig16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig8.populate(atmosphereConfig16);
        java.lang.String str23 = atmosphereConfig8.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig8.properties;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig26 = atmosphereConfig8.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNull(strMap25);
    }

    @Test
    public void test02122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02122");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig4.setThrowExceptionOnCloned(true);
        boolean boolean7 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean8 = atmosphereConfig4.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        atmosphereConfig9.setproperties(strMap10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList13, shutdownHookArray12);
        atmosphereConfig9.shutdownHooks = shutdownHookList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = null;
        atmosphereConfig16.setshutdownHooks(shutdownHookList18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig9.populate(atmosphereConfig16);
        boolean boolean21 = atmosphereConfig20.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig20.startUpHook;
        atmosphereConfig20.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig20.setuseServletContextParameters(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.getproperties();
        atmosphereConfig4.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig4.getframework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory30 = atmosphereConfig4.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(atmosphereFramework29);
    }

    @Test
    public void test02123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02123");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test02124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02124");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        boolean boolean29 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig7.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        atmosphereConfig32.setproperties(strMap33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        atmosphereConfig31.shutdownHooks = shutdownHookList36;
        atmosphereConfig31.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig31.initComplete();
        boolean boolean43 = atmosphereConfig31.useServletContextParameters;
        atmosphereConfig31.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test02125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02125");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean8 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.atmosphereHandlerConfig;
        boolean boolean12 = atmosphereConfig10.isSupportSession();
        boolean boolean13 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig14 = atmosphereConfig10.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test02126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02126");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.useServletContextParameters;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties;
        atmosphereConfig7.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.getproperties();
        java.lang.String str17 = atmosphereConfig12.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig12.getAtmosphereHandlerConfig();
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory20 = atmosphereConfig7.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
    }

    @Test
    public void test02127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02127");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.slf4j.Logger logger9 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig10.setproperties(strMap11);
        boolean boolean13 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig8.startUpHook = startupHookList14;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig8.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig8.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.setshutdownHooks(shutdownHookList22);
        boolean boolean24 = atmosphereConfig20.useServletContextParameters;
        atmosphereConfig20.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.properties;
        atmosphereConfig8.setproperties(strMap27);
        boolean boolean31 = atmosphereConfig8.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = null;
        atmosphereConfig32.setshutdownHooks(shutdownHookList34);
        boolean boolean36 = atmosphereConfig32.useServletContextParameters;
        atmosphereConfig32.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig32.properties;
        atmosphereConfig8.properties = strMap39;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig8.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig8.properties;
        boolean boolean43 = atmosphereConfig8.useServletContextParameters;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test02128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02128");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        int int3 = atmosphereConfig0.getInitParameter("", (int) 'a');
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        boolean boolean8 = atmosphereConfig5.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig5.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig5.setframework(atmosphereFramework10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig5.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig5.startupHook(startupHook13);
        boolean boolean15 = atmosphereConfig5.sessionTimeoutRemovalAllowed;
        java.lang.String str18 = atmosphereConfig5.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig5.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig20.framework = atmosphereFramework21;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig20.framework;
        boolean boolean24 = atmosphereConfig20.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 97 + "'", int3 == 97);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test02129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02129");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.useServletContextParameters = true;
        java.lang.String str8 = atmosphereConfig0.getInitParameter("hi!");
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig11.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig15.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.startupHook(startupHook18);
        java.lang.String str21 = atmosphereConfig19.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = null;
        atmosphereConfig24.setshutdownHooks(shutdownHookList26);
        boolean boolean28 = atmosphereConfig24.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig24.getframework();
        atmosphereConfig24.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig24.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33);
        atmosphereConfig19.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig19.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        atmosphereConfig38.framework = atmosphereFramework39;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        boolean boolean43 = atmosphereConfig41.sessionTimeoutRemovalAllowed;
        boolean boolean44 = atmosphereConfig41.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig41.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        atmosphereConfig41.framework = atmosphereFramework46;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig41.startupHook(startupHook48);
        boolean boolean50 = atmosphereConfig49.sessionTimeoutRemovalAllowed;
        boolean boolean51 = atmosphereConfig49.getuseServletContextParameters();
        atmosphereConfig49.useServletContextParameters = false;
        boolean boolean54 = atmosphereConfig49.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig49.properties();
        atmosphereConfig38.setproperties(strMap55);
        atmosphereConfig0.setproperties(strMap55);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster58 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test02130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02130");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        boolean boolean9 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig7.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig7.framework = atmosphereFramework12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig7.startupHook(startupHook14);
        boolean boolean16 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig15.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        atmosphereConfig18.setproperties(strMap19);
        boolean boolean21 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig18.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig18.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24);
        boolean boolean29 = atmosphereConfig18.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig18.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        atmosphereConfig31.setproperties(strMap32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray34 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList35, shutdownHookArray34);
        atmosphereConfig31.shutdownHooks = shutdownHookList35;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = null;
        atmosphereConfig38.setshutdownHooks(shutdownHookList40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig31.populate(atmosphereConfig38);
        java.lang.String str45 = atmosphereConfig42.getInitParameter("", "");
        boolean boolean46 = atmosphereConfig42.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = null;
        atmosphereConfig47.setproperties(strMap48);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51, shutdownHookArray50);
        atmosphereConfig47.shutdownHooks = shutdownHookList51;
        atmosphereConfig42.shutdownHooks = shutdownHookList51;
        atmosphereConfig18.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51);
        atmosphereConfig15.shutdownHooks = shutdownHookList51;
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51);
        org.slf4j.Logger logger58 = atmosphereConfig0.getlogger();
        boolean boolean59 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig60.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = atmosphereConfig60.shutdownHooks;
        atmosphereConfig60.setSessionTimeoutRemovalAllowed(false);
        boolean boolean65 = atmosphereConfig60.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig66.startUpHook;
        boolean boolean68 = atmosphereConfig66.sessionTimeoutRemovalAllowed;
        boolean boolean69 = atmosphereConfig66.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig66.properties();
        atmosphereConfig66.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig66.startupHook(startupHook72);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig60.populate(atmosphereConfig66);
        atmosphereConfig74.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework77 = null;
        atmosphereConfig74.framework = atmosphereFramework77;
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig74.getproperties();
        boolean boolean82 = atmosphereConfig74.getInitParameter("", true);
        boolean boolean83 = atmosphereConfig74.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = atmosphereConfig74.getproperties();
        atmosphereConfig0.setproperties(strMap84);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(shutdownHookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(logger58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertNotNull(shutdownHookList62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(startupHookList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strMap84);
    }

    @Test
    public void test02131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02131");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        boolean boolean9 = atmosphereConfig8.isSupportSession();
        atmosphereConfig8.initComplete();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory11 = atmosphereConfig8.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02132");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.framework = atmosphereFramework4;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory14 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
    }

    @Test
    public void test02133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02133");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext7 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test02134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02134");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        boolean boolean12 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        boolean boolean13 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig10.properties();
        atmosphereConfig10.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig10.startupHook(startupHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.properties();
        atmosphereConfig9.properties = strMap18;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig9.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig21.shutdownHooks;
        boolean boolean24 = atmosphereConfig21.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig26.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig21.populate(atmosphereConfig26);
        boolean boolean30 = atmosphereConfig29.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        boolean boolean33 = atmosphereConfig31.sessionTimeoutRemovalAllowed;
        boolean boolean34 = atmosphereConfig31.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig31.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        atmosphereConfig36.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray39 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList40, shutdownHookArray39);
        atmosphereConfig36.shutdownHooks = shutdownHookList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig43.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = null;
        atmosphereConfig43.setshutdownHooks(shutdownHookList45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig36.populate(atmosphereConfig43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig36.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig36.getproperties();
        atmosphereConfig31.setproperties(strMap49);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig31.setframework(atmosphereFramework51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig29.populate(atmosphereConfig31);
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray54 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList55, atmosphereHandlerConfigArray54);
        atmosphereConfig31.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        atmosphereConfig9.setSessionTimeoutRemovalAllowed(true);
        java.lang.Class<?> wildcardClass61 = atmosphereConfig9.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(shutdownHookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(startupHookList44);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test02135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02135");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean7 = atmosphereConfig0.useServletContextParameters;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster8 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test02136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02136");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        atmosphereConfig0.setuseServletContextParameters(true);
        int int7 = atmosphereConfig0.getInitParameter("", (int) (short) 10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.setframework(atmosphereFramework8);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
    }

    @Test
    public void test02137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02137");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        atmosphereConfig28.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.shutdownHooks;
        atmosphereConfig28.setshutdownHooks(shutdownHookList33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig28.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig36.shutdownHooks;
        boolean boolean39 = atmosphereConfig36.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig36.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = null;
        atmosphereConfig41.setproperties(strMap42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig36.populate(atmosphereConfig41);
        org.slf4j.Logger logger45 = atmosphereConfig44.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig44.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig47.shutdownHooks;
        boolean boolean50 = atmosphereConfig47.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig47.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        atmosphereConfig52.setproperties(strMap53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig47.populate(atmosphereConfig52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig44.populate(atmosphereConfig52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig28.populate(atmosphereConfig52);
        // The following exception was thrown during execution in test generation
        try {
            atmosphereConfig52.destroy();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(shutdownHookList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(logger45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
    }

    @Test
    public void test02138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02138");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig8.getuseServletContextParameters();
        atmosphereConfig8.useServletContextParameters = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig8.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.shutdownHook(shutdownHook14);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext16 = atmosphereConfig15.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
    }

    @Test
    public void test02139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02139");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.slf4j.Logger logger12 = atmosphereConfig0.getlogger();
        boolean boolean13 = atmosphereConfig0.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str17 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig0.setframework(atmosphereFramework18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.setshutdownHooks(shutdownHookList22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig20.setframework(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.startupHook(startupHook26);
        boolean boolean28 = atmosphereConfig27.getuseServletContextParameters();
        atmosphereConfig27.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig27.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        atmosphereConfig32.setproperties(strMap33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = null;
        atmosphereConfig39.setshutdownHooks(shutdownHookList41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig32.populate(atmosphereConfig39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = atmosphereConfig32.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig32.getproperties();
        atmosphereConfig27.properties = strMap45;
        atmosphereConfig0.properties = strMap45;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig0.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration49 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(shutdownHookList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNull(atmosphereFramework44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
    }

    @Test
    public void test02140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02140");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig1.startUpHook;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray5 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList6, atmosphereHandlerConfigArray5);
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig1);
        boolean boolean10 = atmosphereConfig1.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig1.shutdownHooks = shutdownHookList12;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig1.properties();
        boolean boolean16 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean17 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test02141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02141");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        atmosphereConfig7.setproperties(strMap8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList11, shutdownHookArray10);
        atmosphereConfig7.shutdownHooks = shutdownHookList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = null;
        atmosphereConfig14.setshutdownHooks(shutdownHookList16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig7.populate(atmosphereConfig14);
        org.slf4j.Logger logger19 = atmosphereConfig7.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig20.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.startupHook(startupHook26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig20.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig20.getproperties();
        atmosphereConfig7.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.populate(atmosphereConfig7);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig0.properties;
        java.lang.String str36 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean37 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(atmosphereFramework38);
    }

    @Test
    public void test02142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02142");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.lang.String str8 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        atmosphereConfig0.initComplete();
        boolean boolean10 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean13 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig14.shutdownHooks;
        boolean boolean17 = atmosphereConfig14.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig14.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        atmosphereConfig19.setproperties(strMap20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig14.populate(atmosphereConfig19);
        boolean boolean23 = atmosphereConfig22.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        boolean boolean26 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        boolean boolean27 = atmosphereConfig24.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig24.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        atmosphereConfig29.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig29.shutdownHooks = shutdownHookList33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = null;
        atmosphereConfig36.setshutdownHooks(shutdownHookList38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig29.populate(atmosphereConfig36);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig29.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig29.getproperties();
        atmosphereConfig24.setproperties(strMap42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig24.setframework(atmosphereFramework44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig22.populate(atmosphereConfig24);
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray47 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList48, atmosphereHandlerConfigArray47);
        atmosphereConfig24.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        boolean boolean51 = atmosphereConfig24.getuseServletContextParameters();
        atmosphereConfig24.useServletContextParameters = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig24.properties();
        atmosphereConfig0.setproperties(strMap54);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMap54);
    }

    @Test
    public void test02143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02143");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig0.supportSession;
        boolean boolean9 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.shutdownHook(shutdownHook10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02144");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig8.getuseServletContextParameters();
        atmosphereConfig8.useServletContextParameters = false;
        boolean boolean13 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig8.framework;
        atmosphereConfig8.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig8.properties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster19 = atmosphereConfig8.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test02145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02145");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        boolean boolean10 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean11 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig8.properties();
        atmosphereConfig8.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig15.framework = atmosphereFramework16;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        atmosphereConfig0.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        atmosphereConfig22.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig22.shutdownHooks = shutdownHookList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = null;
        atmosphereConfig29.setshutdownHooks(shutdownHookList31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig22.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray34 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList35, startupHookArray34);
        atmosphereConfig33.startUpHook = startupHookList35;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig33.startUpHook;
        boolean boolean39 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig0.populate(atmosphereConfig33);
        atmosphereConfig40.setuseServletContextParameters(false);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory43 = atmosphereConfig40.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(startupHookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
    }

    @Test
    public void test02146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02146");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        atmosphereConfig11.setproperties(strMap12);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray14 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList15, shutdownHookArray14);
        atmosphereConfig11.shutdownHooks = shutdownHookList15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = null;
        atmosphereConfig18.setshutdownHooks(shutdownHookList20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig11.populate(atmosphereConfig18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig18.getstartUpHook();
        boolean boolean24 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig18.setframework(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.populate(atmosphereConfig18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        boolean boolean30 = atmosphereConfig28.sessionTimeoutRemovalAllowed;
        boolean boolean31 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig28.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig28.framework = atmosphereFramework33;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig28.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig28.startupHook(startupHook37);
        boolean boolean39 = atmosphereConfig28.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig28.framework = atmosphereFramework40;
        atmosphereConfig28.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig28.atmosphereHandlerConfig;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList43;
        int int47 = atmosphereConfig18.getInitParameter("", (int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(shutdownHookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
    }

    @Test
    public void test02147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02147");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig11.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig11.getframework();
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig11.setSupportSession(true);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig19 = atmosphereConfig11.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNull(atmosphereFramework14);
    }

    @Test
    public void test02148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02148");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.shutdownHooks;
        boolean boolean12 = atmosphereConfig9.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig9.populate(atmosphereConfig14);
        boolean boolean18 = atmosphereConfig17.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster23 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
    }

    @Test
    public void test02149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02149");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        boolean boolean9 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig7.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig7.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig13.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig16.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig16.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig16.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig16.startUpHook;
        atmosphereConfig13.startUpHook = startupHookList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig0.populate(atmosphereConfig13);
        atmosphereConfig0.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        boolean boolean32 = atmosphereConfig27.supportSession;
        boolean boolean33 = atmosphereConfig27.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        atmosphereConfig34.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray37 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList38, shutdownHookArray37);
        atmosphereConfig34.shutdownHooks = shutdownHookList38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = null;
        atmosphereConfig41.setshutdownHooks(shutdownHookList43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig34.populate(atmosphereConfig41);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig41.getstartUpHook();
        atmosphereConfig27.startUpHook = startupHookList46;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig27.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = null;
        atmosphereConfig49.setproperties(strMap50);
        boolean boolean52 = atmosphereConfig49.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig49.getproperties();
        org.slf4j.Logger logger54 = atmosphereConfig49.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig49.shutdownHook(shutdownHook55);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig27.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = atmosphereConfig59.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig59.shutdownHook(shutdownHook62);
        boolean boolean64 = atmosphereConfig63.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig63.properties();
        atmosphereConfig27.setproperties(strMap65);
        atmosphereConfig0.setproperties(strMap65);
        atmosphereConfig0.throwExceptionOnCloned = true;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList73 = atmosphereConfig72.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework74 = atmosphereConfig72.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig72.startupHook(startupHook75);
        java.lang.String str78 = atmosphereConfig72.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig72.getproperties();
        atmosphereConfig72.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = atmosphereConfig72.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList83 = atmosphereConfig82.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList84 = null;
        atmosphereConfig82.setshutdownHooks(shutdownHookList84);
        boolean boolean86 = atmosphereConfig82.useServletContextParameters;
        atmosphereConfig82.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = atmosphereConfig82.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework90 = null;
        atmosphereConfig82.framework = atmosphereFramework90;
        java.util.Map<java.lang.String, java.lang.Object> strMap92 = atmosphereConfig82.properties;
        atmosphereConfig72.properties = strMap92;
        atmosphereConfig0.setproperties(strMap92);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(logger54);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(shutdownHookList61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(startupHookList73);
        org.junit.Assert.assertNull(atmosphereFramework74);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(startupHookList83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(strMap92);
    }

    @Test
    public void test02150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02150");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("");
        boolean boolean10 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory11 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test02151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02151");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = null;
        atmosphereConfig4.setshutdownHooks(shutdownHookList6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig4.setframework(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.startupHook(startupHook10);
        boolean boolean12 = atmosphereConfig11.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.getproperties();
        atmosphereConfig0.properties = strMap13;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig0.properties();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test02152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02152");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        boolean boolean10 = atmosphereConfig0.getInitParameter("hi!", false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.properties;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory14 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test02153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02153");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        atmosphereConfig28.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig28.getproperties();
        boolean boolean32 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        atmosphereConfig28.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig35.shutdownHooks;
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(false);
        boolean boolean40 = atmosphereConfig35.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        boolean boolean43 = atmosphereConfig41.sessionTimeoutRemovalAllowed;
        boolean boolean44 = atmosphereConfig41.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig41.properties();
        atmosphereConfig41.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig41.startupHook(startupHook47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig35.populate(atmosphereConfig41);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig49.properties();
        java.lang.String str52 = atmosphereConfig49.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig53.shutdownHooks;
        boolean boolean56 = atmosphereConfig53.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig53.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = atmosphereConfig53.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig59.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = null;
        atmosphereConfig59.setframework(atmosphereFramework62);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = atmosphereConfig59.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig59.startUpHook;
        atmosphereConfig53.setstartUpHook(startupHookList65);
        atmosphereConfig49.setstartUpHook(startupHookList65);
        atmosphereConfig28.startUpHook = startupHookList65;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList70 = atmosphereConfig69.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = atmosphereConfig69.getframework();
        org.slf4j.Logger logger72 = atmosphereConfig69.getlogger();
        java.lang.String str74 = atmosphereConfig69.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList76 = atmosphereConfig75.startUpHook;
        boolean boolean77 = atmosphereConfig75.sessionTimeoutRemovalAllowed;
        boolean boolean78 = atmosphereConfig75.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig75.properties();
        atmosphereConfig75.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook81 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig75.startupHook(startupHook81);
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = atmosphereConfig82.properties();
        atmosphereConfig69.properties = strMap83;
        atmosphereConfig28.setproperties(strMap83);
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = atmosphereConfig28.properties;
        boolean boolean89 = atmosphereConfig28.getInitParameter("hi!", true);
        boolean boolean90 = atmosphereConfig28.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(shutdownHookList58);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNull(atmosphereFramework61);
        org.junit.Assert.assertNull(atmosphereFramework64);
        org.junit.Assert.assertNotNull(startupHookList65);
        org.junit.Assert.assertNotNull(startupHookList70);
        org.junit.Assert.assertNull(atmosphereFramework71);
        org.junit.Assert.assertNotNull(logger72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(startupHookList76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test02154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02154");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        atmosphereConfig0.setuseServletContextParameters(false);
        boolean boolean11 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        boolean boolean25 = atmosphereConfig12.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig0.populate(atmosphereConfig12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig26.shutdownHooks;
        boolean boolean28 = atmosphereConfig26.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNull(shutdownHookList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test02155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02155");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.useServletContextParameters = true;
        java.lang.String str8 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean9 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean10 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean13 = atmosphereConfig0.getInitParameter("", false);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        atmosphereConfig15.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray19 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList20, atmosphereHandlerConfigArray19);
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList20;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig15.getAtmosphereHandlerConfig();
        java.lang.String str26 = atmosphereConfig15.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        atmosphereConfig31.setThrowExceptionOnCloned(true);
        boolean boolean34 = atmosphereConfig31.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig31.setframework(atmosphereFramework35);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig31.getshutdownHooks();
        atmosphereConfig15.setshutdownHooks(shutdownHookList37);
        atmosphereConfig0.setshutdownHooks(shutdownHookList37);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig0.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap41 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
    }

    @Test
    public void test02156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02156");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray5 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList6, shutdownHookArray5);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList6);
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig13.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig13.setframework(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig13.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig13.startupHook(startupHook19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig13.properties();
        atmosphereConfig0.properties = strMap21;
        boolean boolean23 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig26.setproperties(strMap27);
        boolean boolean29 = atmosphereConfig26.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig26.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig26.setframework(atmosphereFramework31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig26.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig26.startupHook(startupHook34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig35.getframework();
        atmosphereConfig35.useServletContextParameters = false;
        boolean boolean41 = atmosphereConfig35.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig0.populate(atmosphereConfig35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig43.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = null;
        atmosphereConfig43.setshutdownHooks(shutdownHookList45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        atmosphereConfig43.setframework(atmosphereFramework47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig43.startupHook(startupHook49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig51.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = null;
        atmosphereConfig51.setshutdownHooks(shutdownHookList53);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig51.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = null;
        atmosphereConfig56.setproperties(strMap57);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray59 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList60, shutdownHookArray59);
        atmosphereConfig56.shutdownHooks = shutdownHookList60;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig56.startupHook(startupHook63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = null;
        atmosphereConfig65.setproperties(strMap66);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray68 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList69, shutdownHookArray68);
        atmosphereConfig65.shutdownHooks = shutdownHookList69;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList73 = atmosphereConfig72.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList74 = null;
        atmosphereConfig72.setshutdownHooks(shutdownHookList74);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig65.populate(atmosphereConfig72);
        java.lang.String str79 = atmosphereConfig76.getInitParameter("", "");
        boolean boolean80 = atmosphereConfig76.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = null;
        atmosphereConfig81.setproperties(strMap82);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray84 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList85 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList85, shutdownHookArray84);
        atmosphereConfig81.shutdownHooks = shutdownHookList85;
        atmosphereConfig76.shutdownHooks = shutdownHookList85;
        atmosphereConfig64.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList85);
        atmosphereConfig51.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList85);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList91 = atmosphereConfig51.atmosphereHandlerConfig;
        atmosphereConfig50.atmosphereHandlerConfig = atmosphereHandlerConfigList91;
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList91;
        atmosphereConfig42.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(startupHookList44);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertNull(shutdownHookList55);
        org.junit.Assert.assertNotNull(shutdownHookArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(shutdownHookArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(startupHookList73);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList91);
    }

    @Test
    public void test02157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02157");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.lang.String str8 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        boolean boolean9 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean10 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test02158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02158");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray4 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList5, atmosphereHandlerConfigArray4);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties;
        atmosphereConfig0.setuseServletContextParameters(true);
        boolean boolean13 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test02159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02159");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.useServletContextParameters = true;
        java.lang.String str8 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean9 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean10 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = null;
        atmosphereConfig0.setstartUpHook(startupHookList14);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test02160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02160");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        atmosphereConfig28.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.shutdownHooks;
        atmosphereConfig28.setshutdownHooks(shutdownHookList33);
        boolean boolean35 = atmosphereConfig28.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig28.getproperties();
        boolean boolean37 = atmosphereConfig28.isSupportSession();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test02161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02161");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties;
        atmosphereConfig0.initComplete();
        boolean boolean9 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02162");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig11.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig11.setframework(atmosphereFramework14);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig11.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig17.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig17.setframework(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig17.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig17.startUpHook;
        atmosphereConfig17.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig17.shutdownHook(shutdownHook25);
        java.lang.String str29 = atmosphereConfig17.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig11.populate(atmosphereConfig17);
        boolean boolean31 = atmosphereConfig17.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        atmosphereConfig17.setproperties(strMap32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig17.framework;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(atmosphereFramework34);
    }

    @Test
    public void test02163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02163");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig0.setproperties(strMap9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.lang.String str15 = atmosphereConfig11.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig11.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig11.framework = atmosphereFramework17;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList19;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.shutdownHook(shutdownHook21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig22.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        atmosphereConfig24.setproperties(strMap25);
        boolean boolean27 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig24.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig24.setframework(atmosphereFramework29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig24.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = null;
        atmosphereConfig24.framework = atmosphereFramework32;
        atmosphereConfig24.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig24.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig24.shutdownHooks;
        atmosphereConfig22.setshutdownHooks(shutdownHookList36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = atmosphereConfig22.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
    }

    @Test
    public void test02164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02164");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        boolean boolean11 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        boolean boolean12 = atmosphereConfig9.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig9.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig9.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig9.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig7.populate(atmosphereConfig9);
        atmosphereConfig7.initComplete();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
    }

    @Test
    public void test02165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02165");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean4 = atmosphereConfig0.supportSession;
        boolean boolean5 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig8.setproperties(strMap9);
        boolean boolean11 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig8.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray13 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList14, shutdownHookArray13);
        atmosphereConfig8.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList14);
        boolean boolean17 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig8.getshutdownHooks();
        atmosphereConfig7.setshutdownHooks(shutdownHookList18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig7.properties();
        java.lang.String str22 = atmosphereConfig7.getInitParameter("hi!");
        boolean boolean23 = atmosphereConfig7.useServletContextParameters;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(shutdownHookArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test02166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02166");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.setframework(atmosphereFramework9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig8.getproperties();
        boolean boolean12 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig8.properties;
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig8.framework = atmosphereFramework16;
        boolean boolean18 = atmosphereConfig8.supportSession;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test02167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02167");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig8.getuseServletContextParameters();
        atmosphereConfig8.useServletContextParameters = false;
        boolean boolean13 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig8.framework;
        int int18 = atmosphereConfig8.getInitParameter("", 97);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig8.getproperties();
        java.lang.String str21 = atmosphereConfig8.getInitParameter("");
        atmosphereConfig8.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig8.framework();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(atmosphereFramework23);
    }

    @Test
    public void test02168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02168");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList13, startupHookArray12);
        atmosphereConfig11.startUpHook = startupHookList13;
        atmosphereConfig11.sessionTimeoutRemovalAllowed = true;
        boolean boolean18 = atmosphereConfig11.throwExceptionOnCloned;
        boolean boolean19 = atmosphereConfig11.useServletContextParameters;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test02169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02169");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.slf4j.Logger logger9 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig10.setproperties(strMap11);
        boolean boolean13 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig8.startUpHook = startupHookList14;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig8.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig8.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.setshutdownHooks(shutdownHookList22);
        boolean boolean24 = atmosphereConfig20.useServletContextParameters;
        atmosphereConfig20.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.properties;
        atmosphereConfig8.setproperties(strMap27);
        boolean boolean29 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        boolean boolean30 = atmosphereConfig8.isThrowExceptionOnCloned();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory31 = atmosphereConfig8.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test02170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02170");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.supportSession;
        boolean boolean6 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        atmosphereConfig7.setproperties(strMap8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList11, shutdownHookArray10);
        atmosphereConfig7.shutdownHooks = shutdownHookList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = null;
        atmosphereConfig14.setshutdownHooks(shutdownHookList16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig7.populate(atmosphereConfig14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig14.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList19;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig0.getframework();
        boolean boolean23 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        atmosphereConfig24.setproperties(strMap25);
        boolean boolean27 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig24.getproperties();
        atmosphereConfig24.initComplete();
        atmosphereConfig24.setSessionTimeoutRemovalAllowed(true);
        boolean boolean34 = atmosphereConfig24.getInitParameter("hi!", false);
        atmosphereConfig24.setuseServletContextParameters(true);
        atmosphereConfig24.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        atmosphereConfig24.setframework(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = null;
        atmosphereConfig41.setshutdownHooks(shutdownHookList43);
        boolean boolean45 = atmosphereConfig41.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig41.getframework();
        atmosphereConfig41.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig49.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig49.shutdownHooks;
        atmosphereConfig49.setSessionTimeoutRemovalAllowed(false);
        boolean boolean54 = atmosphereConfig49.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig49.startUpHook;
        atmosphereConfig41.startUpHook = startupHookList55;
        atmosphereConfig24.startUpHook = startupHookList55;
        atmosphereConfig0.setstartUpHook(startupHookList55);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(startupHookList55);
    }

    @Test
    public void test02171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02171");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig7.getstartUpHook();
        boolean boolean13 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig7.setframework(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig7.setframework(atmosphereFramework16);
        boolean boolean18 = atmosphereConfig7.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        boolean boolean23 = atmosphereConfig19.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig19.getframework();
        atmosphereConfig19.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig19.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.populate(atmosphereConfig19);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig29 = atmosphereConfig28.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
    }

    @Test
    public void test02172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02172");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.getuseServletContextParameters();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig7.properties();
        boolean boolean9 = atmosphereConfig7.throwExceptionOnCloned;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext10 = atmosphereConfig7.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02173");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean5 = atmosphereConfig0.useServletContextParameters;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        int int9 = atmosphereConfig0.getInitParameter("", (int) (short) 10);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    }

    @Test
    public void test02174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02174");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration7 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
    }

    @Test
    public void test02175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02175");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.setframework(atmosphereFramework9);
        java.lang.String str13 = atmosphereConfig8.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig8.getframework();
        atmosphereConfig8.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig8.setSupportSession(true);
        // The following exception was thrown during execution in test generation
        try {
            atmosphereConfig8.destroy();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(atmosphereFramework14);
    }

    @Test
    public void test02176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02176");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.lang.String str14 = atmosphereConfig11.getInitParameter("", "");
        boolean boolean15 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        atmosphereConfig16.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        atmosphereConfig11.shutdownHooks = shutdownHookList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        atmosphereConfig24.setproperties(strMap25);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = null;
        atmosphereConfig31.setshutdownHooks(shutdownHookList33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig24.populate(atmosphereConfig31);
        boolean boolean36 = atmosphereConfig35.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig35.startUpHook;
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = null;
        atmosphereConfig40.setproperties(strMap41);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig40.shutdownHooks = shutdownHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = null;
        atmosphereConfig47.setshutdownHooks(shutdownHookList49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig40.populate(atmosphereConfig47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        atmosphereConfig52.setproperties(strMap53);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray55 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList56, shutdownHookArray55);
        atmosphereConfig52.shutdownHooks = shutdownHookList56;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = null;
        atmosphereConfig59.setshutdownHooks(shutdownHookList61);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig52.populate(atmosphereConfig59);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = atmosphereConfig52.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig52.getproperties();
        atmosphereConfig47.properties = strMap65;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig47.startupHook(startupHook67);
        atmosphereConfig68.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = atmosphereConfig71.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = atmosphereConfig71.shutdownHooks;
        atmosphereConfig68.setshutdownHooks(shutdownHookList73);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList75 = atmosphereConfig68.shutdownHooks;
        atmosphereConfig35.shutdownHooks = shutdownHookList75;
        atmosphereConfig11.shutdownHooks = shutdownHookList75;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList78 = atmosphereConfig11.startUpHook;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(shutdownHookArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNull(atmosphereFramework64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(startupHookList72);
        org.junit.Assert.assertNotNull(shutdownHookList73);
        org.junit.Assert.assertNotNull(shutdownHookList75);
        org.junit.Assert.assertNotNull(startupHookList78);
    }

    @Test
    public void test02177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02177");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        boolean boolean10 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean11 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig8.properties();
        atmosphereConfig8.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig15.framework = atmosphereFramework16;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        atmosphereConfig0.setuseServletContextParameters(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean25 = atmosphereConfig0.getInitParameter("hi!", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test02178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02178");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        int int3 = atmosphereConfig0.getInitParameter("", (int) 'a');
        atmosphereConfig0.setuseServletContextParameters(false);
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig8.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig8.setframework(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig8.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.startupHook(startupHook14);
        boolean boolean16 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig8.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        atmosphereConfig18.setproperties(strMap19);
        boolean boolean21 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig18.getproperties();
        boolean boolean23 = atmosphereConfig18.useServletContextParameters;
        atmosphereConfig18.setSupportSession(true);
        org.slf4j.Logger logger26 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig18.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        atmosphereConfig18.startUpHook = startupHookList29;
        atmosphereConfig8.startUpHook = startupHookList29;
        atmosphereConfig0.startUpHook = startupHookList29;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.shutdownHook(shutdownHook33);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig35 = atmosphereConfig34.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 97 + "'", int3 == 97);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(logger26);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
    }

    @Test
    public void test02179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02179");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        atmosphereConfig7.setproperties(strMap8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList11, shutdownHookArray10);
        atmosphereConfig7.shutdownHooks = shutdownHookList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = null;
        atmosphereConfig14.setshutdownHooks(shutdownHookList16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig7.populate(atmosphereConfig14);
        org.slf4j.Logger logger19 = atmosphereConfig7.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig20.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.startupHook(startupHook26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig20.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig20.getproperties();
        atmosphereConfig7.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.populate(atmosphereConfig7);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig0.properties;
        java.lang.Class<?> wildcardClass35 = strMap34.getClass();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test02180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02180");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList6);
    }

    @Test
    public void test02181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02181");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
    }

    @Test
    public void test02182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02182");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        atmosphereConfig8.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig8.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.slf4j.Logger logger24 = atmosphereConfig12.getlogger();
        boolean boolean25 = atmosphereConfig12.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig12.getshutdownHooks();
        java.lang.String str29 = atmosphereConfig12.getInitParameter("", "");
        atmosphereConfig12.throwExceptionOnCloned = true;
        boolean boolean32 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        atmosphereConfig33.setproperties(strMap34);
        boolean boolean36 = atmosphereConfig33.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig33.getproperties();
        atmosphereConfig33.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray39 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList40, shutdownHookArray39);
        atmosphereConfig33.shutdownHooks = shutdownHookList40;
        atmosphereConfig12.shutdownHooks = shutdownHookList40;
        atmosphereConfig8.shutdownHooks = shutdownHookList40;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig8.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig8.getproperties();
        atmosphereConfig8.throwExceptionOnCloned = true;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(logger24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(shutdownHookList26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(shutdownHookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertNull(strMap46);
    }

    @Test
    public void test02183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02183");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig8.shutdownHooks;
        boolean boolean11 = atmosphereConfig8.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig8.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        atmosphereConfig13.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig8.populate(atmosphereConfig13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.lang.String str21 = atmosphereConfig17.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.atmosphereHandlerConfig;
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig0.framework = atmosphereFramework26;
        boolean boolean28 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.shutdownHook(shutdownHook29);
        boolean boolean31 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig0.startupHook(startupHook32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
    }

    @Test
    public void test02184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02184");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.lang.String str14 = atmosphereConfig11.getInitParameter("", "");
        atmosphereConfig11.sessionTimeoutRemovalAllowed = true;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster17 = atmosphereConfig11.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test02185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02185");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.startUpHook;
        java.lang.String str10 = atmosphereConfig4.getInitParameter("hi!", "");
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test02186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02186");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.useServletContextParameters = false;
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.slf4j.Logger logger9 = atmosphereConfig0.getlogger();
        boolean boolean10 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig0.framework = atmosphereFramework11;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory13 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test02187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02187");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig9.getframework();
        atmosphereConfig9.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        atmosphereConfig13.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17, shutdownHookArray16);
        atmosphereConfig13.shutdownHooks = shutdownHookList17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.setshutdownHooks(shutdownHookList22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig13.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig20.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig26.startUpHook;
        atmosphereConfig26.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray30 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList31, atmosphereHandlerConfigArray30);
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList31;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig26.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList34;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig9.populate(atmosphereConfig20);
        boolean boolean37 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster38 = atmosphereConfig36.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(shutdownHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test02188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02188");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.setframework(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig0.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider14 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(shutdownHookList13);
    }

    @Test
    public void test02189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02189");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig0.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig16 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test02190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02190");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean4 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig0.shutdownHooks;
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster9 = atmosphereConfig8.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
    }

    @Test
    public void test02191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02191");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        atmosphereConfig0.setSupportSession(true);
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        atmosphereConfig19.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray23 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList24, atmosphereHandlerConfigArray23);
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig18.populate(atmosphereConfig19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig18.getAtmosphereHandlerConfig();
        boolean boolean29 = atmosphereConfig18.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig18.framework = atmosphereFramework30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.populate(atmosphereConfig18);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig18.shutdownHook(shutdownHook33);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster35 = atmosphereConfig34.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
    }

    @Test
    public void test02192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02192");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig9.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig9.setframework(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig5.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        atmosphereConfig15.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        boolean boolean22 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        java.lang.String str24 = atmosphereConfig15.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig15.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig15.setframework(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        atmosphereConfig28.setproperties(strMap29);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = null;
        atmosphereConfig35.setshutdownHooks(shutdownHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig28.populate(atmosphereConfig35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig28.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig28.getproperties();
        atmosphereConfig15.properties = strMap41;
        atmosphereConfig9.properties = strMap41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig9.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig9.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig9.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig9.properties;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test02193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02193");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        int int5 = atmosphereConfig0.getInitParameter("hi!", 1);
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!");
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test02194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02194");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.useServletContextParameters = true;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.slf4j.Logger logger9 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        boolean boolean15 = atmosphereConfig10.supportSession;
        int int18 = atmosphereConfig10.getInitParameter("", (int) (short) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        atmosphereConfig19.setproperties(strMap20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray22 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList23, shutdownHookArray22);
        atmosphereConfig19.shutdownHooks = shutdownHookList23;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig26.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = null;
        atmosphereConfig26.setshutdownHooks(shutdownHookList28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig19.populate(atmosphereConfig26);
        boolean boolean31 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        atmosphereConfig32.setproperties(strMap33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig32.getstartUpHook();
        atmosphereConfig30.setstartUpHook(startupHookList39);
        atmosphereConfig10.startUpHook = startupHookList39;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig10.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList42);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig44 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(shutdownHookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(shutdownHookList42);
    }

    @Test
    public void test02195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02195");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        boolean boolean6 = atmosphereConfig0.useServletContextParameters;
        int int9 = atmosphereConfig0.getInitParameter("hi!", 100);
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.slf4j.Logger logger24 = atmosphereConfig12.getlogger();
        boolean boolean25 = atmosphereConfig12.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig12.getshutdownHooks();
        java.lang.String str29 = atmosphereConfig12.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig12.setframework(atmosphereFramework30);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig12.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = null;
        atmosphereConfig33.setshutdownHooks(shutdownHookList35);
        boolean boolean37 = atmosphereConfig33.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig33.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig39.shutdownHooks;
        boolean boolean42 = atmosphereConfig39.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig39.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = null;
        atmosphereConfig44.setproperties(strMap45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig39.populate(atmosphereConfig44);
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = null;
        atmosphereConfig39.setproperties(strMap48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        java.lang.String str54 = atmosphereConfig50.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig50.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        atmosphereConfig50.framework = atmosphereFramework56;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig50.startUpHook;
        atmosphereConfig39.startUpHook = startupHookList58;
        atmosphereConfig33.setstartUpHook(startupHookList58);
        boolean boolean61 = atmosphereConfig33.getuseServletContextParameters();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList62;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList62;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(shutdownHookList4);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(logger24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(shutdownHookList26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
    }

    @Test
    public void test02196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02196");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.slf4j.Logger logger12 = atmosphereConfig0.getlogger();
        boolean boolean13 = atmosphereConfig0.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        atmosphereConfig15.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = null;
        atmosphereConfig22.setshutdownHooks(shutdownHookList24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig15.populate(atmosphereConfig22);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig22.properties;
        atmosphereConfig0.properties = strMap27;
        boolean boolean31 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        atmosphereConfig32.setproperties(strMap33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = null;
        atmosphereConfig39.setshutdownHooks(shutdownHookList41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig32.populate(atmosphereConfig39);
        java.lang.String str46 = atmosphereConfig43.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig43.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig43.getproperties();
        atmosphereConfig0.setproperties(strMap48);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        atmosphereConfig0.framework = atmosphereFramework50;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(startupHookList52);
    }

    @Test
    public void test02197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02197");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig11.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig11.setframework(atmosphereFramework14);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig11.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig17.shutdownHooks;
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(false);
        boolean boolean22 = atmosphereConfig17.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        boolean boolean25 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        boolean boolean26 = atmosphereConfig23.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig23.properties();
        atmosphereConfig23.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig23.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig17.populate(atmosphereConfig23);
        atmosphereConfig23.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig23.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig23.getstartUpHook();
        atmosphereConfig11.setstartUpHook(startupHookList35);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(shutdownHookList19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(startupHookList35);
    }

    @Test
    public void test02198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02198");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray2 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList3 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList3, atmosphereHandlerConfigArray2);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList3;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig7.shutdownHooks;
        java.lang.String str11 = atmosphereConfig7.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        boolean boolean24 = atmosphereConfig23.supportSession;
        int int27 = atmosphereConfig23.getInitParameter("hi!", (int) (short) 0);
        java.lang.String str30 = atmosphereConfig23.getInitParameter("hi!", "");
        boolean boolean31 = atmosphereConfig23.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        java.lang.String str36 = atmosphereConfig32.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig32.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig32.framework = atmosphereFramework38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = null;
        atmosphereConfig40.setproperties(strMap41);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig40.shutdownHooks = shutdownHookList44;
        boolean boolean47 = atmosphereConfig40.sessionTimeoutRemovalAllowed;
        java.lang.String str49 = atmosphereConfig40.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig40.shutdownHooks;
        atmosphereConfig32.setshutdownHooks(shutdownHookList50);
        atmosphereConfig23.shutdownHooks = shutdownHookList50;
        atmosphereConfig7.setshutdownHooks(shutdownHookList50);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap54 = atmosphereConfig7.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(shutdownHookList50);
    }

    @Test
    public void test02199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02199");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig4.setSupportSession(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = atmosphereConfig4.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
    }

    @Test
    public void test02200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02200");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray8 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList9, shutdownHookArray8);
        atmosphereConfig5.shutdownHooks = shutdownHookList9;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig5.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig14.shutdownHooks = shutdownHookList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = null;
        atmosphereConfig21.setshutdownHooks(shutdownHookList23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig14.populate(atmosphereConfig21);
        java.lang.String str28 = atmosphereConfig25.getInitParameter("", "");
        boolean boolean29 = atmosphereConfig25.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        atmosphereConfig30.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34, shutdownHookArray33);
        atmosphereConfig30.shutdownHooks = shutdownHookList34;
        atmosphereConfig25.shutdownHooks = shutdownHookList34;
        atmosphereConfig13.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig40.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig40.shutdownHooks;
        boolean boolean43 = atmosphereConfig40.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig40.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = null;
        atmosphereConfig45.setproperties(strMap46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig40.populate(atmosphereConfig45);
        boolean boolean49 = atmosphereConfig48.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        boolean boolean52 = atmosphereConfig50.sessionTimeoutRemovalAllowed;
        boolean boolean53 = atmosphereConfig50.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig50.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        atmosphereConfig55.setproperties(strMap56);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray58 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList59, shutdownHookArray58);
        atmosphereConfig55.shutdownHooks = shutdownHookList59;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig62.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = null;
        atmosphereConfig62.setshutdownHooks(shutdownHookList64);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig55.populate(atmosphereConfig62);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = atmosphereConfig55.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig55.getproperties();
        atmosphereConfig50.setproperties(strMap68);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = null;
        atmosphereConfig50.setframework(atmosphereFramework70);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig48.populate(atmosphereConfig50);
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray73 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList74, atmosphereHandlerConfigArray73);
        atmosphereConfig50.atmosphereHandlerConfig = atmosphereHandlerConfigList74;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList74;
        boolean boolean78 = atmosphereConfig0.useServletContextParameters;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(shutdownHookList4);
        org.junit.Assert.assertNotNull(shutdownHookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(shutdownHookArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNull(atmosphereFramework67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test02201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02201");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig8.isThrowExceptionOnCloned();
        java.lang.String str12 = atmosphereConfig8.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig8.framework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory14 = atmosphereConfig8.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(atmosphereFramework13);
    }

    @Test
    public void test02202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02202");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig9.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig9.setframework(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig5.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig5.getframework();
        atmosphereConfig5.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig5.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig5.getstartUpHook();
        boolean boolean21 = atmosphereConfig5.getuseServletContextParameters();
        int int24 = atmosphereConfig5.getInitParameter("hi!", (int) (short) 1);
        boolean boolean25 = atmosphereConfig5.supportSession;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test02203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02203");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray5 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList6, shutdownHookArray5);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList6);
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig13.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig13.setframework(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig13.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig13.startupHook(startupHook19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig13.properties();
        atmosphereConfig0.properties = strMap21;
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.populate(atmosphereConfig25);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test02204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02204");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig8.getuseServletContextParameters();
        atmosphereConfig8.useServletContextParameters = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig8.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.shutdownHook(shutdownHook14);
        atmosphereConfig8.setuseServletContextParameters(true);
        java.lang.String str19 = atmosphereConfig8.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig8.getproperties();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test02205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02205");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean5 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig6.startUpHook;
        boolean boolean8 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig6.properties();
        atmosphereConfig6.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig6.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.populate(atmosphereConfig6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig6.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig6.getAtmosphereHandlerConfig();
        boolean boolean17 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        java.lang.String str19 = atmosphereConfig6.getInitParameter("hi!");
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test02206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02206");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.shutdownHooks;
        boolean boolean13 = atmosphereConfig10.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig10.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        atmosphereConfig15.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig10.populate(atmosphereConfig15);
        org.slf4j.Logger logger19 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        atmosphereConfig20.setproperties(strMap21);
        boolean boolean23 = atmosphereConfig20.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig20.getstartUpHook();
        atmosphereConfig18.startUpHook = startupHookList24;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig18.framework = atmosphereFramework26;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig18.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig30.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = null;
        atmosphereConfig30.setshutdownHooks(shutdownHookList32);
        boolean boolean34 = atmosphereConfig30.useServletContextParameters;
        atmosphereConfig30.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig30.properties;
        atmosphereConfig18.setproperties(strMap37);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig18.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig0.populate(atmosphereConfig18);
        boolean boolean43 = atmosphereConfig0.useServletContextParameters;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig0.getproperties();
        boolean boolean45 = atmosphereConfig0.isSupportSession();
        boolean boolean46 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test02207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02207");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList13, startupHookArray12);
        atmosphereConfig11.startUpHook = startupHookList13;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig11.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig11.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig11.startUpHook;
        java.lang.String str20 = atmosphereConfig11.getInitParameter("hi!");
        boolean boolean21 = atmosphereConfig11.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig11.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        boolean boolean25 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        boolean boolean26 = atmosphereConfig23.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig23.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        atmosphereConfig28.setproperties(strMap29);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = null;
        atmosphereConfig35.setshutdownHooks(shutdownHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig28.populate(atmosphereConfig35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig28.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig28.getproperties();
        atmosphereConfig23.setproperties(strMap41);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        atmosphereConfig23.setframework(atmosphereFramework43);
        java.lang.String str46 = atmosphereConfig23.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig47.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig51.startupHook(startupHook52);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig51.startUpHook;
        java.lang.String str56 = atmosphereConfig51.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig51.properties();
        atmosphereConfig23.properties = strMap57;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig23.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig11.populate(atmosphereConfig23);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider61 = atmosphereConfig60.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
    }

    @Test
    public void test02208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02208");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        boolean boolean7 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setSupportSession(false);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider12 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test02209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02209");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig5.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig5.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        atmosphereConfig11.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig4.populate(atmosphereConfig11);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext14 = atmosphereConfig13.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
    }

    @Test
    public void test02210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02210");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        boolean boolean5 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.setSupportSession(true);
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(false);
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig13.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        atmosphereConfig17.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        atmosphereConfig19.setproperties(strMap20);
        boolean boolean22 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig19.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig19.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25);
        boolean boolean30 = atmosphereConfig19.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig19.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        atmosphereConfig32.setproperties(strMap33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = null;
        atmosphereConfig39.setshutdownHooks(shutdownHookList41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig32.populate(atmosphereConfig39);
        java.lang.String str46 = atmosphereConfig43.getInitParameter("", "");
        boolean boolean47 = atmosphereConfig43.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = null;
        atmosphereConfig48.setproperties(strMap49);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray51 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList52, shutdownHookArray51);
        atmosphereConfig48.shutdownHooks = shutdownHookList52;
        atmosphereConfig43.shutdownHooks = shutdownHookList52;
        atmosphereConfig19.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig19.atmosphereHandlerConfig;
        atmosphereConfig17.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig60 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
    }

    @Test
    public void test02211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02211");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        atmosphereConfig0.setSupportSession(true);
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNull(atmosphereFramework17);
    }

    @Test
    public void test02212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02212");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig8.getuseServletContextParameters();
        atmosphereConfig8.useServletContextParameters = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig8.startUpHook;
        org.slf4j.Logger logger14 = atmosphereConfig8.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig8.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig8.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext17 = atmosphereConfig8.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
    }

    @Test
    public void test02213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02213");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig7.properties();
        java.lang.Class<?> wildcardClass28 = strMap27.getClass();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test02214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02214");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSupportSession(true);
        atmosphereConfig0.supportSession = true;
        boolean boolean13 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test02215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02215");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        boolean boolean15 = atmosphereConfig13.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig13.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig13.getproperties();
        atmosphereConfig0.setproperties(strMap17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test02216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02216");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig8.setframework(atmosphereFramework10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig8.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig8.supportSession = false;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
    }

    @Test
    public void test02217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02217");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig6.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig8.setproperties(strMap9);
        boolean boolean11 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig8.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig8.setframework(atmosphereFramework13);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.startupHook(startupHook16);
        org.slf4j.Logger logger18 = atmosphereConfig17.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig17.shutdownHooks = shutdownHookList20;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig17.shutdownHooks;
        atmosphereConfig17.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig17.framework = atmosphereFramework26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig6.populate(atmosphereConfig17);
        atmosphereConfig6.supportSession = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig6.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = null;
        atmosphereConfig32.setshutdownHooks(shutdownHookList34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig32.setframework(atmosphereFramework36);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig32.startupHook(startupHook38);
        boolean boolean40 = atmosphereConfig39.getuseServletContextParameters();
        atmosphereConfig39.sessionTimeoutRemovalAllowed = false;
        boolean boolean43 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig39.startupHook(startupHook44);
        boolean boolean48 = atmosphereConfig45.getInitParameter("", true);
        java.lang.String str50 = atmosphereConfig45.getInitParameter("hi!");
        atmosphereConfig45.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig53.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        atmosphereConfig53.setframework(atmosphereFramework56);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = atmosphereConfig53.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig53.startupHook(startupHook59);
        boolean boolean61 = atmosphereConfig53.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig53.getAtmosphereHandlerConfig();
        atmosphereConfig45.atmosphereHandlerConfig = atmosphereHandlerConfigList62;
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList62;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNull(atmosphereFramework55);
        org.junit.Assert.assertNull(atmosphereFramework58);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
    }

    @Test
    public void test02218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02218");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig11.startUpHook;
        java.lang.String str15 = atmosphereConfig11.getInitParameter("hi!");
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = null;
        atmosphereConfig11.startUpHook = startupHookList17;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig11.framework();
        // The following exception was thrown during execution in test generation
        try {
            atmosphereConfig11.initComplete();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
    }

    @Test
    public void test02219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02219");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        org.slf4j.Logger logger11 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(logger11);
    }

    @Test
    public void test02220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02220");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray8 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList9, shutdownHookArray8);
        atmosphereConfig5.shutdownHooks = shutdownHookList9;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = null;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig5.populate(atmosphereConfig12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig5.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig5.getproperties();
        atmosphereConfig0.setproperties(strMap18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNull(atmosphereFramework23);
    }

    @Test
    public void test02221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02221");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        boolean boolean5 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.setSupportSession(true);
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(false);
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig13.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        atmosphereConfig17.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        atmosphereConfig19.setproperties(strMap20);
        boolean boolean22 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig19.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig19.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25);
        boolean boolean30 = atmosphereConfig19.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig19.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        atmosphereConfig32.setproperties(strMap33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = null;
        atmosphereConfig39.setshutdownHooks(shutdownHookList41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig32.populate(atmosphereConfig39);
        java.lang.String str46 = atmosphereConfig43.getInitParameter("", "");
        boolean boolean47 = atmosphereConfig43.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = null;
        atmosphereConfig48.setproperties(strMap49);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray51 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList52, shutdownHookArray51);
        atmosphereConfig48.shutdownHooks = shutdownHookList52;
        atmosphereConfig43.shutdownHooks = shutdownHookList52;
        atmosphereConfig19.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig19.atmosphereHandlerConfig;
        atmosphereConfig17.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        boolean boolean60 = atmosphereConfig0.getuseServletContextParameters();
        java.lang.Class<?> wildcardClass61 = atmosphereConfig0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test02222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02222");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        int int14 = atmosphereConfig7.getInitParameter("hi!", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        boolean boolean17 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        boolean boolean18 = atmosphereConfig15.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig15.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig15.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig15.startupHook(startupHook22);
        boolean boolean24 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        boolean boolean25 = atmosphereConfig23.getuseServletContextParameters();
        atmosphereConfig23.useServletContextParameters = false;
        boolean boolean28 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig29.shutdownHooks;
        boolean boolean32 = atmosphereConfig29.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig29.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig29.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig35.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig35.setframework(atmosphereFramework38);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig35.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig35.startUpHook;
        atmosphereConfig29.setstartUpHook(startupHookList41);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig29.getshutdownHooks();
        atmosphereConfig23.setshutdownHooks(shutdownHookList43);
        atmosphereConfig7.shutdownHooks = shutdownHookList43;
        java.lang.String str48 = atmosphereConfig7.getInitParameter("", "hi!");
        boolean boolean49 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        boolean boolean50 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap51 = atmosphereConfig7.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test02223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02223");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig8.getuseServletContextParameters();
        atmosphereConfig8.useServletContextParameters = false;
        java.lang.String str15 = atmosphereConfig8.getInitParameter("hi!", "hi!");
        int int18 = atmosphereConfig8.getInitParameter("", 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration19 = atmosphereConfig8.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test02224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02224");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework();
        boolean boolean5 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.useServletContextParameters = true;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test02225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02225");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        int int15 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = null;
        atmosphereConfig16.setshutdownHooks(shutdownHookList18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig16.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.atmosphereHandlerConfig;
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig11.getframework();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext24 = atmosphereConfig11.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNull(atmosphereFramework23);
    }

    @Test
    public void test02226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02226");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.slf4j.Logger logger10 = atmosphereConfig9.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig9.shutdownHooks = shutdownHookList12;
        atmosphereConfig9.initComplete();
        atmosphereConfig9.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig9.throwExceptionOnCloned = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test02227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02227");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test02228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02228");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig10.setproperties(strMap11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray13 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList14, shutdownHookArray13);
        atmosphereConfig10.shutdownHooks = shutdownHookList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = null;
        atmosphereConfig17.setshutdownHooks(shutdownHookList19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig10.populate(atmosphereConfig17);
        org.slf4j.Logger logger22 = atmosphereConfig10.getlogger();
        boolean boolean23 = atmosphereConfig10.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig10.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        atmosphereConfig25.setproperties(strMap26);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList29, shutdownHookArray28);
        atmosphereConfig25.shutdownHooks = shutdownHookList29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = null;
        atmosphereConfig32.setshutdownHooks(shutdownHookList34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig25.populate(atmosphereConfig32);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig32.properties;
        atmosphereConfig10.properties = strMap37;
        atmosphereConfig0.properties = strMap37;
        atmosphereConfig0.setuseServletContextParameters(true);
        org.slf4j.Logger logger42 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(shutdownHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(logger42);
    }

    @Test
    public void test02229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02229");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.shutdownHooks;
        boolean boolean13 = atmosphereConfig10.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig10.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        atmosphereConfig15.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig10.populate(atmosphereConfig15);
        org.slf4j.Logger logger19 = atmosphereConfig18.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig21.shutdownHooks;
        boolean boolean24 = atmosphereConfig21.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig26.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig21.populate(atmosphereConfig26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig18.populate(atmosphereConfig26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.shutdownHooks;
        boolean boolean34 = atmosphereConfig31.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig31.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        atmosphereConfig36.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig31.populate(atmosphereConfig36);
        boolean boolean40 = atmosphereConfig39.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        boolean boolean43 = atmosphereConfig41.sessionTimeoutRemovalAllowed;
        boolean boolean44 = atmosphereConfig41.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig41.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        atmosphereConfig46.setproperties(strMap47);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray49 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50, shutdownHookArray49);
        atmosphereConfig46.shutdownHooks = shutdownHookList50;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = null;
        atmosphereConfig53.setshutdownHooks(shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig46.populate(atmosphereConfig53);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = atmosphereConfig46.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig46.getproperties();
        atmosphereConfig41.setproperties(strMap59);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        atmosphereConfig41.setframework(atmosphereFramework61);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig39.populate(atmosphereConfig41);
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray64 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList65, atmosphereHandlerConfigArray64);
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList65;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList65;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList69 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList69;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(shutdownHookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNull(atmosphereFramework58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList69);
    }

    @Test
    public void test02230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02230");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig0.setproperties(strMap9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.lang.String str15 = atmosphereConfig11.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig11.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig11.framework = atmosphereFramework17;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList19;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.shutdownHook(shutdownHook21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig22.properties;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory24 = atmosphereConfig22.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test02231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02231");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.lang.String str4 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        atmosphereConfig7.setproperties(strMap8);
        boolean boolean10 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig7.getstartUpHook();
        atmosphereConfig7.supportSession = false;
        boolean boolean14 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        atmosphereConfig7.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.populate(atmosphereConfig7);
        atmosphereConfig7.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
    }

    @Test
    public void test02232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02232");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.lang.String str4 = atmosphereConfig0.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        boolean boolean12 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        boolean boolean13 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig10.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig10.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig10.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        boolean boolean20 = atmosphereConfig18.getuseServletContextParameters();
        atmosphereConfig18.useServletContextParameters = false;
        boolean boolean23 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig18.properties();
        boolean boolean25 = atmosphereConfig18.getuseServletContextParameters();
        boolean boolean26 = atmosphereConfig18.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig18.startUpHook;
        boolean boolean28 = atmosphereConfig18.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig0.populate(atmosphereConfig18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(shutdownHookList30);
    }

    @Test
    public void test02233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02233");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray5 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList6, shutdownHookArray5);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList6);
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(startupHookList13);
    }

    @Test
    public void test02234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02234");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.setframework(atmosphereFramework8);
        // The following exception was thrown during execution in test generation
        try {
            atmosphereConfig0.destroy();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test02235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02235");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties();
        java.lang.Class<?> wildcardClass13 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02236");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        java.lang.String str9 = atmosphereConfig7.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        boolean boolean12 = atmosphereConfig11.useServletContextParameters;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory13 = atmosphereConfig11.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test02237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02237");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig9.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig9.setframework(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig9.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig9.startUpHook;
        atmosphereConfig6.startUpHook = startupHookList15;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig6.startupHook(startupHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig6.properties;
        atmosphereConfig6.destroy();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory21 = atmosphereConfig6.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test02238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02238");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        atmosphereConfig7.setproperties(strMap8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList11, shutdownHookArray10);
        atmosphereConfig7.shutdownHooks = shutdownHookList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = null;
        atmosphereConfig14.setshutdownHooks(shutdownHookList16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig7.populate(atmosphereConfig14);
        org.slf4j.Logger logger19 = atmosphereConfig7.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig20.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.startupHook(startupHook26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig20.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig20.getproperties();
        atmosphereConfig7.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.populate(atmosphereConfig7);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
    }

    @Test
    public void test02239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02239");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.lang.String str4 = atmosphereConfig0.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.getframework();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
    }

    @Test
    public void test02240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02240");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig0.setproperties(strMap9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.lang.String str15 = atmosphereConfig11.getInitParameter("", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig11.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList16;
        java.lang.Class<?> wildcardClass18 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test02241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02241");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        atmosphereConfig11.throwExceptionOnCloned = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig11.shutdownHooks;
        boolean boolean16 = atmosphereConfig11.getuseServletContextParameters();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test02242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02242");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        atmosphereConfig28.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.shutdownHooks;
        atmosphereConfig28.setshutdownHooks(shutdownHookList33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig28.shutdownHooks;
        org.slf4j.Logger logger36 = atmosphereConfig28.getlogger();
        atmosphereConfig28.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(logger36);
    }

    @Test
    public void test02243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02243");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig9.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig9.setframework(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig5.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        atmosphereConfig15.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        boolean boolean22 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        java.lang.String str24 = atmosphereConfig15.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig15.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig15.setframework(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        atmosphereConfig28.setproperties(strMap29);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig28.shutdownHooks = shutdownHookList32;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = null;
        atmosphereConfig35.setshutdownHooks(shutdownHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig28.populate(atmosphereConfig35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig28.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig28.getproperties();
        atmosphereConfig15.properties = strMap41;
        atmosphereConfig9.properties = strMap41;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig9.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig9.getshutdownHooks();
        boolean boolean46 = atmosphereConfig9.useServletContextParameters;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test02244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02244");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.lang.String str13 = atmosphereConfig9.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig9.atmosphereHandlerConfig;
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        atmosphereConfig8.setSupportSession(true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
    }

    @Test
    public void test02245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02245");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.slf4j.Logger logger12 = atmosphereConfig0.getlogger();
        boolean boolean13 = atmosphereConfig0.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        atmosphereConfig15.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = null;
        atmosphereConfig22.setshutdownHooks(shutdownHookList24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig15.populate(atmosphereConfig22);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig22.properties;
        atmosphereConfig0.properties = strMap27;
        boolean boolean31 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        atmosphereConfig32.setproperties(strMap33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = null;
        atmosphereConfig39.setshutdownHooks(shutdownHookList41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig32.populate(atmosphereConfig39);
        java.lang.String str46 = atmosphereConfig43.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig43.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig43.getproperties();
        atmosphereConfig0.setproperties(strMap48);
        int int52 = atmosphereConfig0.getInitParameter("hi!", 0);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList53);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test02246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02246");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig4.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster7 = atmosphereConfig4.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test02247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02247");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig8.shutdownHooks;
        boolean boolean11 = atmosphereConfig8.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig8.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        atmosphereConfig13.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig8.populate(atmosphereConfig13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.lang.String str21 = atmosphereConfig17.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.atmosphereHandlerConfig;
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig28.shutdownHooks;
        boolean boolean31 = atmosphereConfig28.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig28.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        atmosphereConfig33.setproperties(strMap34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig28.populate(atmosphereConfig33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig36.setframework(atmosphereFramework37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig36.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig40.startUpHook;
        java.lang.String str44 = atmosphereConfig40.getInitParameter("", "");
        boolean boolean45 = atmosphereConfig40.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig40.getstartUpHook();
        atmosphereConfig36.setstartUpHook(startupHookList46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig0.populate(atmosphereConfig36);
        boolean boolean49 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(startupHookList50);
    }

    @Test
    public void test02248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02248");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList13, startupHookArray12);
        atmosphereConfig11.startUpHook = startupHookList13;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig11.startUpHook;
        boolean boolean17 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig11.setframework(atmosphereFramework18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig11.getproperties();
        boolean boolean21 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test02249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02249");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        boolean boolean10 = atmosphereConfig0.getInitParameter("hi!", false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration11 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test02250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02250");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.useServletContextParameters = true;
        boolean boolean7 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.setframework(atmosphereFramework8);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        boolean boolean13 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        boolean boolean14 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig11.properties();
        atmosphereConfig11.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig11.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig11.atmosphereHandlerConfig;
        atmosphereConfig11.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.populate(atmosphereConfig11);
        org.slf4j.Logger logger23 = atmosphereConfig11.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        atmosphereConfig24.setproperties(strMap25);
        boolean boolean27 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig24.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig24.setframework(atmosphereFramework29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig24.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig24.startupHook(startupHook32);
        boolean boolean34 = atmosphereConfig24.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig11.populate(atmosphereConfig24);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration36 = atmosphereConfig35.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
    }

    @Test
    public void test02251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02251");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        atmosphereConfig7.setproperties(strMap8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList11, shutdownHookArray10);
        atmosphereConfig7.shutdownHooks = shutdownHookList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = null;
        atmosphereConfig14.setshutdownHooks(shutdownHookList16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig7.populate(atmosphereConfig14);
        org.slf4j.Logger logger19 = atmosphereConfig7.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig20.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.startupHook(startupHook26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig20.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig20.getproperties();
        atmosphereConfig7.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.populate(atmosphereConfig7);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig0.properties;
        java.lang.String str36 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean37 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test02252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02252");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig1.startUpHook;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray5 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList6, atmosphereHandlerConfigArray5);
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig1);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework();
        boolean boolean13 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.setframework(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test02253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02253");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean5 = atmosphereConfig0.isThrowExceptionOnCloned();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration6 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test02254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02254");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        int int15 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig11.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig11.framework;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster19 = atmosphereConfig11.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(atmosphereFramework18);
    }

    @Test
    public void test02255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02255");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        boolean boolean11 = atmosphereConfig10.useServletContextParameters;
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        boolean boolean13 = atmosphereConfig10.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        boolean boolean17 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig14.getproperties();
        atmosphereConfig14.initComplete();
        atmosphereConfig14.setSessionTimeoutRemovalAllowed(true);
        boolean boolean24 = atmosphereConfig14.getInitParameter("hi!", false);
        atmosphereConfig14.setuseServletContextParameters(true);
        atmosphereConfig14.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig14.setframework(atmosphereFramework29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig14.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig14.startUpHook;
        atmosphereConfig10.setstartUpHook(startupHookList32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig10.setframework(atmosphereFramework34);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext36 = atmosphereConfig10.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(startupHookList32);
    }

    @Test
    public void test02256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02256");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig0.shutdownHooks = shutdownHookList7;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig0.framework = atmosphereFramework11;
        boolean boolean13 = atmosphereConfig0.useServletContextParameters;
        boolean boolean14 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean15 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig0.setframework(atmosphereFramework16);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test02257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02257");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.lang.String str14 = atmosphereConfig11.getInitParameter("", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig11.properties();
        org.slf4j.Logger logger16 = atmosphereConfig11.getlogger();
        int int19 = atmosphereConfig11.getInitParameter("", 97);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig11.properties();
        atmosphereConfig11.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig11.shutdownHook(shutdownHook23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test02258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02258");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.getproperties();
        java.lang.String str16 = atmosphereConfig0.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean20 = atmosphereConfig0.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory22 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(atmosphereFramework21);
    }

    @Test
    public void test02259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02259");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig1.startUpHook;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray5 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList6, atmosphereHandlerConfigArray5);
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig1);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig9.getframework();
        boolean boolean11 = atmosphereConfig9.isThrowExceptionOnCloned();
        atmosphereConfig9.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig14.shutdownHooks = shutdownHookList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = null;
        atmosphereConfig21.setshutdownHooks(shutdownHookList23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig14.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig26.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30, shutdownHookArray29);
        atmosphereConfig26.shutdownHooks = shutdownHookList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = null;
        atmosphereConfig33.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig26.populate(atmosphereConfig33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig26.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig26.getproperties();
        atmosphereConfig21.properties = strMap39;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig21.startupHook(startupHook41);
        atmosphereConfig42.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.shutdownHooks;
        atmosphereConfig42.setshutdownHooks(shutdownHookList47);
        atmosphereConfig9.setshutdownHooks(shutdownHookList47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        boolean boolean52 = atmosphereConfig50.sessionTimeoutRemovalAllowed;
        boolean boolean53 = atmosphereConfig50.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig50.properties();
        atmosphereConfig50.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig50.shutdownHook(shutdownHook56);
        atmosphereConfig50.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig9.populate(atmosphereConfig50);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig60 = atmosphereConfig59.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(shutdownHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
    }

    @Test
    public void test02260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02260");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig0.startUpHook;
        java.lang.String str7 = atmosphereConfig0.getInitParameter("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test02261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02261");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = null;
        atmosphereConfig9.shutdownHooks = shutdownHookList14;
        boolean boolean16 = atmosphereConfig9.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig9.startupHook(startupHook17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap19 = atmosphereConfig18.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
    }

    @Test
    public void test02262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02262");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        atmosphereConfig28.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.shutdownHooks;
        atmosphereConfig28.setshutdownHooks(shutdownHookList33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig28.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig36.shutdownHooks;
        boolean boolean39 = atmosphereConfig36.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig36.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = null;
        atmosphereConfig41.setproperties(strMap42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig36.populate(atmosphereConfig41);
        org.slf4j.Logger logger45 = atmosphereConfig44.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig44.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig47.shutdownHooks;
        boolean boolean50 = atmosphereConfig47.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig47.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        atmosphereConfig52.setproperties(strMap53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig47.populate(atmosphereConfig52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig44.populate(atmosphereConfig52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig28.populate(atmosphereConfig52);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = null;
        atmosphereConfig57.framework = atmosphereFramework58;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster60 = atmosphereConfig57.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(shutdownHookList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(logger45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
    }

    @Test
    public void test02263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02263");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.getuseServletContextParameters();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig7.getshutdownHooks();
        boolean boolean10 = atmosphereConfig7.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig7.startUpHook;
        boolean boolean12 = atmosphereConfig7.getuseServletContextParameters();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test02264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02264");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        atmosphereConfig6.destroy();
        boolean boolean10 = atmosphereConfig6.getInitParameter("hi!", true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test02265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02265");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        atmosphereConfig7.setproperties(strMap8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList11, shutdownHookArray10);
        atmosphereConfig7.shutdownHooks = shutdownHookList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = null;
        atmosphereConfig14.setshutdownHooks(shutdownHookList16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig7.populate(atmosphereConfig14);
        org.slf4j.Logger logger19 = atmosphereConfig7.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig20.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.startupHook(startupHook26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig20.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig20.getproperties();
        atmosphereConfig7.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean32 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        int int36 = atmosphereConfig33.getInitParameter("", (int) 'a');
        boolean boolean37 = atmosphereConfig33.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig33.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList38);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap40 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 97 + "'", int36 == 97);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(startupHookList38);
    }

    @Test
    public void test02266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02266");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        atmosphereConfig2.setproperties(strMap3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray5 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList6, shutdownHookArray5);
        atmosphereConfig2.shutdownHooks = shutdownHookList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = null;
        atmosphereConfig9.setshutdownHooks(shutdownHookList11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig2.populate(atmosphereConfig9);
        java.lang.String str16 = atmosphereConfig13.getInitParameter("", "");
        boolean boolean17 = atmosphereConfig13.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        atmosphereConfig18.setproperties(strMap19);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList22, shutdownHookArray21);
        atmosphereConfig18.shutdownHooks = shutdownHookList22;
        atmosphereConfig13.shutdownHooks = shutdownHookList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig26.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30, shutdownHookArray29);
        atmosphereConfig26.shutdownHooks = shutdownHookList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = null;
        atmosphereConfig33.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig26.populate(atmosphereConfig33);
        boolean boolean38 = atmosphereConfig37.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig37.startUpHook;
        atmosphereConfig37.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        atmosphereConfig42.setproperties(strMap43);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig42.shutdownHooks = shutdownHookList46;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig49.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = null;
        atmosphereConfig49.setshutdownHooks(shutdownHookList51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig42.populate(atmosphereConfig49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = null;
        atmosphereConfig54.setproperties(strMap55);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray57 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList58, shutdownHookArray57);
        atmosphereConfig54.shutdownHooks = shutdownHookList58;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig61.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = null;
        atmosphereConfig61.setshutdownHooks(shutdownHookList63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig54.populate(atmosphereConfig61);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = atmosphereConfig54.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig54.getproperties();
        atmosphereConfig49.properties = strMap67;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig49.startupHook(startupHook69);
        atmosphereConfig70.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList74 = atmosphereConfig73.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList75 = atmosphereConfig73.shutdownHooks;
        atmosphereConfig70.setshutdownHooks(shutdownHookList75);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig70.shutdownHooks;
        atmosphereConfig37.shutdownHooks = shutdownHookList77;
        atmosphereConfig13.shutdownHooks = shutdownHookList77;
        atmosphereConfig0.setshutdownHooks(shutdownHookList77);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = null;
        atmosphereConfig0.setframework(atmosphereFramework81);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(shutdownHookArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(shutdownHookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(startupHookList62);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNull(atmosphereFramework66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(startupHookList74);
        org.junit.Assert.assertNotNull(shutdownHookList75);
        org.junit.Assert.assertNotNull(shutdownHookList77);
    }

    @Test
    public void test02267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02267");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = null;
        atmosphereConfig4.setshutdownHooks(shutdownHookList6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig4.setframework(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.startupHook(startupHook10);
        boolean boolean12 = atmosphereConfig11.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.getproperties();
        atmosphereConfig0.properties = strMap13;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig0.properties();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.destroy();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider19 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test02268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02268");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig4.initComplete();
        atmosphereConfig4.useServletContextParameters = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig4.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.framework;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNull(atmosphereFramework9);
    }

    @Test
    public void test02269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02269");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig1.startUpHook;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray5 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList6, atmosphereHandlerConfigArray5);
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig1);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig9.getframework();
        boolean boolean11 = atmosphereConfig9.isThrowExceptionOnCloned();
        atmosphereConfig9.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig14.shutdownHooks = shutdownHookList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = null;
        atmosphereConfig21.setshutdownHooks(shutdownHookList23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig14.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig26.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30, shutdownHookArray29);
        atmosphereConfig26.shutdownHooks = shutdownHookList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = null;
        atmosphereConfig33.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig26.populate(atmosphereConfig33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig26.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig26.getproperties();
        atmosphereConfig21.properties = strMap39;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig21.startupHook(startupHook41);
        atmosphereConfig42.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.shutdownHooks;
        atmosphereConfig42.setshutdownHooks(shutdownHookList47);
        atmosphereConfig9.setshutdownHooks(shutdownHookList47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = atmosphereConfig50.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        atmosphereConfig50.setframework(atmosphereFramework53);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig50.getframework();
        java.lang.String str58 = atmosphereConfig50.getInitParameter("hi!", "hi!");
        atmosphereConfig50.initComplete();
        boolean boolean60 = atmosphereConfig50.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig50.getproperties();
        atmosphereConfig9.properties = strMap61;
        boolean boolean63 = atmosphereConfig9.isThrowExceptionOnCloned();
        atmosphereConfig9.setThrowExceptionOnCloned(true);
        boolean boolean66 = atmosphereConfig9.isSupportSession();
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(shutdownHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNull(atmosphereFramework52);
        org.junit.Assert.assertNull(atmosphereFramework55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test02270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02270");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig4.setThrowExceptionOnCloned(true);
        boolean boolean7 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig4.setframework(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.shutdownHook(shutdownHook10);
        atmosphereConfig11.setuseServletContextParameters(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig11.shutdownHooks;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookList14);
    }

    @Test
    public void test02271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02271");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        atmosphereConfig28.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig28.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig28.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.shutdownHooks;
        boolean boolean36 = atmosphereConfig33.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig33.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        atmosphereConfig38.setproperties(strMap39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig33.populate(atmosphereConfig38);
        org.slf4j.Logger logger42 = atmosphereConfig41.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig44.shutdownHooks;
        boolean boolean47 = atmosphereConfig44.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig44.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = null;
        atmosphereConfig49.setproperties(strMap50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig44.populate(atmosphereConfig49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig41.populate(atmosphereConfig49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig54.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig54.shutdownHooks;
        boolean boolean57 = atmosphereConfig54.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig54.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = null;
        atmosphereConfig59.setproperties(strMap60);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig54.populate(atmosphereConfig59);
        boolean boolean63 = atmosphereConfig62.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig64.startUpHook;
        boolean boolean66 = atmosphereConfig64.sessionTimeoutRemovalAllowed;
        boolean boolean67 = atmosphereConfig64.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig64.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = null;
        atmosphereConfig69.setproperties(strMap70);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray72 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList73, shutdownHookArray72);
        atmosphereConfig69.shutdownHooks = shutdownHookList73;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList77 = atmosphereConfig76.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = null;
        atmosphereConfig76.setshutdownHooks(shutdownHookList78);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = atmosphereConfig69.populate(atmosphereConfig76);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = atmosphereConfig69.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig69.getproperties();
        atmosphereConfig64.setproperties(strMap82);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework84 = null;
        atmosphereConfig64.setframework(atmosphereFramework84);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = atmosphereConfig62.populate(atmosphereConfig64);
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray87 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList88 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList88, atmosphereHandlerConfigArray87);
        atmosphereConfig64.atmosphereHandlerConfig = atmosphereHandlerConfigList88;
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList88;
        atmosphereConfig28.atmosphereHandlerConfig = atmosphereHandlerConfigList88;
        java.util.Map<java.lang.String, java.lang.Object> strMap93 = atmosphereConfig28.getproperties();
        java.lang.Class<?> wildcardClass94 = strMap93.getClass();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(logger42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(shutdownHookList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(startupHookList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(shutdownHookArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(startupHookList77);
        org.junit.Assert.assertNotNull(atmosphereConfig80);
        org.junit.Assert.assertNull(atmosphereFramework81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(atmosphereConfig86);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test02272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02272");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        int int14 = atmosphereConfig7.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        boolean boolean17 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig15.framework;
        atmosphereConfig15.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        atmosphereConfig21.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = null;
        atmosphereConfig28.setshutdownHooks(shutdownHookList30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig21.populate(atmosphereConfig28);
        int int35 = atmosphereConfig28.getInitParameter("hi!", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        boolean boolean38 = atmosphereConfig36.sessionTimeoutRemovalAllowed;
        boolean boolean39 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig36.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig36.framework = atmosphereFramework41;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig36.startupHook(startupHook43);
        boolean boolean45 = atmosphereConfig44.sessionTimeoutRemovalAllowed;
        boolean boolean46 = atmosphereConfig44.getuseServletContextParameters();
        atmosphereConfig44.useServletContextParameters = false;
        boolean boolean49 = atmosphereConfig44.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig50.shutdownHooks;
        boolean boolean53 = atmosphereConfig50.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig50.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig50.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig56.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = atmosphereConfig56.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = null;
        atmosphereConfig56.setframework(atmosphereFramework59);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig56.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig56.startUpHook;
        atmosphereConfig50.setstartUpHook(startupHookList62);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig50.getshutdownHooks();
        atmosphereConfig44.setshutdownHooks(shutdownHookList64);
        atmosphereConfig28.shutdownHooks = shutdownHookList64;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig28.shutdownHook(shutdownHook67);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList69 = atmosphereConfig28.getstartUpHook();
        atmosphereConfig15.setstartUpHook(startupHookList69);
        atmosphereConfig7.setstartUpHook(startupHookList69);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster72 = atmosphereConfig7.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNull(atmosphereFramework58);
        org.junit.Assert.assertNull(atmosphereFramework61);
        org.junit.Assert.assertNotNull(startupHookList62);
        org.junit.Assert.assertNotNull(shutdownHookList64);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(startupHookList69);
    }

    @Test
    public void test02273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02273");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig7.shutdownHooks;
        boolean boolean10 = atmosphereConfig7.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig7.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig7.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList12;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.shutdownHooks;
        boolean boolean15 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            atmosphereConfig0.destroy();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test02274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02274");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig11.startUpHook;
        java.lang.String str16 = atmosphereConfig11.getInitParameter("", "");
        org.slf4j.Logger logger17 = atmosphereConfig11.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig11.getshutdownHooks();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertNull(shutdownHookList18);
    }

    @Test
    public void test02275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02275");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.slf4j.Logger logger12 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setuseServletContextParameters(false);
        boolean boolean15 = atmosphereConfig0.getuseServletContextParameters();
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(shutdownHookList18);
    }

    @Test
    public void test02276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02276");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig11.startUpHook;
        atmosphereConfig11.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig11.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig17.getframework();
        org.slf4j.Logger logger20 = atmosphereConfig17.getlogger();
        java.lang.String str22 = atmosphereConfig17.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        boolean boolean25 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        boolean boolean26 = atmosphereConfig23.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig23.properties();
        atmosphereConfig23.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig23.startupHook(startupHook29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig30.properties();
        atmosphereConfig17.properties = strMap31;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.lang.String str37 = atmosphereConfig33.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig33.atmosphereHandlerConfig;
        atmosphereConfig33.throwExceptionOnCloned = false;
        boolean boolean43 = atmosphereConfig33.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig33.setframework(atmosphereFramework44);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig33.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig17.populate(atmosphereConfig33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig47.framework = atmosphereFramework48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        boolean boolean52 = atmosphereConfig50.sessionTimeoutRemovalAllowed;
        boolean boolean53 = atmosphereConfig50.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig50.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig50.startupHook(startupHook55);
        boolean boolean57 = atmosphereConfig56.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.startUpHook;
        atmosphereConfig59.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray63 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList64, atmosphereHandlerConfigArray63);
        atmosphereConfig59.atmosphereHandlerConfig = atmosphereHandlerConfigList64;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig58.populate(atmosphereConfig59);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig58.getstartUpHook();
        atmosphereConfig56.startUpHook = startupHookList68;
        atmosphereConfig47.setstartUpHook(startupHookList68);
        atmosphereConfig11.startUpHook = startupHookList68;
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig11.properties;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(startupHookList68);
        org.junit.Assert.assertNotNull(strMap72);
    }

    @Test
    public void test02277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02277");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.startupHook(startupHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig5.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig5.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        boolean boolean10 = atmosphereConfig5.supportSession;
        boolean boolean11 = atmosphereConfig5.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig19.getstartUpHook();
        atmosphereConfig5.startUpHook = startupHookList24;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig5.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        atmosphereConfig27.setproperties(strMap28);
        boolean boolean30 = atmosphereConfig27.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig27.getproperties();
        org.slf4j.Logger logger32 = atmosphereConfig27.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig27.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig27.getAtmosphereHandlerConfig();
        atmosphereConfig5.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig37.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig37.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        boolean boolean42 = atmosphereConfig41.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig5.setproperties(strMap43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig5.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig5.startupHook(startupHook46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.startUpHook;
        boolean boolean50 = atmosphereConfig48.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig48.framework;
        org.slf4j.Logger logger52 = atmosphereConfig48.getlogger();
        boolean boolean53 = atmosphereConfig48.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig48.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig48.getproperties();
        atmosphereConfig47.properties = strMap55;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig47.properties();
        atmosphereConfig4.properties = strMap57;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider59 = atmosphereConfig4.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertNotNull(logger52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap57);
    }

    @Test
    public void test02278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02278");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        org.slf4j.Logger logger10 = atmosphereConfig8.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig8.startUpHook;
        atmosphereConfig8.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig8.framework = atmosphereFramework13;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(startupHookList11);
    }

    @Test
    public void test02279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02279");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.lang.String str4 = atmosphereConfig0.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig0.framework = atmosphereFramework6;
        boolean boolean8 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test02280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02280");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        atmosphereConfig9.setproperties(strMap10);
        boolean boolean12 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig9.getproperties();
        boolean boolean14 = atmosphereConfig9.isSupportSession();
        atmosphereConfig9.setThrowExceptionOnCloned(true);
        boolean boolean17 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        boolean boolean20 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        boolean boolean21 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig18.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig18.framework = atmosphereFramework23;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig18.startupHook(startupHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig18.startupHook(startupHook27);
        boolean boolean29 = atmosphereConfig28.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig28.setframework(atmosphereFramework30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig28.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.shutdownHooks;
        boolean boolean36 = atmosphereConfig33.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig33.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = null;
        atmosphereConfig38.setproperties(strMap39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig33.populate(atmosphereConfig38);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        atmosphereConfig41.setframework(atmosphereFramework42);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig41.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.startUpHook;
        java.lang.String str49 = atmosphereConfig45.getInitParameter("", "");
        boolean boolean50 = atmosphereConfig45.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig45.getstartUpHook();
        atmosphereConfig41.setstartUpHook(startupHookList51);
        atmosphereConfig28.startUpHook = startupHookList51;
        boolean boolean54 = atmosphereConfig28.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig9.populate(atmosphereConfig28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList56;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap58 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
    }

    @Test
    public void test02281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02281");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean4 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig0.startUpHook;
        boolean boolean6 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        java.lang.String str10 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(startupHookList14);
    }

    @Test
    public void test02282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02282");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig1.startUpHook;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray5 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList6, atmosphereHandlerConfigArray5);
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig1);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig9.getframework();
        boolean boolean11 = atmosphereConfig9.isThrowExceptionOnCloned();
        atmosphereConfig9.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig14.shutdownHooks = shutdownHookList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = null;
        atmosphereConfig21.setshutdownHooks(shutdownHookList23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig14.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig26.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30, shutdownHookArray29);
        atmosphereConfig26.shutdownHooks = shutdownHookList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = null;
        atmosphereConfig33.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig26.populate(atmosphereConfig33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig26.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig26.getproperties();
        atmosphereConfig21.properties = strMap39;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig21.startupHook(startupHook41);
        atmosphereConfig42.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.shutdownHooks;
        atmosphereConfig42.setshutdownHooks(shutdownHookList47);
        atmosphereConfig9.setshutdownHooks(shutdownHookList47);
        atmosphereConfig9.setSupportSession(false);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory52 = atmosphereConfig9.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(shutdownHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
    }

    @Test
    public void test02283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02283");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.shutdownHooks;
        boolean boolean12 = atmosphereConfig9.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig9.populate(atmosphereConfig14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig14.getstartUpHook();
        atmosphereConfig8.startUpHook = startupHookList18;
        atmosphereConfig8.setuseServletContextParameters(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig8.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig8.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig24 = atmosphereConfig8.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
    }

    @Test
    public void test02284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02284");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.shutdownHooks;
        boolean boolean13 = atmosphereConfig10.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig10.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig10);
        atmosphereConfig10.destroy();
        boolean boolean17 = atmosphereConfig10.getuseServletContextParameters();
        boolean boolean20 = atmosphereConfig10.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig21.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig21.setframework(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig21.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig21.startupHook(startupHook27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig28.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig10.setproperties(strMap30);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test02285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02285");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        boolean boolean4 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig5.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig5.shutdownHooks;
        atmosphereConfig5.setSessionTimeoutRemovalAllowed(false);
        boolean boolean10 = atmosphereConfig5.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        boolean boolean13 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        boolean boolean14 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig11.properties();
        atmosphereConfig11.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig11.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig5.populate(atmosphereConfig11);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig19.properties();
        java.lang.String str22 = atmosphereConfig19.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig23.shutdownHooks;
        boolean boolean26 = atmosphereConfig23.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig23.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig23.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig29.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = null;
        atmosphereConfig29.setframework(atmosphereFramework32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig29.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig29.startUpHook;
        atmosphereConfig23.setstartUpHook(startupHookList35);
        atmosphereConfig19.setstartUpHook(startupHookList35);
        atmosphereConfig0.setstartUpHook(startupHookList35);
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig0.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory42 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNull(atmosphereFramework34);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
    }

    @Test
    public void test02286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02286");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig0.setproperties(strMap9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.lang.String str15 = atmosphereConfig11.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig11.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig11.framework = atmosphereFramework17;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList19;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig0.getframework();
        java.lang.String str28 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig0.framework = atmosphereFramework29;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test02287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02287");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig4.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig4.startupHook(startupHook7);
        java.lang.String str10 = atmosphereConfig8.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.startupHook(startupHook11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration13 = atmosphereConfig8.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
    }

    @Test
    public void test02288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02288");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.setframework(atmosphereFramework4);
        atmosphereConfig0.useServletContextParameters = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        atmosphereConfig9.setproperties(strMap10);
        boolean boolean12 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig9.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray14 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList15, shutdownHookArray14);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList15);
        boolean boolean20 = atmosphereConfig9.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig9.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig22.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig22.setframework(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig22.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig22.startupHook(startupHook28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig22.properties();
        atmosphereConfig9.properties = strMap30;
        boolean boolean32 = atmosphereConfig9.throwExceptionOnCloned;
        atmosphereConfig9.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = null;
        atmosphereConfig35.setproperties(strMap36);
        boolean boolean38 = atmosphereConfig35.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig35.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig35.setframework(atmosphereFramework40);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig35.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig35.startupHook(startupHook43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig44.getframework();
        atmosphereConfig44.useServletContextParameters = false;
        boolean boolean50 = atmosphereConfig44.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig9.populate(atmosphereConfig44);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig51.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList52;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration54 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(shutdownHookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(shutdownHookList52);
    }

    @Test
    public void test02289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02289");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig8.getuseServletContextParameters();
        atmosphereConfig8.useServletContextParameters = false;
        boolean boolean13 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig14.shutdownHooks;
        boolean boolean17 = atmosphereConfig14.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig14.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig14.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig20.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig20.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig20.startUpHook;
        atmosphereConfig14.setstartUpHook(startupHookList26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig14.getshutdownHooks();
        atmosphereConfig8.setshutdownHooks(shutdownHookList28);
        atmosphereConfig8.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig32.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig32.setframework(atmosphereFramework35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig32.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig32.startUpHook;
        atmosphereConfig8.setstartUpHook(startupHookList38);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig8.setSupportSession(true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(shutdownHookList19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNull(atmosphereFramework34);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(startupHookList40);
    }

    @Test
    public void test02290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02290");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.lang.String str4 = atmosphereConfig0.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.setframework(atmosphereFramework8);
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        atmosphereConfig15.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray19 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList20, atmosphereHandlerConfigArray19);
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig14.populate(atmosphereConfig15);
        org.slf4j.Logger logger24 = atmosphereConfig23.getlogger();
        int int27 = atmosphereConfig23.getInitParameter("", 1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.populate(atmosphereConfig23);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig23.shutdownHooks;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(logger24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
    }

    @Test
    public void test02291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02291");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(true);
        boolean boolean12 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        atmosphereConfig13.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17, shutdownHookArray16);
        atmosphereConfig13.shutdownHooks = shutdownHookList17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.setshutdownHooks(shutdownHookList22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig13.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig20.getstartUpHook();
        boolean boolean26 = atmosphereConfig20.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig20.setframework(atmosphereFramework27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig20.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig31.getshutdownHooks();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNull(shutdownHookList32);
    }

    @Test
    public void test02292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02292");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.setframework(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig17.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
    }

    @Test
    public void test02293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02293");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.slf4j.Logger logger9 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig10.setproperties(strMap11);
        boolean boolean13 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig8.startUpHook = startupHookList14;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig8.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig8.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.setshutdownHooks(shutdownHookList22);
        boolean boolean24 = atmosphereConfig20.useServletContextParameters;
        atmosphereConfig20.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.properties;
        atmosphereConfig8.setproperties(strMap27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig8.getshutdownHooks();
        boolean boolean30 = atmosphereConfig8.isThrowExceptionOnCloned();
        atmosphereConfig8.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig8.setSupportSession(true);
        boolean boolean36 = atmosphereConfig8.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test02294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02294");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setuseServletContextParameters(true);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(shutdownHookList16);
    }

    @Test
    public void test02295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02295");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.getuseServletContextParameters();
        atmosphereConfig7.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig7.framework();
        atmosphereConfig7.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig7.setframework(atmosphereFramework14);
        org.slf4j.Logger logger16 = atmosphereConfig7.getlogger();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory17 = atmosphereConfig7.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(logger16);
    }

    @Test
    public void test02296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02296");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig7.getstartUpHook();
        boolean boolean13 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig7.setframework(atmosphereFramework14);
        boolean boolean16 = atmosphereConfig7.useServletContextParameters;
        atmosphereConfig7.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig7.framework = atmosphereFramework19;
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        atmosphereConfig7.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test02297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02297");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        boolean boolean9 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.useServletContextParameters = true;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext12 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test02298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02298");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray2 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList3 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList3, atmosphereHandlerConfigArray2);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList3;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig7.shutdownHooks;
        java.lang.String str11 = atmosphereConfig7.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig7.getstartUpHook();
        java.lang.String str15 = atmosphereConfig7.getInitParameter("hi!", "");
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test02299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02299");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig8.shutdownHooks;
        boolean boolean11 = atmosphereConfig8.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig8.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        atmosphereConfig13.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig8.populate(atmosphereConfig13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.lang.String str21 = atmosphereConfig17.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.atmosphereHandlerConfig;
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig28.shutdownHooks;
        boolean boolean31 = atmosphereConfig28.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig28.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        atmosphereConfig33.setproperties(strMap34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig28.populate(atmosphereConfig33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig36.setframework(atmosphereFramework37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig36.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig40.startUpHook;
        java.lang.String str44 = atmosphereConfig40.getInitParameter("", "");
        boolean boolean45 = atmosphereConfig40.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig40.getstartUpHook();
        atmosphereConfig36.setstartUpHook(startupHookList46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig0.populate(atmosphereConfig36);
        boolean boolean49 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray52 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList53, atmosphereHandlerConfigArray52);
        atmosphereConfig50.atmosphereHandlerConfig = atmosphereHandlerConfigList53;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig50.startupHook(startupHook56);
        boolean boolean58 = atmosphereConfig50.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig50.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList59);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration61 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(startupHookList59);
    }

    @Test
    public void test02300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02300");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig8.setproperties(strMap9);
        boolean boolean11 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig8.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig8.setframework(atmosphereFramework13);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.startupHook(startupHook16);
        org.slf4j.Logger logger18 = atmosphereConfig17.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig17.shutdownHooks = shutdownHookList20;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig17.shutdownHooks;
        atmosphereConfig17.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig17.framework = atmosphereFramework26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.populate(atmosphereConfig17);
        atmosphereConfig28.useServletContextParameters = true;
        java.lang.String str33 = atmosphereConfig28.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig28.shutdownHook(shutdownHook34);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory36 = atmosphereConfig28.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(atmosphereConfig35);
    }

    @Test
    public void test02301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02301");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig9.getframework();
        atmosphereConfig9.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        atmosphereConfig13.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17, shutdownHookArray16);
        atmosphereConfig13.shutdownHooks = shutdownHookList17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.setshutdownHooks(shutdownHookList22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig13.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig20.getstartUpHook();
        boolean boolean26 = atmosphereConfig20.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig20.setframework(atmosphereFramework27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig20.setframework(atmosphereFramework29);
        atmosphereConfig20.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        boolean boolean35 = atmosphereConfig33.sessionTimeoutRemovalAllowed;
        boolean boolean36 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig33.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig33.framework = atmosphereFramework38;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig33.startupHook(startupHook40);
        atmosphereConfig33.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig33.properties();
        atmosphereConfig20.setproperties(strMap43);
        atmosphereConfig9.setproperties(strMap43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap46 = atmosphereConfig9.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(shutdownHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test02302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02302");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        atmosphereConfig9.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray13 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList14, atmosphereHandlerConfigArray13);
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig17.getframework();
        boolean boolean19 = atmosphereConfig17.isThrowExceptionOnCloned();
        atmosphereConfig17.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        atmosphereConfig22.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig22.shutdownHooks = shutdownHookList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = null;
        atmosphereConfig29.setshutdownHooks(shutdownHookList31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig22.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        atmosphereConfig34.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray37 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList38, shutdownHookArray37);
        atmosphereConfig34.shutdownHooks = shutdownHookList38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = null;
        atmosphereConfig41.setshutdownHooks(shutdownHookList43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig34.populate(atmosphereConfig41);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig34.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig34.getproperties();
        atmosphereConfig29.properties = strMap47;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig29.startupHook(startupHook49);
        atmosphereConfig50.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig53.shutdownHooks;
        atmosphereConfig50.setshutdownHooks(shutdownHookList55);
        atmosphereConfig17.setshutdownHooks(shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig58.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = atmosphereConfig58.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        atmosphereConfig58.setframework(atmosphereFramework61);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = atmosphereConfig58.getframework();
        java.lang.String str66 = atmosphereConfig58.getInitParameter("hi!", "hi!");
        atmosphereConfig58.initComplete();
        boolean boolean68 = atmosphereConfig58.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig58.getproperties();
        atmosphereConfig17.properties = strMap69;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig17.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig7.populate(atmosphereConfig17);
        atmosphereConfig7.supportSession = false;
        boolean boolean75 = atmosphereConfig7.isSupportSession();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(shutdownHookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertNull(atmosphereFramework60);
        org.junit.Assert.assertNull(atmosphereFramework63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test02303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02303");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList13, startupHookArray12);
        atmosphereConfig11.startUpHook = startupHookList13;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig11.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig11.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig11.framework();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = atmosphereFramework18.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNull(shutdownHookList17);
        org.junit.Assert.assertNull(atmosphereFramework18);
    }

    @Test
    public void test02304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02304");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean7 = atmosphereConfig0.getInitParameter("", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test02305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02305");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.startupHook(startupHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.getframework();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("", "");
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(atmosphereFramework11);
    }

    @Test
    public void test02306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02306");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean4 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig0.startUpHook;
        boolean boolean6 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        java.lang.String str10 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext12 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(atmosphereFramework11);
    }

    @Test
    public void test02307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02307");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        boolean boolean11 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean12 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig0.getframework();
        boolean boolean16 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        atmosphereConfig17.setproperties(strMap18);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig17.shutdownHooks = shutdownHookList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = null;
        atmosphereConfig24.setshutdownHooks(shutdownHookList26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig17.populate(atmosphereConfig24);
        boolean boolean29 = atmosphereConfig24.throwExceptionOnCloned;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig24.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
    }

    @Test
    public void test02308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02308");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        boolean boolean14 = atmosphereConfig13.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = null;
        atmosphereConfig13.shutdownHooks = shutdownHookList15;
        // The following exception was thrown during execution in test generation
        try {
            atmosphereConfig13.destroy();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test02309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02309");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext9 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
    }

    @Test
    public void test02310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02310");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.getuseServletContextParameters();
        atmosphereConfig7.sessionTimeoutRemovalAllowed = false;
        boolean boolean11 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig7.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig7.startUpHook;
        java.lang.String str17 = atmosphereConfig7.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig7.framework = atmosphereFramework18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        atmosphereConfig20.setproperties(strMap21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig20.shutdownHooks = shutdownHookList24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = null;
        atmosphereConfig27.setshutdownHooks(shutdownHookList29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig20.populate(atmosphereConfig27);
        boolean boolean32 = atmosphereConfig31.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig31.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        atmosphereConfig34.setproperties(strMap35);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray37 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList38, shutdownHookArray37);
        atmosphereConfig34.shutdownHooks = shutdownHookList38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = null;
        atmosphereConfig41.setshutdownHooks(shutdownHookList43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig34.populate(atmosphereConfig41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        atmosphereConfig46.setproperties(strMap47);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray49 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList50, shutdownHookArray49);
        atmosphereConfig46.shutdownHooks = shutdownHookList50;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = null;
        atmosphereConfig53.setshutdownHooks(shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig46.populate(atmosphereConfig53);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = atmosphereConfig46.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig46.getproperties();
        atmosphereConfig41.properties = strMap59;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig41.startupHook(startupHook61);
        boolean boolean63 = atmosphereConfig41.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig41.startupHook(startupHook64);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = null;
        atmosphereConfig66.setproperties(strMap67);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray69 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList70 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList70, shutdownHookArray69);
        atmosphereConfig66.shutdownHooks = shutdownHookList70;
        atmosphereConfig65.shutdownHooks = shutdownHookList70;
        atmosphereConfig31.shutdownHooks = shutdownHookList70;
        atmosphereConfig7.shutdownHooks = shutdownHookList70;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(shutdownHookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(shutdownHookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNull(atmosphereFramework58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(shutdownHookArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test02311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02311");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig11.startUpHook;
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig11.setuseServletContextParameters(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig11.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider19 = atmosphereConfig11.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test02312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02312");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        atmosphereConfig28.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig28.getproperties();
        boolean boolean32 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        atmosphereConfig28.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig35.getframework();
        org.slf4j.Logger logger38 = atmosphereConfig35.getlogger();
        java.lang.String str40 = atmosphereConfig35.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig35.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig28.populate(atmosphereConfig35);
        boolean boolean43 = atmosphereConfig35.supportSession;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertNotNull(logger38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test02313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02313");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        int int5 = atmosphereConfig0.getInitParameter("hi!", 1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.initComplete();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory9 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
    }

    @Test
    public void test02314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02314");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        org.slf4j.Logger logger12 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.framework = atmosphereFramework13;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test02315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02315");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        atmosphereConfig7.setproperties(strMap8);
        boolean boolean10 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig7.getproperties();
        boolean boolean12 = atmosphereConfig7.useServletContextParameters;
        atmosphereConfig7.setSupportSession(true);
        org.slf4j.Logger logger15 = atmosphereConfig7.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig7.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        atmosphereConfig7.startUpHook = startupHookList18;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig7.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig7.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.populate(atmosphereConfig7);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster23 = atmosphereConfig7.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
    }

    @Test
    public void test02316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02316");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.framework = atmosphereFramework7;
        boolean boolean9 = atmosphereConfig6.useServletContextParameters;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig6.setSessionTimeoutRemovalAllowed(true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster14 = atmosphereConfig6.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02317");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig7.getstartUpHook();
        boolean boolean13 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig7.setframework(atmosphereFramework14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig7.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig18.shutdownHooks;
        boolean boolean21 = atmosphereConfig18.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig18.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        atmosphereConfig23.setproperties(strMap24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig18.populate(atmosphereConfig23);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig18.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        java.lang.String str33 = atmosphereConfig29.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig29.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig29.framework = atmosphereFramework35;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig29.startUpHook;
        atmosphereConfig18.startUpHook = startupHookList37;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig18.framework();
        atmosphereConfig18.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig18.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig18.properties;
        org.slf4j.Logger logger44 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig18.shutdownHook(shutdownHook45);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig7.shutdownHooks = shutdownHookList47;
        java.lang.Class<?> wildcardClass49 = atmosphereConfig7.getClass();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(logger44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test02318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02318");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        atmosphereConfig13.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17, shutdownHookArray16);
        atmosphereConfig13.shutdownHooks = shutdownHookList17;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig13.getstartUpHook();
        atmosphereConfig11.setstartUpHook(startupHookList20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig22.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.startupHook(startupHook27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig26.startUpHook;
        atmosphereConfig11.setstartUpHook(startupHookList29);
        atmosphereConfig11.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig11.shutdownHook(shutdownHook33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
    }

    @Test
    public void test02319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02319");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig8.setproperties(strMap9);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        boolean boolean15 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.lang.String str17 = atmosphereConfig8.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig8.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider21 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
    }

    @Test
    public void test02320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02320");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig6.startUpHook;
        boolean boolean8 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig6.properties();
        atmosphereConfig6.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig6.startupHook(startupHook12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig13.properties();
        atmosphereConfig0.properties = strMap14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.lang.String str20 = atmosphereConfig16.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.atmosphereHandlerConfig;
        atmosphereConfig16.throwExceptionOnCloned = false;
        boolean boolean26 = atmosphereConfig16.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig16.setframework(atmosphereFramework27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig16.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.populate(atmosphereConfig16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig30.framework = atmosphereFramework31;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        boolean boolean35 = atmosphereConfig33.sessionTimeoutRemovalAllowed;
        boolean boolean36 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig33.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig33.startupHook(startupHook38);
        boolean boolean40 = atmosphereConfig39.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        atmosphereConfig42.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray46 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList47, atmosphereHandlerConfigArray46);
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig41.populate(atmosphereConfig42);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig41.getstartUpHook();
        atmosphereConfig39.startUpHook = startupHookList51;
        atmosphereConfig30.setstartUpHook(startupHookList51);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = null;
        atmosphereConfig30.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig30.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNull(atmosphereHandlerConfigList56);
    }

    @Test
    public void test02321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02321");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        boolean boolean9 = atmosphereConfig8.isSupportSession();
        boolean boolean10 = atmosphereConfig8.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap11 = atmosphereConfig8.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test02322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02322");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.getproperties();
        java.lang.String str16 = atmosphereConfig0.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.supportSession = false;
        boolean boolean20 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.getframework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory22 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(atmosphereFramework21);
    }

    @Test
    public void test02323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02323");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig0.shutdownHooks = shutdownHookList7;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration12 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
    }

    @Test
    public void test02324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02324");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        boolean boolean9 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        boolean boolean12 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        boolean boolean13 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig10.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        atmosphereConfig15.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = null;
        atmosphereConfig22.setshutdownHooks(shutdownHookList24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig15.populate(atmosphereConfig22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig15.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig15.getproperties();
        atmosphereConfig10.setproperties(strMap28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig10.setframework(atmosphereFramework30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig8.populate(atmosphereConfig10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig32.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory34 = atmosphereConfig32.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
    }

    @Test
    public void test02325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02325");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        boolean boolean5 = atmosphereConfig0.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration6 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test02326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02326");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        boolean boolean9 = atmosphereConfig8.isSupportSession();
        boolean boolean10 = atmosphereConfig8.supportSession;
        atmosphereConfig8.setSupportSession(true);
        boolean boolean13 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            atmosphereConfig8.destroy();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test02327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02327");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig6.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        atmosphereConfig9.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray13 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList14, atmosphereHandlerConfigArray13);
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.populate(atmosphereConfig9);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig6.startUpHook = startupHookList18;
        atmosphereConfig6.throwExceptionOnCloned = true;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory22 = atmosphereConfig6.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookList18);
    }

    @Test
    public void test02328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02328");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.lang.String str14 = atmosphereConfig11.getInitParameter("", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig11.properties();
        org.slf4j.Logger logger16 = atmosphereConfig11.getlogger();
        int int19 = atmosphereConfig11.getInitParameter("", 97);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig11.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig11.getframework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider22 = atmosphereConfig11.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(atmosphereFramework21);
    }

    @Test
    public void test02329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02329");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.slf4j.Logger logger9 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig10.setproperties(strMap11);
        boolean boolean13 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig8.startUpHook = startupHookList14;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig8.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig8.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.setshutdownHooks(shutdownHookList22);
        boolean boolean24 = atmosphereConfig20.useServletContextParameters;
        atmosphereConfig20.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.properties;
        atmosphereConfig8.setproperties(strMap27);
        boolean boolean31 = atmosphereConfig8.getInitParameter("", true);
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig8.shutdownHook(shutdownHook34);
        boolean boolean36 = atmosphereConfig35.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test02330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02330");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        boolean boolean9 = atmosphereConfig8.isSupportSession();
        boolean boolean10 = atmosphereConfig8.supportSession;
        atmosphereConfig8.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        atmosphereConfig16.setproperties(strMap17);
        boolean boolean19 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig16.getstartUpHook();
        atmosphereConfig16.supportSession = false;
        org.slf4j.Logger logger23 = atmosphereConfig16.getlogger();
        boolean boolean24 = atmosphereConfig16.isSupportSession();
        atmosphereConfig16.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig8.populate(atmosphereConfig16);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig28 = atmosphereConfig8.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
    }

    @Test
    public void test02331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02331");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        atmosphereConfig9.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig9.framework;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNull(atmosphereFramework16);
    }

    @Test
    public void test02332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02332");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig9.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig9.setframework(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig5.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig5.getframework();
        atmosphereConfig5.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig5.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig5.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig5.setframework(atmosphereFramework21);
        atmosphereConfig5.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig5.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig5.framework();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNull(atmosphereFramework25);
    }

    @Test
    public void test02333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02333");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray8 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList9, shutdownHookArray8);
        atmosphereConfig5.shutdownHooks = shutdownHookList9;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = null;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig5.populate(atmosphereConfig12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig5.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig5.getproperties();
        atmosphereConfig0.setproperties(strMap18);
        boolean boolean20 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig0.getframework();
        boolean boolean24 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test02334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02334");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.setframework(atmosphereFramework9);
        java.lang.String str13 = atmosphereConfig8.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig8.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        atmosphereConfig15.setproperties(strMap16);
        boolean boolean18 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig15.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig15.setframework(atmosphereFramework20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig15.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig15.startupHook(startupHook23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig24.getframework();
        atmosphereConfig24.useServletContextParameters = false;
        atmosphereConfig24.supportSession = true;
        boolean boolean30 = atmosphereConfig24.getuseServletContextParameters();
        org.slf4j.Logger logger31 = atmosphereConfig24.getlogger();
        boolean boolean32 = atmosphereConfig24.getuseServletContextParameters();
        java.lang.String str35 = atmosphereConfig24.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig8.populate(atmosphereConfig24);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider37 = atmosphereConfig24.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(atmosphereConfig36);
    }

    @Test
    public void test02335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02335");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig1.startUpHook;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray5 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList6, atmosphereHandlerConfigArray5);
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig1);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig9.getframework();
        boolean boolean11 = atmosphereConfig9.isThrowExceptionOnCloned();
        atmosphereConfig9.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig14.shutdownHooks = shutdownHookList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = null;
        atmosphereConfig21.setshutdownHooks(shutdownHookList23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig14.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig26.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30, shutdownHookArray29);
        atmosphereConfig26.shutdownHooks = shutdownHookList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = null;
        atmosphereConfig33.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig26.populate(atmosphereConfig33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig26.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig26.getproperties();
        atmosphereConfig21.properties = strMap39;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig21.startupHook(startupHook41);
        atmosphereConfig42.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.shutdownHooks;
        atmosphereConfig42.setshutdownHooks(shutdownHookList47);
        atmosphereConfig9.setshutdownHooks(shutdownHookList47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = atmosphereConfig50.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        atmosphereConfig50.setframework(atmosphereFramework53);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig50.getframework();
        java.lang.String str58 = atmosphereConfig50.getInitParameter("hi!", "hi!");
        atmosphereConfig50.initComplete();
        boolean boolean60 = atmosphereConfig50.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig50.getproperties();
        atmosphereConfig9.properties = strMap61;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig9.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory64 = atmosphereConfig9.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(shutdownHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNull(atmosphereFramework52);
        org.junit.Assert.assertNull(atmosphereFramework55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
    }

    @Test
    public void test02336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02336");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig1.startUpHook;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray5 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList6, atmosphereHandlerConfigArray5);
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig1);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig9.getframework();
        boolean boolean11 = atmosphereConfig9.isThrowExceptionOnCloned();
        atmosphereConfig9.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig14.shutdownHooks = shutdownHookList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = null;
        atmosphereConfig21.setshutdownHooks(shutdownHookList23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig14.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig26.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30, shutdownHookArray29);
        atmosphereConfig26.shutdownHooks = shutdownHookList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = null;
        atmosphereConfig33.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig26.populate(atmosphereConfig33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig26.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig26.getproperties();
        atmosphereConfig21.properties = strMap39;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig21.startupHook(startupHook41);
        atmosphereConfig42.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.shutdownHooks;
        atmosphereConfig42.setshutdownHooks(shutdownHookList47);
        atmosphereConfig9.setshutdownHooks(shutdownHookList47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = atmosphereConfig50.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        atmosphereConfig50.setframework(atmosphereFramework53);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig50.getframework();
        java.lang.String str58 = atmosphereConfig50.getInitParameter("hi!", "hi!");
        atmosphereConfig50.initComplete();
        boolean boolean60 = atmosphereConfig50.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig50.getproperties();
        atmosphereConfig9.properties = strMap61;
        boolean boolean63 = atmosphereConfig9.isThrowExceptionOnCloned();
        boolean boolean64 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        boolean boolean65 = atmosphereConfig9.isThrowExceptionOnCloned();
        int int68 = atmosphereConfig9.getInitParameter("", (int) '4');
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(shutdownHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNull(atmosphereFramework52);
        org.junit.Assert.assertNull(atmosphereFramework55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
    }

    @Test
    public void test02337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02337");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig6.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig6.shutdownHooks;
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig6.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        atmosphereConfig11.setproperties(strMap12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig6.populate(atmosphereConfig11);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig6.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.lang.String str21 = atmosphereConfig17.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig17.framework = atmosphereFramework23;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig17.startUpHook;
        atmosphereConfig6.startUpHook = startupHookList25;
        atmosphereConfig0.setstartUpHook(startupHookList25);
        boolean boolean28 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean29 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig30.startUpHook;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray32 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList33, atmosphereHandlerConfigArray32);
        atmosphereConfig30.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig30.startupHook(startupHook36);
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig30.shutdownHook(shutdownHook40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig41.properties();
        atmosphereConfig0.properties = strMap42;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(strMap42);
    }

    @Test
    public void test02338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02338");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig10.setproperties(strMap11);
        boolean boolean13 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig10.getproperties();
        boolean boolean15 = atmosphereConfig10.useServletContextParameters;
        atmosphereConfig10.setSupportSession(true);
        org.slf4j.Logger logger18 = atmosphereConfig10.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig10.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        atmosphereConfig10.startUpHook = startupHookList21;
        atmosphereConfig0.startUpHook = startupHookList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig24.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        boolean boolean29 = atmosphereConfig24.getuseServletContextParameters();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig24.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        boolean boolean32 = atmosphereConfig0.useServletContextParameters;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test02339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02339");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.startupHook(startupHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig5.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig5.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        boolean boolean10 = atmosphereConfig5.supportSession;
        boolean boolean11 = atmosphereConfig5.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig19.getstartUpHook();
        atmosphereConfig5.startUpHook = startupHookList24;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig5.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        atmosphereConfig27.setproperties(strMap28);
        boolean boolean30 = atmosphereConfig27.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig27.getproperties();
        org.slf4j.Logger logger32 = atmosphereConfig27.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig27.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig27.getAtmosphereHandlerConfig();
        atmosphereConfig5.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig37.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig37.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        boolean boolean42 = atmosphereConfig41.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig5.setproperties(strMap43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig5.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig5.startupHook(startupHook46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.startUpHook;
        boolean boolean50 = atmosphereConfig48.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig48.framework;
        org.slf4j.Logger logger52 = atmosphereConfig48.getlogger();
        boolean boolean53 = atmosphereConfig48.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig48.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig48.getproperties();
        atmosphereConfig47.properties = strMap55;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig47.properties();
        atmosphereConfig4.properties = strMap57;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = atmosphereConfig4.getframework();
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertNotNull(logger52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(atmosphereFramework59);
    }

    @Test
    public void test02340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02340");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.lang.String str4 = atmosphereConfig0.getInitParameter("", "");
        boolean boolean5 = atmosphereConfig0.supportSession;
        boolean boolean6 = atmosphereConfig0.isSupportSession();
        boolean boolean7 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test02341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02341");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig9.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig9.setframework(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig9.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig9.startUpHook;
        atmosphereConfig6.startUpHook = startupHookList15;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig6.startupHook(startupHook17);
        atmosphereConfig18.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        boolean boolean23 = atmosphereConfig21.sessionTimeoutRemovalAllowed;
        boolean boolean24 = atmosphereConfig21.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig21.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig21.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig27.framework = atmosphereFramework28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig30.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig30.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig30.setframework(atmosphereFramework33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig30.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig30.startUpHook;
        atmosphereConfig27.startUpHook = startupHookList36;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig27.startupHook(startupHook38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig27.properties;
        atmosphereConfig18.properties = strMap40;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig18.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig18.getAtmosphereHandlerConfig();
        java.lang.String str46 = atmosphereConfig18.getInitParameter("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster47 = atmosphereConfig18.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(atmosphereFramework42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test02342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02342");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray4 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList5, atmosphereHandlerConfigArray4);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.lang.String str11 = atmosphereConfig0.getInitParameter("", "");
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
    }

    @Test
    public void test02343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02343");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray4 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList5, atmosphereHandlerConfigArray4);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean9 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        atmosphereConfig0.properties = strMap12;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory14 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(atmosphereFramework11);
    }

    @Test
    public void test02344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02344");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        int int3 = atmosphereConfig0.getInitParameter("", (int) 'a');
        atmosphereConfig0.setuseServletContextParameters(false);
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean10 = atmosphereConfig0.getInitParameter("hi!", false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 97 + "'", int3 == 97);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test02345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02345");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.slf4j.Logger logger12 = atmosphereConfig0.getlogger();
        boolean boolean13 = atmosphereConfig0.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        atmosphereConfig15.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = null;
        atmosphereConfig22.setshutdownHooks(shutdownHookList24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig15.populate(atmosphereConfig22);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig22.properties;
        atmosphereConfig0.properties = strMap27;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.startupHook(startupHook29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig30.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = null;
        atmosphereConfig30.framework = atmosphereFramework32;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig30.setframework(atmosphereFramework34);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test02346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02346");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        boolean boolean12 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        boolean boolean13 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig10.properties();
        atmosphereConfig10.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig10.startupHook(startupHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.properties();
        atmosphereConfig9.properties = strMap18;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig9.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig21.framework;
        atmosphereConfig21.destroy();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNull(atmosphereFramework22);
    }

    @Test
    public void test02347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02347");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.supportSession = false;
        org.slf4j.Logger logger7 = atmosphereConfig0.getlogger();
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.supportSession = false;
        boolean boolean11 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setuseServletContextParameters(true);
        java.lang.String str16 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory17 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test02348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02348");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.supportSession;
        int int8 = atmosphereConfig0.getInitParameter("", (int) (short) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        atmosphereConfig9.setproperties(strMap10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList13, shutdownHookArray12);
        atmosphereConfig9.shutdownHooks = shutdownHookList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = null;
        atmosphereConfig16.setshutdownHooks(shutdownHookList18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig9.populate(atmosphereConfig16);
        boolean boolean21 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        atmosphereConfig22.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig22.shutdownHooks = shutdownHookList26;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig22.getstartUpHook();
        atmosphereConfig20.setstartUpHook(startupHookList29);
        atmosphereConfig0.startUpHook = startupHookList29;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig0.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig0.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster34 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shutdownHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test02349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02349");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.getproperties();
        java.lang.String str16 = atmosphereConfig0.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean20 = atmosphereConfig0.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        atmosphereConfig23.setproperties(strMap24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList27, shutdownHookArray26);
        atmosphereConfig23.shutdownHooks = shutdownHookList27;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig23.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig32.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig36.properties();
        atmosphereConfig23.setproperties(strMap37);
        atmosphereConfig0.properties = strMap37;
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        atmosphereConfig43.setproperties(strMap44);
        boolean boolean46 = atmosphereConfig43.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig43.getstartUpHook();
        boolean boolean48 = atmosphereConfig43.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig49.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig49.shutdownHooks;
        boolean boolean52 = atmosphereConfig49.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig49.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = null;
        atmosphereConfig54.setproperties(strMap55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig49.populate(atmosphereConfig54);
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = null;
        atmosphereConfig49.setproperties(strMap58);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig60.startUpHook;
        java.lang.String str64 = atmosphereConfig60.getInitParameter("", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig60.getshutdownHooks();
        atmosphereConfig49.shutdownHooks = shutdownHookList65;
        atmosphereConfig43.shutdownHooks = shutdownHookList65;
        atmosphereConfig0.shutdownHooks = shutdownHookList65;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = null;
        atmosphereConfig0.framework = atmosphereFramework69;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(shutdownHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(shutdownHookList65);
    }

    @Test
    public void test02350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02350");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        int int3 = atmosphereConfig0.getInitParameter("", (int) 'a');
        atmosphereConfig0.setuseServletContextParameters(false);
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig8.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig8.setframework(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig8.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.startupHook(startupHook14);
        boolean boolean16 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig8.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        atmosphereConfig18.setproperties(strMap19);
        boolean boolean21 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig18.getproperties();
        boolean boolean23 = atmosphereConfig18.useServletContextParameters;
        atmosphereConfig18.setSupportSession(true);
        org.slf4j.Logger logger26 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig18.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        atmosphereConfig18.startUpHook = startupHookList29;
        atmosphereConfig8.startUpHook = startupHookList29;
        atmosphereConfig0.startUpHook = startupHookList29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        atmosphereConfig33.setproperties(strMap34);
        boolean boolean36 = atmosphereConfig33.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig33.getstartUpHook();
        boolean boolean38 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        atmosphereConfig39.setproperties(strMap40);
        boolean boolean42 = atmosphereConfig39.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig39.getproperties();
        atmosphereConfig39.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig39.shutdownHooks = shutdownHookList46;
        atmosphereConfig33.shutdownHooks = shutdownHookList46;
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46);
        boolean boolean51 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig0.framework = atmosphereFramework52;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 97 + "'", int3 == 97);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(logger26);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test02351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02351");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList13, startupHookArray12);
        atmosphereConfig11.startUpHook = startupHookList13;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig11.startUpHook;
        boolean boolean17 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig11.setframework(atmosphereFramework18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig11.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig11.properties;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory22 = atmosphereConfig11.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test02352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02352");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties;
        atmosphereConfig0.initComplete();
        org.slf4j.Logger logger9 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = null;
        atmosphereConfig10.setshutdownHooks(shutdownHookList12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig10.setframework(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig10.startupHook(startupHook16);
        boolean boolean18 = atmosphereConfig17.getuseServletContextParameters();
        atmosphereConfig17.sessionTimeoutRemovalAllowed = false;
        boolean boolean21 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig17.startupHook(startupHook22);
        boolean boolean26 = atmosphereConfig23.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.lang.String str31 = atmosphereConfig27.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig27.atmosphereHandlerConfig;
        atmosphereConfig27.throwExceptionOnCloned = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig27.shutdownHooks;
        atmosphereConfig23.setshutdownHooks(shutdownHookList35);
        atmosphereConfig0.setshutdownHooks(shutdownHookList35);
        java.lang.Class<?> wildcardClass38 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test02353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02353");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        boolean boolean29 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig7.startupHook(startupHook30);
        atmosphereConfig31.initComplete();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider33 = atmosphereConfig31.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
    }

    @Test
    public void test02354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02354");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean7 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = null;
        atmosphereConfig8.setshutdownHooks(shutdownHookList10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig8.setframework(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.startupHook(startupHook14);
        boolean boolean16 = atmosphereConfig15.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig15.getproperties();
        atmosphereConfig0.properties = strMap17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig19.shutdownHooks;
        boolean boolean22 = atmosphereConfig19.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig19.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        atmosphereConfig24.setproperties(strMap25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig19.populate(atmosphereConfig24);
        org.slf4j.Logger logger28 = atmosphereConfig27.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        atmosphereConfig29.setproperties(strMap30);
        boolean boolean32 = atmosphereConfig29.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig29.getstartUpHook();
        atmosphereConfig27.startUpHook = startupHookList33;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig27.framework = atmosphereFramework35;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig27.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        atmosphereConfig39.setproperties(strMap40);
        boolean boolean42 = atmosphereConfig39.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig39.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig39.setframework(atmosphereFramework44);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig39.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig39.startupHook(startupHook47);
        org.slf4j.Logger logger49 = atmosphereConfig48.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList51, shutdownHookArray50);
        atmosphereConfig48.shutdownHooks = shutdownHookList51;
        atmosphereConfig27.shutdownHooks = shutdownHookList51;
        org.slf4j.Logger logger55 = atmosphereConfig27.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig0.populate(atmosphereConfig27);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster57 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(shutdownHookList46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(logger49);
        org.junit.Assert.assertNotNull(shutdownHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(logger55);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
    }

    @Test
    public void test02355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02355");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.shutdownHooks;
        boolean boolean12 = atmosphereConfig9.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig9.populate(atmosphereConfig14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig14.getstartUpHook();
        atmosphereConfig8.startUpHook = startupHookList18;
        org.slf4j.Logger logger20 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig8.framework;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig8.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext24 = atmosphereConfig8.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
    }

    @Test
    public void test02356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02356");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        boolean boolean11 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        boolean boolean12 = atmosphereConfig9.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig9.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig9.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig15.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        atmosphereConfig19.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray23 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList24, atmosphereHandlerConfigArray23);
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig18.populate(atmosphereConfig19);
        boolean boolean28 = atmosphereConfig19.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30, shutdownHookArray29);
        atmosphereConfig19.shutdownHooks = shutdownHookList30;
        atmosphereConfig15.shutdownHooks = shutdownHookList30;
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = null;
        atmosphereConfig35.setproperties(strMap36);
        boolean boolean38 = atmosphereConfig35.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig35.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig35.setframework(atmosphereFramework40);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig35.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig35.startupHook(startupHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.startUpHook;
        boolean boolean47 = atmosphereConfig45.sessionTimeoutRemovalAllowed;
        boolean boolean48 = atmosphereConfig45.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig45.properties();
        atmosphereConfig45.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig45.startupHook(startupHook51);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig52.properties();
        atmosphereConfig44.properties = strMap53;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig44.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig44.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig0.populate(atmosphereConfig44);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster58 = atmosphereConfig44.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(atmosphereFramework55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
    }

    @Test
    public void test02357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02357");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = null;
        atmosphereConfig0.startUpHook = startupHookList7;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap4);
    }

    @Test
    public void test02358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02358");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray8 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList9, shutdownHookArray8);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList9);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider12 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(shutdownHookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test02359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02359");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray2 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList3 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList3, atmosphereHandlerConfigArray2);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList3;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig7.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig7.framework();
        atmosphereConfig7.setuseServletContextParameters(false);
        boolean boolean13 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test02360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02360");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        int int3 = atmosphereConfig0.getInitParameter("", (int) 'a');
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        atmosphereConfig6.setproperties(strMap7);
        boolean boolean9 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig6.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig6.setframework(atmosphereFramework11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig6.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig6.startupHook(startupHook14);
        org.slf4j.Logger logger16 = atmosphereConfig15.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig15.shutdownHooks = shutdownHookList18;
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext22 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 97 + "'", int3 == 97);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test02361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02361");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList13, startupHookArray12);
        atmosphereConfig11.startUpHook = startupHookList13;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig11.startUpHook;
        org.slf4j.Logger logger17 = atmosphereConfig11.getlogger();
        boolean boolean18 = atmosphereConfig11.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig11.framework = atmosphereFramework19;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig11.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig11.shutdownHook(shutdownHook22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(shutdownHookList21);
    }

    @Test
    public void test02362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02362");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig8.setproperties(strMap9);
        boolean boolean11 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig8.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray13 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList14, shutdownHookArray13);
        atmosphereConfig8.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList14);
        boolean boolean19 = atmosphereConfig8.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig8.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig21.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig21.setframework(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig21.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig21.startupHook(startupHook27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig21.properties();
        atmosphereConfig8.properties = strMap29;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig8.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig32.shutdownHooks;
        atmosphereConfig32.setSessionTimeoutRemovalAllowed(false);
        boolean boolean37 = atmosphereConfig32.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        boolean boolean40 = atmosphereConfig38.sessionTimeoutRemovalAllowed;
        boolean boolean41 = atmosphereConfig38.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig38.properties();
        atmosphereConfig38.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig38.startupHook(startupHook44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig32.populate(atmosphereConfig38);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig46.shutdownHooks;
        atmosphereConfig8.setshutdownHooks(shutdownHookList47);
        atmosphereConfig0.shutdownHooks = shutdownHookList47;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = atmosphereConfig0.framework();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.slf4j.Logger logger53 = atmosphereConfig0.getlogger();
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(shutdownHookArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNull(atmosphereFramework50);
        org.junit.Assert.assertNotNull(logger53);
    }

    @Test
    public void test02363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02363");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        atmosphereConfig10.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray14 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList15, atmosphereHandlerConfigArray14);
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig9.populate(atmosphereConfig10);
        boolean boolean19 = atmosphereConfig10.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig10.shutdownHooks = shutdownHookList21;
        atmosphereConfig6.shutdownHooks = shutdownHookList21;
        java.lang.Class<?> wildcardClass25 = atmosphereConfig6.getClass();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test02364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02364");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.slf4j.Logger logger10 = atmosphereConfig9.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig9.shutdownHooks = shutdownHookList12;
        java.lang.Class<?> wildcardClass15 = atmosphereConfig9.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02365");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig8.setproperties(strMap9);
        boolean boolean11 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig8.supportSession = false;
        org.slf4j.Logger logger15 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig7.populate(atmosphereConfig8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig7.framework = atmosphereFramework17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        atmosphereConfig19.setproperties(strMap20);
        boolean boolean22 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig19.getstartUpHook();
        boolean boolean24 = atmosphereConfig19.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        atmosphereConfig25.setproperties(strMap26);
        boolean boolean28 = atmosphereConfig25.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig25.getproperties();
        atmosphereConfig25.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig25.shutdownHooks = shutdownHookList32;
        atmosphereConfig19.shutdownHooks = shutdownHookList32;
        atmosphereConfig7.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig7.setframework(atmosphereFramework37);
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig7.getshutdownHooks();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shutdownHookList41);
    }

    @Test
    public void test02366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02366");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        atmosphereConfig6.setproperties(strMap7);
        boolean boolean9 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig6.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig6.setframework(atmosphereFramework11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig6.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig6.framework = atmosphereFramework14;
        atmosphereConfig6.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig6.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList17;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext19 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(shutdownHookList17);
    }

    @Test
    public void test02367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02367");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework4);
    }

    @Test
    public void test02368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02368");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        atmosphereConfig13.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17, shutdownHookArray16);
        atmosphereConfig13.shutdownHooks = shutdownHookList17;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig13.getstartUpHook();
        atmosphereConfig11.setstartUpHook(startupHookList20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig22.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.startupHook(startupHook27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig26.startUpHook;
        atmosphereConfig11.setstartUpHook(startupHookList29);
        atmosphereConfig11.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig11.framework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider34 = atmosphereConfig11.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNull(atmosphereFramework33);
    }

    @Test
    public void test02369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02369");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        int int14 = atmosphereConfig0.getInitParameter("", 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        atmosphereConfig15.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = null;
        atmosphereConfig22.setshutdownHooks(shutdownHookList24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig15.populate(atmosphereConfig22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig26.startUpHook = startupHookList28;
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray34 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList35, atmosphereHandlerConfigArray34);
        atmosphereConfig32.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig32.startupHook(startupHook38);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig39.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = null;
        atmosphereConfig39.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig39.properties();
        atmosphereConfig0.setproperties(strMap43);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test02370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02370");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        boolean boolean12 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        boolean boolean13 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig10.properties();
        atmosphereConfig10.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig10.startupHook(startupHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.properties();
        atmosphereConfig9.properties = strMap18;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig9.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig21.shutdownHooks;
        boolean boolean24 = atmosphereConfig21.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig26.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig21.populate(atmosphereConfig26);
        boolean boolean30 = atmosphereConfig29.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        boolean boolean33 = atmosphereConfig31.sessionTimeoutRemovalAllowed;
        boolean boolean34 = atmosphereConfig31.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig31.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        atmosphereConfig36.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray39 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList40, shutdownHookArray39);
        atmosphereConfig36.shutdownHooks = shutdownHookList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig43.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = null;
        atmosphereConfig43.setshutdownHooks(shutdownHookList45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig36.populate(atmosphereConfig43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig36.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig36.getproperties();
        atmosphereConfig31.setproperties(strMap49);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig31.setframework(atmosphereFramework51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig29.populate(atmosphereConfig31);
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray54 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList55, atmosphereHandlerConfigArray54);
        atmosphereConfig31.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        atmosphereConfig9.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = atmosphereConfig9.getshutdownHooks();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory62 = atmosphereConfig9.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(shutdownHookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(startupHookList44);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shutdownHookList61);
    }

    @Test
    public void test02371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02371");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig11.startUpHook;
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig11.setuseServletContextParameters(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig11.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig19.shutdownHooks;
        boolean boolean22 = atmosphereConfig19.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig19.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig19.shutdownHooks;
        atmosphereConfig19.useServletContextParameters = false;
        boolean boolean29 = atmosphereConfig19.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig30.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig30.getproperties();
        org.slf4j.Logger logger33 = atmosphereConfig30.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = null;
        atmosphereConfig34.setshutdownHooks(shutdownHookList36);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig34.setframework(atmosphereFramework38);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig34.startupHook(startupHook40);
        boolean boolean42 = atmosphereConfig41.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.getproperties();
        atmosphereConfig30.properties = strMap43;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig30.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.startUpHook;
        boolean boolean48 = atmosphereConfig46.sessionTimeoutRemovalAllowed;
        boolean boolean49 = atmosphereConfig46.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig46.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig46.framework = atmosphereFramework51;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig46.startupHook(startupHook53);
        boolean boolean55 = atmosphereConfig54.sessionTimeoutRemovalAllowed;
        boolean boolean56 = atmosphereConfig54.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig54.shutdownHooks;
        atmosphereConfig30.setshutdownHooks(shutdownHookList57);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig30.properties();
        atmosphereConfig19.properties = strMap59;
        atmosphereConfig11.setproperties(strMap59);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider62 = atmosphereConfig11.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(logger33);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(strMap59);
    }

    @Test
    public void test02372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02372");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig0.getproperties();
        boolean boolean16 = atmosphereConfig0.isSupportSession();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster17 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test02373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02373");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.getuseServletContextParameters();
        atmosphereConfig7.sessionTimeoutRemovalAllowed = false;
        boolean boolean11 = atmosphereConfig7.supportSession;
        boolean boolean12 = atmosphereConfig7.useServletContextParameters;
        atmosphereConfig7.useServletContextParameters = true;
        boolean boolean15 = atmosphereConfig7.useServletContextParameters;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory16 = atmosphereConfig7.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test02374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02374");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig8.getuseServletContextParameters();
        atmosphereConfig8.useServletContextParameters = false;
        boolean boolean13 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig8.framework;
        int int18 = atmosphereConfig8.getInitParameter("", 97);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig8.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        atmosphereConfig20.setproperties(strMap21);
        boolean boolean23 = atmosphereConfig20.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig20.getproperties();
        atmosphereConfig20.initComplete();
        atmosphereConfig20.setSessionTimeoutRemovalAllowed(true);
        boolean boolean30 = atmosphereConfig20.getInitParameter("hi!", false);
        atmosphereConfig20.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        atmosphereConfig33.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray37 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList38, atmosphereHandlerConfigArray37);
        atmosphereConfig33.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        java.lang.String str43 = atmosphereConfig33.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = null;
        atmosphereConfig44.setshutdownHooks(shutdownHookList46);
        boolean boolean48 = atmosphereConfig44.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig44.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig50.shutdownHooks;
        boolean boolean53 = atmosphereConfig50.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig50.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        atmosphereConfig55.setproperties(strMap56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig50.populate(atmosphereConfig55);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = null;
        atmosphereConfig50.setproperties(strMap59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig61.startUpHook;
        java.lang.String str65 = atmosphereConfig61.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig61.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = null;
        atmosphereConfig61.framework = atmosphereFramework67;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList69 = atmosphereConfig61.startUpHook;
        atmosphereConfig50.startUpHook = startupHookList69;
        atmosphereConfig44.setstartUpHook(startupHookList69);
        atmosphereConfig33.setstartUpHook(startupHookList69);
        atmosphereConfig20.startUpHook = startupHookList69;
        atmosphereConfig8.startUpHook = startupHookList69;
        java.lang.String str77 = atmosphereConfig8.getInitParameter("", "hi!");
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(startupHookList62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertNotNull(startupHookList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
    }

    @Test
    public void test02375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02375");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.slf4j.Logger logger9 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig10.setproperties(strMap11);
        boolean boolean13 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig8.startUpHook = startupHookList14;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig8.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig8.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        atmosphereConfig20.setproperties(strMap21);
        boolean boolean23 = atmosphereConfig20.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig20.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig20.setframework(atmosphereFramework25);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig20.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig20.startupHook(startupHook28);
        org.slf4j.Logger logger30 = atmosphereConfig29.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig29.shutdownHooks = shutdownHookList32;
        atmosphereConfig8.shutdownHooks = shutdownHookList32;
        org.slf4j.Logger logger36 = atmosphereConfig8.getlogger();
        atmosphereConfig8.setThrowExceptionOnCloned(false);
        boolean boolean39 = atmosphereConfig8.getuseServletContextParameters();
        java.lang.String str41 = atmosphereConfig8.getInitParameter("");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig8.getAtmosphereHandlerConfig();
        boolean boolean45 = atmosphereConfig8.getInitParameter("hi!", true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(logger30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test02376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02376");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.shutdownHook(shutdownHook12);
        java.lang.Class<?> wildcardClass14 = atmosphereConfig13.getClass();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test02377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02377");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.setuseServletContextParameters(true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
    }

    @Test
    public void test02378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02378");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.getframework();
        boolean boolean13 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        boolean boolean17 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig14.getproperties();
        atmosphereConfig14.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig14.shutdownHooks = shutdownHookList21;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig14.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig0.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig14.getframework();
        atmosphereConfig14.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNull(atmosphereFramework26);
    }

    @Test
    public void test02379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02379");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.shutdownHooks;
        boolean boolean7 = atmosphereConfig4.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig4.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        atmosphereConfig9.setproperties(strMap10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig4.populate(atmosphereConfig9);
        org.slf4j.Logger logger13 = atmosphereConfig12.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        boolean boolean17 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig14.getstartUpHook();
        atmosphereConfig12.startUpHook = startupHookList18;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig12.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = null;
        atmosphereConfig24.setshutdownHooks(shutdownHookList26);
        boolean boolean28 = atmosphereConfig24.useServletContextParameters;
        atmosphereConfig24.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.properties;
        atmosphereConfig12.setproperties(strMap31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = null;
        atmosphereConfig35.setproperties(strMap36);
        boolean boolean38 = atmosphereConfig35.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig35.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig35.setframework(atmosphereFramework40);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig35.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig35.startupHook(startupHook43);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig44.shutdownHook(shutdownHook45);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList47);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(startupHookList47);
    }

    @Test
    public void test02380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02380");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig14.shutdownHooks = shutdownHookList18;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig14.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        atmosphereConfig22.setproperties(strMap23);
        boolean boolean25 = atmosphereConfig22.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig22.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig22.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28);
        boolean boolean33 = atmosphereConfig22.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig22.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig35.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig35.setframework(atmosphereFramework38);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig35.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig35.startupHook(startupHook41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig35.properties();
        atmosphereConfig22.properties = strMap43;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig22.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig46.shutdownHooks;
        atmosphereConfig46.setSessionTimeoutRemovalAllowed(false);
        boolean boolean51 = atmosphereConfig46.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig52.startUpHook;
        boolean boolean54 = atmosphereConfig52.sessionTimeoutRemovalAllowed;
        boolean boolean55 = atmosphereConfig52.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig52.properties();
        atmosphereConfig52.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig52.startupHook(startupHook58);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig46.populate(atmosphereConfig52);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = atmosphereConfig60.shutdownHooks;
        atmosphereConfig22.setshutdownHooks(shutdownHookList61);
        atmosphereConfig14.shutdownHooks = shutdownHookList61;
        atmosphereConfig0.shutdownHooks = shutdownHookList61;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean69 = atmosphereConfig0.getInitParameter("", false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(atmosphereFramework34);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(shutdownHookList61);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test02381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02381");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties();
        atmosphereConfig0.supportSession = false;
        boolean boolean13 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean14 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig0.setframework(atmosphereFramework15);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext17 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test02382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02382");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig8.getuseServletContextParameters();
        atmosphereConfig8.useServletContextParameters = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig8.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.shutdownHook(shutdownHook14);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig16 = atmosphereConfig15.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
    }

    @Test
    public void test02383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02383");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig7.framework();
        atmosphereConfig7.setSupportSession(true);
        boolean boolean12 = atmosphereConfig7.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig7.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig7.shutdownHook(shutdownHook14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
    }

    @Test
    public void test02384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02384");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig8.setproperties(strMap9);
        boolean boolean11 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig8.supportSession = false;
        org.slf4j.Logger logger15 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig7.populate(atmosphereConfig8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig7.framework = atmosphereFramework17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        atmosphereConfig19.setproperties(strMap20);
        boolean boolean22 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig19.getstartUpHook();
        boolean boolean24 = atmosphereConfig19.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        atmosphereConfig25.setproperties(strMap26);
        boolean boolean28 = atmosphereConfig25.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig25.getproperties();
        atmosphereConfig25.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig25.shutdownHooks = shutdownHookList32;
        atmosphereConfig19.shutdownHooks = shutdownHookList32;
        atmosphereConfig7.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig7.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig7.setSupportSession(false);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory41 = atmosphereConfig7.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test02385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02385");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.getproperties();
        java.lang.String str16 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig0.framework;
        atmosphereConfig0.useServletContextParameters = false;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(atmosphereFramework17);
    }

    @Test
    public void test02386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02386");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.setframework(atmosphereFramework9);
        java.lang.String str13 = atmosphereConfig8.getInitParameter("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory14 = atmosphereConfig8.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test02387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02387");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList13, startupHookArray12);
        atmosphereConfig11.startUpHook = startupHookList13;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig11.startUpHook;
        org.slf4j.Logger logger17 = atmosphereConfig11.getlogger();
        boolean boolean18 = atmosphereConfig11.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig11.framework = atmosphereFramework19;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig11.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig11.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
    }

    @Test
    public void test02388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02388");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setuseServletContextParameters(true);
        atmosphereConfig0.supportSession = true;
        boolean boolean11 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test02389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02389");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        int int15 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        boolean boolean16 = atmosphereConfig11.useServletContextParameters;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test02390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02390");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig7.startupHook(startupHook12);
        boolean boolean14 = atmosphereConfig7.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        atmosphereConfig15.setproperties(strMap16);
        boolean boolean18 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig15.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig15.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21);
        boolean boolean26 = atmosphereConfig15.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig15.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig15.atmosphereHandlerConfig;
        atmosphereConfig15.throwExceptionOnCloned = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig15.startUpHook;
        atmosphereConfig7.startUpHook = startupHookList31;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig7.properties();
        java.lang.Class<?> wildcardClass34 = strMap33.getClass();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test02391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02391");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.getframework();
        boolean boolean13 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean14 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig0.setframework(atmosphereFramework15);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider17 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test02392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02392");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList11);
    }

    @Test
    public void test02393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02393");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig7.framework();
        atmosphereConfig7.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        atmosphereConfig30.setproperties(strMap31);
        boolean boolean33 = atmosphereConfig30.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig30.getproperties();
        org.slf4j.Logger logger35 = atmosphereConfig30.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig30.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig30.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        atmosphereConfig39.setproperties(strMap40);
        boolean boolean42 = atmosphereConfig39.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig39.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig39.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45);
        boolean boolean50 = atmosphereConfig39.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig39.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig52.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = atmosphereConfig52.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = null;
        atmosphereConfig52.setframework(atmosphereFramework55);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = atmosphereConfig52.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig52.startupHook(startupHook58);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig52.properties();
        atmosphereConfig39.properties = strMap60;
        atmosphereConfig30.properties = strMap60;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig30.properties();
        int int66 = atmosphereConfig30.getInitParameter("", (int) (short) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig30.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig30.properties;
        atmosphereConfig7.properties = strMap68;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(logger35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNull(atmosphereFramework54);
        org.junit.Assert.assertNull(atmosphereFramework57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap68);
    }

    @Test
    public void test02394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02394");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        atmosphereConfig28.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.shutdownHooks;
        atmosphereConfig28.setshutdownHooks(shutdownHookList33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig28.shutdownHooks;
        org.slf4j.Logger logger36 = atmosphereConfig28.getlogger();
        boolean boolean37 = atmosphereConfig28.isSupportSession();
        atmosphereConfig28.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig28.useServletContextParameters = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig28.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        atmosphereConfig43.setproperties(strMap44);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray46 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList47, shutdownHookArray46);
        atmosphereConfig43.shutdownHooks = shutdownHookList47;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = null;
        atmosphereConfig50.setshutdownHooks(shutdownHookList52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig43.populate(atmosphereConfig50);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray55 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList56, startupHookArray55);
        atmosphereConfig54.startUpHook = startupHookList56;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig54.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = atmosphereConfig54.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig54.startUpHook;
        atmosphereConfig28.setstartUpHook(startupHookList61);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory63 = atmosphereConfig28.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(shutdownHookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(startupHookArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertNull(shutdownHookList60);
        org.junit.Assert.assertNotNull(startupHookList61);
    }

    @Test
    public void test02395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02395");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig4.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig4.framework = atmosphereFramework6;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory8 = atmosphereConfig4.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNull(atmosphereFramework5);
    }

    @Test
    public void test02396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02396");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.shutdownHook(shutdownHook10);
        atmosphereConfig11.initComplete();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
    }

    @Test
    public void test02397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02397");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.lang.String str4 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig9.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.populate(atmosphereConfig9);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig15.shutdownHooks;
        atmosphereConfig15.setSessionTimeoutRemovalAllowed(false);
        boolean boolean20 = atmosphereConfig15.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        boolean boolean23 = atmosphereConfig21.sessionTimeoutRemovalAllowed;
        boolean boolean24 = atmosphereConfig21.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig21.properties();
        atmosphereConfig21.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig21.startupHook(startupHook27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig15.populate(atmosphereConfig21);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig29.shutdownHooks;
        boolean boolean31 = atmosphereConfig29.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig13.populate(atmosphereConfig29);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap33 = atmosphereConfig13.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
    }

    @Test
    public void test02398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02398");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.throwExceptionOnCloned = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory12 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test02399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02399");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean7 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = null;
        atmosphereConfig8.setshutdownHooks(shutdownHookList10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig8.setframework(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.startupHook(startupHook14);
        boolean boolean16 = atmosphereConfig15.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig15.getproperties();
        atmosphereConfig0.properties = strMap17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig19.shutdownHooks;
        boolean boolean22 = atmosphereConfig19.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig19.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        atmosphereConfig24.setproperties(strMap25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig19.populate(atmosphereConfig24);
        atmosphereConfig24.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig24.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        atmosphereConfig32.setproperties(strMap33);
        boolean boolean35 = atmosphereConfig32.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig32.getstartUpHook();
        atmosphereConfig32.supportSession = false;
        boolean boolean39 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        atmosphereConfig41.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray45 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList46, atmosphereHandlerConfigArray45);
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList46;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig40.populate(atmosphereConfig41);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig40.getAtmosphereHandlerConfig();
        boolean boolean51 = atmosphereConfig40.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = atmosphereConfig40.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig32.populate(atmosphereConfig40);
        atmosphereConfig32.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig32.startupHook(startupHook56);
        atmosphereConfig57.supportSession = false;
        java.lang.String str61 = atmosphereConfig57.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig57.properties();
        atmosphereConfig24.setproperties(strMap62);
        atmosphereConfig0.properties = strMap62;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = null;
        atmosphereConfig0.setframework(atmosphereFramework65);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(atmosphereFramework52);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strMap62);
    }

    @Test
    public void test02400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02400");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.slf4j.Logger logger9 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig10.setproperties(strMap11);
        boolean boolean13 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig8.startUpHook = startupHookList14;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig8.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig8.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.setshutdownHooks(shutdownHookList22);
        boolean boolean24 = atmosphereConfig20.useServletContextParameters;
        atmosphereConfig20.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.properties;
        atmosphereConfig8.setproperties(strMap27);
        boolean boolean31 = atmosphereConfig8.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = null;
        atmosphereConfig32.setshutdownHooks(shutdownHookList34);
        boolean boolean36 = atmosphereConfig32.useServletContextParameters;
        atmosphereConfig32.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig32.properties;
        atmosphereConfig8.properties = strMap39;
        boolean boolean41 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig42 = atmosphereConfig8.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test02401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02401");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSupportSession();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster8 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test02402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02402");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.lang.Class<?> wildcardClass10 = atmosphereConfig8.getClass();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test02403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02403");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.lang.String str14 = atmosphereConfig11.getInitParameter("", "");
        boolean boolean15 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        atmosphereConfig16.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        atmosphereConfig11.shutdownHooks = shutdownHookList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        atmosphereConfig24.setproperties(strMap25);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = null;
        atmosphereConfig31.setshutdownHooks(shutdownHookList33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig24.populate(atmosphereConfig31);
        boolean boolean36 = atmosphereConfig35.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig35.startUpHook;
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = null;
        atmosphereConfig40.setproperties(strMap41);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList44, shutdownHookArray43);
        atmosphereConfig40.shutdownHooks = shutdownHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = null;
        atmosphereConfig47.setshutdownHooks(shutdownHookList49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig40.populate(atmosphereConfig47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        atmosphereConfig52.setproperties(strMap53);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray55 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList56, shutdownHookArray55);
        atmosphereConfig52.shutdownHooks = shutdownHookList56;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = null;
        atmosphereConfig59.setshutdownHooks(shutdownHookList61);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig52.populate(atmosphereConfig59);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = atmosphereConfig52.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig52.getproperties();
        atmosphereConfig47.properties = strMap65;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig47.startupHook(startupHook67);
        atmosphereConfig68.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = atmosphereConfig71.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = atmosphereConfig71.shutdownHooks;
        atmosphereConfig68.setshutdownHooks(shutdownHookList73);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList75 = atmosphereConfig68.shutdownHooks;
        atmosphereConfig35.shutdownHooks = shutdownHookList75;
        atmosphereConfig11.shutdownHooks = shutdownHookList75;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = null;
        atmosphereConfig78.setproperties(strMap79);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray81 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList82 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList82, shutdownHookArray81);
        atmosphereConfig78.shutdownHooks = shutdownHookList82;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig85 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList86 = atmosphereConfig85.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList87 = null;
        atmosphereConfig85.setshutdownHooks(shutdownHookList87);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig89 = atmosphereConfig78.populate(atmosphereConfig85);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray90 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList91 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList91, startupHookArray90);
        atmosphereConfig89.startUpHook = startupHookList91;
        atmosphereConfig89.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig96 = atmosphereConfig11.populate(atmosphereConfig89);
        java.lang.String str98 = atmosphereConfig96.getInitParameter("hi!");
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(shutdownHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(shutdownHookArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNull(atmosphereFramework64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(startupHookList72);
        org.junit.Assert.assertNotNull(shutdownHookList73);
        org.junit.Assert.assertNotNull(shutdownHookList75);
        org.junit.Assert.assertNotNull(shutdownHookArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(startupHookList86);
        org.junit.Assert.assertNotNull(atmosphereConfig89);
        org.junit.Assert.assertNotNull(startupHookArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig96);
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test02404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02404");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig11.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig11.setframework(atmosphereFramework14);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig11.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig17.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig17.setframework(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig17.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig17.startUpHook;
        atmosphereConfig17.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig17.shutdownHook(shutdownHook25);
        java.lang.String str29 = atmosphereConfig17.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig11.populate(atmosphereConfig17);
        boolean boolean31 = atmosphereConfig17.supportSession;
        java.lang.String str34 = atmosphereConfig17.getInitParameter("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration35 = atmosphereConfig17.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
    }

    @Test
    public void test02405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02405");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        int int11 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 1);
        boolean boolean12 = atmosphereConfig8.supportSession;
        atmosphereConfig8.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig8.setframework(atmosphereFramework15);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test02406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02406");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = true;
        boolean boolean8 = atmosphereConfig0.useServletContextParameters;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap11 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
    }

    @Test
    public void test02407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02407");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig11.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        boolean boolean17 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        boolean boolean18 = atmosphereConfig14.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig14.shutdownHooks;
        atmosphereConfig11.shutdownHooks = shutdownHookList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        atmosphereConfig21.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = null;
        atmosphereConfig28.setshutdownHooks(shutdownHookList30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig21.populate(atmosphereConfig28);
        int int35 = atmosphereConfig28.getInitParameter("hi!", (int) (byte) -1);
        org.slf4j.Logger logger36 = atmosphereConfig28.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig28.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        atmosphereConfig39.setproperties(strMap40);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43, shutdownHookArray42);
        atmosphereConfig39.shutdownHooks = shutdownHookList43;
        boolean boolean46 = atmosphereConfig39.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        atmosphereConfig39.setframework(atmosphereFramework47);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig39.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig39.startUpHook;
        atmosphereConfig38.startUpHook = startupHookList50;
        atmosphereConfig11.setstartUpHook(startupHookList50);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookList19);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(shutdownHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertNotNull(startupHookList50);
    }

    @Test
    public void test02408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02408");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.shutdownHooks;
        boolean boolean12 = atmosphereConfig9.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig9.populate(atmosphereConfig14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig14.getstartUpHook();
        atmosphereConfig8.startUpHook = startupHookList18;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig8.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig8.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration22 = atmosphereConfig8.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
    }

    @Test
    public void test02409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02409");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        atmosphereConfig28.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.shutdownHooks;
        atmosphereConfig28.setshutdownHooks(shutdownHookList33);
        boolean boolean35 = atmosphereConfig28.useServletContextParameters;
        boolean boolean36 = atmosphereConfig28.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig28.startupHook(startupHook37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig38.getproperties();
        atmosphereConfig38.setSupportSession(false);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test02410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02410");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.getproperties();
        java.lang.String str16 = atmosphereConfig0.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        atmosphereConfig19.setproperties(strMap20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray22 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList23, shutdownHookArray22);
        atmosphereConfig19.shutdownHooks = shutdownHookList23;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig26.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = null;
        atmosphereConfig26.setshutdownHooks(shutdownHookList28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig19.populate(atmosphereConfig26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig19.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig19.getproperties();
        java.lang.String str35 = atmosphereConfig19.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig19.getAtmosphereHandlerConfig();
        boolean boolean39 = atmosphereConfig19.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig19.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig19.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        atmosphereConfig42.setproperties(strMap43);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig42.shutdownHooks = shutdownHookList46;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig42.startupHook(startupHook49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig51.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig51.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig51.shutdownHook(shutdownHook54);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig55.properties();
        atmosphereConfig42.setproperties(strMap56);
        atmosphereConfig19.properties = strMap56;
        atmosphereConfig0.properties = strMap56;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test02411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02411");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        atmosphereConfig0.setuseServletContextParameters(false);
        boolean boolean11 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        boolean boolean25 = atmosphereConfig12.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig0.populate(atmosphereConfig12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        atmosphereConfig27.setproperties(strMap28);
        boolean boolean30 = atmosphereConfig27.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig27.getstartUpHook();
        boolean boolean32 = atmosphereConfig27.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        atmosphereConfig33.setproperties(strMap34);
        boolean boolean36 = atmosphereConfig33.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig33.getproperties();
        atmosphereConfig33.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray39 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList40, shutdownHookArray39);
        atmosphereConfig33.shutdownHooks = shutdownHookList40;
        atmosphereConfig27.shutdownHooks = shutdownHookList40;
        atmosphereConfig27.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig26.populate(atmosphereConfig27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig26.populate(atmosphereConfig47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(shutdownHookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
    }

    @Test
    public void test02412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02412");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean10 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test02413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02413");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = null;
        atmosphereConfig4.setshutdownHooks(shutdownHookList6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig4.setframework(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.startupHook(startupHook10);
        boolean boolean12 = atmosphereConfig11.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.getproperties();
        atmosphereConfig0.properties = strMap13;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        boolean boolean18 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        boolean boolean19 = atmosphereConfig16.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig16.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig16.framework = atmosphereFramework21;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig16.startupHook(startupHook23);
        boolean boolean25 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        boolean boolean26 = atmosphereConfig24.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig24.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig0.properties();
        java.lang.String str32 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test02414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02414");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig4.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig4.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        atmosphereConfig9.setproperties(strMap10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList13, shutdownHookArray12);
        atmosphereConfig9.shutdownHooks = shutdownHookList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = null;
        atmosphereConfig16.setshutdownHooks(shutdownHookList18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig9.populate(atmosphereConfig16);
        org.slf4j.Logger logger21 = atmosphereConfig9.getlogger();
        boolean boolean22 = atmosphereConfig9.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig9.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        atmosphereConfig24.setproperties(strMap25);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList28, shutdownHookArray27);
        atmosphereConfig24.shutdownHooks = shutdownHookList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = null;
        atmosphereConfig31.setshutdownHooks(shutdownHookList33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig24.populate(atmosphereConfig31);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig31.properties;
        atmosphereConfig9.properties = strMap36;
        atmosphereConfig4.setproperties(strMap36);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig4.startUpHook;
        boolean boolean42 = atmosphereConfig4.getInitParameter("", false);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(shutdownHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(logger21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(shutdownHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test02415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02415");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray2 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList3 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList3, atmosphereHandlerConfigArray2);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList3;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
    }

    @Test
    public void test02416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02416");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        atmosphereConfig28.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig28.getproperties();
        boolean boolean32 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        atmosphereConfig28.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig35.shutdownHooks;
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(false);
        boolean boolean40 = atmosphereConfig35.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        boolean boolean43 = atmosphereConfig41.sessionTimeoutRemovalAllowed;
        boolean boolean44 = atmosphereConfig41.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig41.properties();
        atmosphereConfig41.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig41.startupHook(startupHook47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig35.populate(atmosphereConfig41);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig49.properties();
        java.lang.String str52 = atmosphereConfig49.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig53.shutdownHooks;
        boolean boolean56 = atmosphereConfig53.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig53.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = atmosphereConfig53.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig59.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = null;
        atmosphereConfig59.setframework(atmosphereFramework62);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = atmosphereConfig59.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig59.startUpHook;
        atmosphereConfig53.setstartUpHook(startupHookList65);
        atmosphereConfig49.setstartUpHook(startupHookList65);
        atmosphereConfig28.startUpHook = startupHookList65;
        boolean boolean69 = atmosphereConfig28.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext70 = atmosphereConfig28.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(shutdownHookList58);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNull(atmosphereFramework61);
        org.junit.Assert.assertNull(atmosphereFramework64);
        org.junit.Assert.assertNotNull(startupHookList65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test02417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02417");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.supportSession;
        int int8 = atmosphereConfig0.getInitParameter("", (int) (short) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        atmosphereConfig9.setproperties(strMap10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList13, shutdownHookArray12);
        atmosphereConfig9.shutdownHooks = shutdownHookList13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = null;
        atmosphereConfig16.setshutdownHooks(shutdownHookList18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig9.populate(atmosphereConfig16);
        boolean boolean21 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        atmosphereConfig22.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig22.shutdownHooks = shutdownHookList26;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig22.getstartUpHook();
        atmosphereConfig20.setstartUpHook(startupHookList29);
        atmosphereConfig0.startUpHook = startupHookList29;
        atmosphereConfig0.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig0.properties;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        int int38 = atmosphereConfig0.getInitParameter("", (int) (byte) 100);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shutdownHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
    }

    @Test
    public void test02418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02418");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory14 = atmosphereConfig9.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
    }

    @Test
    public void test02419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02419");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.getuseServletContextParameters();
        atmosphereConfig7.sessionTimeoutRemovalAllowed = false;
        boolean boolean11 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig7.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig13.setframework(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig16.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig16.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig16.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig16.startupHook(startupHook22);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig16.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig16.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig26.setproperties(strMap27);
        boolean boolean29 = atmosphereConfig26.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig26.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig26.setframework(atmosphereFramework31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig26.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig26.getstartUpHook();
        atmosphereConfig16.setstartUpHook(startupHookList34);
        atmosphereConfig16.supportSession = true;
        org.slf4j.Logger logger38 = atmosphereConfig16.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig16.shutdownHooks;
        atmosphereConfig13.shutdownHooks = shutdownHookList39;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = null;
        atmosphereConfig41.setproperties(strMap42);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig41.shutdownHooks = shutdownHookList45;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = null;
        atmosphereConfig48.setshutdownHooks(shutdownHookList50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig41.populate(atmosphereConfig48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = null;
        atmosphereConfig53.setproperties(strMap54);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray56 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList57, shutdownHookArray56);
        atmosphereConfig53.shutdownHooks = shutdownHookList57;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig60.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = null;
        atmosphereConfig60.setshutdownHooks(shutdownHookList62);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig53.populate(atmosphereConfig60);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = atmosphereConfig53.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig53.getproperties();
        atmosphereConfig48.properties = strMap66;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig48.startupHook(startupHook68);
        atmosphereConfig69.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig69.getproperties();
        boolean boolean73 = atmosphereConfig69.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = atmosphereConfig69.atmosphereHandlerConfig;
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList74;
        atmosphereConfig13.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework78 = atmosphereConfig13.framework();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(logger38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(shutdownHookArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNull(atmosphereFramework65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList74);
        org.junit.Assert.assertNull(atmosphereFramework78);
    }

    @Test
    public void test02420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02420");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.framework = atmosphereFramework4;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        java.lang.Class<?> wildcardClass7 = atmosphereHandlerConfigList6.getClass();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test02421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02421");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.properties();
        boolean boolean10 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(atmosphereFramework11);
    }

    @Test
    public void test02422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02422");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        atmosphereConfig0.setSupportSession(true);
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.startupHook(startupHook15);
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
    }

    @Test
    public void test02423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02423");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        boolean boolean15 = atmosphereConfig13.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig13.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig13.getproperties();
        atmosphereConfig0.setproperties(strMap17);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider19 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test02424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02424");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        atmosphereConfig7.setproperties(strMap8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList11, shutdownHookArray10);
        atmosphereConfig7.shutdownHooks = shutdownHookList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = null;
        atmosphereConfig14.setshutdownHooks(shutdownHookList16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig7.populate(atmosphereConfig14);
        org.slf4j.Logger logger19 = atmosphereConfig7.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig20.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.startupHook(startupHook26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig20.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig20.getproperties();
        atmosphereConfig7.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean32 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        atmosphereConfig33.setproperties(strMap34);
        boolean boolean36 = atmosphereConfig33.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig33.getproperties();
        atmosphereConfig33.initComplete();
        atmosphereConfig33.setSessionTimeoutRemovalAllowed(true);
        boolean boolean43 = atmosphereConfig33.getInitParameter("hi!", false);
        atmosphereConfig33.setuseServletContextParameters(true);
        atmosphereConfig33.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig33.setframework(atmosphereFramework48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig0.populate(atmosphereConfig33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNull(atmosphereFramework51);
    }

    @Test
    public void test02425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02425");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("");
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        boolean boolean17 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        boolean boolean18 = atmosphereConfig15.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig15.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig15.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig21.framework = atmosphereFramework22;
        boolean boolean24 = atmosphereConfig21.useServletContextParameters;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig21.getproperties();
        atmosphereConfig0.properties = strMap25;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory27 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test02426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02426");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test02427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02427");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(atmosphereFramework9);
    }

    @Test
    public void test02428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02428");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray8 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList9, shutdownHookArray8);
        atmosphereConfig5.shutdownHooks = shutdownHookList9;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = null;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig5.populate(atmosphereConfig12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig5.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig5.getproperties();
        atmosphereConfig0.setproperties(strMap18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.destroy();
        atmosphereConfig0.destroy();
        boolean boolean23 = atmosphereConfig0.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = null;
        atmosphereConfig0.setstartUpHook(startupHookList24);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test02429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02429");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean5 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig6.startUpHook;
        boolean boolean8 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig6.properties();
        atmosphereConfig6.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig6.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.populate(atmosphereConfig6);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig14.properties();
        java.lang.String str17 = atmosphereConfig14.getInitParameter("");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster18 = atmosphereConfig14.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test02430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02430");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean5 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig6.startUpHook;
        boolean boolean8 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig6.properties();
        atmosphereConfig6.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig6.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.populate(atmosphereConfig6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig6.getshutdownHooks();
        boolean boolean16 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        boolean boolean17 = atmosphereConfig6.getuseServletContextParameters();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test02431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02431");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        int int14 = atmosphereConfig7.getInitParameter("hi!", (int) (byte) -1);
        org.slf4j.Logger logger15 = atmosphereConfig7.getlogger();
        boolean boolean16 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = atmosphereConfig7.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test02432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02432");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig7.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig7.setframework(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig7.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig7.startupHook(startupHook13);
        boolean boolean15 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig7.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig7.properties();
        atmosphereConfig0.setproperties(strMap19);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test02433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02433");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean5 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig6.startUpHook;
        boolean boolean8 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig6.properties();
        atmosphereConfig6.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig6.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.populate(atmosphereConfig6);
        atmosphereConfig14.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig14.framework = atmosphereFramework17;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig14.shutdownHooks;
        atmosphereConfig14.destroy();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration21 = atmosphereConfig14.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(shutdownHookList19);
    }

    @Test
    public void test02434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02434");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean5 = atmosphereConfig0.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig6.startUpHook;
        boolean boolean8 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig6.properties();
        atmosphereConfig6.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig6.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.populate(atmosphereConfig6);
        java.lang.String str16 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig17.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig17.setframework(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig17.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig17.startupHook(startupHook23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig17.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig17.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig27.shutdownHooks;
        boolean boolean30 = atmosphereConfig27.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig27.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        atmosphereConfig32.setproperties(strMap33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig27.populate(atmosphereConfig32);
        org.slf4j.Logger logger36 = atmosphereConfig35.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        atmosphereConfig37.setproperties(strMap38);
        boolean boolean40 = atmosphereConfig37.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig37.getstartUpHook();
        atmosphereConfig35.startUpHook = startupHookList41;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        atmosphereConfig35.framework = atmosphereFramework43;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig35.startupHook(startupHook45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = null;
        atmosphereConfig47.setshutdownHooks(shutdownHookList49);
        boolean boolean51 = atmosphereConfig47.useServletContextParameters;
        atmosphereConfig47.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig47.properties;
        atmosphereConfig35.setproperties(strMap54);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig35.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig17.populate(atmosphereConfig35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig0.populate(atmosphereConfig35);
        boolean boolean63 = atmosphereConfig60.getInitParameter("hi!", false);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test02435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02435");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.framework = atmosphereFramework7;
        boolean boolean9 = atmosphereConfig6.useServletContextParameters;
        java.lang.String str11 = atmosphereConfig6.getInitParameter("hi!");
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        atmosphereConfig13.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17, shutdownHookArray16);
        atmosphereConfig13.shutdownHooks = shutdownHookList17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.setshutdownHooks(shutdownHookList22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig13.populate(atmosphereConfig20);
        boolean boolean25 = atmosphereConfig24.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig24.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig24.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig24.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig6.populate(atmosphereConfig24);
        java.lang.String str31 = atmosphereConfig24.getInitParameter("");
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(shutdownHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test02436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02436");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.lang.String str4 = atmosphereConfig0.getInitParameter("", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.framework;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties;
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.setframework(atmosphereFramework13);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test02437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02437");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        atmosphereConfig2.setproperties(strMap3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray5 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList6, shutdownHookArray5);
        atmosphereConfig2.shutdownHooks = shutdownHookList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = null;
        atmosphereConfig9.setshutdownHooks(shutdownHookList11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig2.populate(atmosphereConfig9);
        java.lang.String str16 = atmosphereConfig13.getInitParameter("", "");
        boolean boolean17 = atmosphereConfig13.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        atmosphereConfig18.setproperties(strMap19);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList22, shutdownHookArray21);
        atmosphereConfig18.shutdownHooks = shutdownHookList22;
        atmosphereConfig13.shutdownHooks = shutdownHookList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig26.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30, shutdownHookArray29);
        atmosphereConfig26.shutdownHooks = shutdownHookList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = null;
        atmosphereConfig33.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig26.populate(atmosphereConfig33);
        boolean boolean38 = atmosphereConfig37.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig37.startUpHook;
        atmosphereConfig37.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        atmosphereConfig42.setproperties(strMap43);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList46, shutdownHookArray45);
        atmosphereConfig42.shutdownHooks = shutdownHookList46;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig49.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = null;
        atmosphereConfig49.setshutdownHooks(shutdownHookList51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig42.populate(atmosphereConfig49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = null;
        atmosphereConfig54.setproperties(strMap55);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray57 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList58, shutdownHookArray57);
        atmosphereConfig54.shutdownHooks = shutdownHookList58;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig61.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = null;
        atmosphereConfig61.setshutdownHooks(shutdownHookList63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig54.populate(atmosphereConfig61);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = atmosphereConfig54.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig54.getproperties();
        atmosphereConfig49.properties = strMap67;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig49.startupHook(startupHook69);
        atmosphereConfig70.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList74 = atmosphereConfig73.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList75 = atmosphereConfig73.shutdownHooks;
        atmosphereConfig70.setshutdownHooks(shutdownHookList75);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig70.shutdownHooks;
        atmosphereConfig37.shutdownHooks = shutdownHookList77;
        atmosphereConfig13.shutdownHooks = shutdownHookList77;
        atmosphereConfig0.setshutdownHooks(shutdownHookList77);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = null;
        atmosphereConfig81.setproperties(strMap82);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray84 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList85 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList85, shutdownHookArray84);
        atmosphereConfig81.shutdownHooks = shutdownHookList85;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList89 = atmosphereConfig88.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList90 = null;
        atmosphereConfig88.setshutdownHooks(shutdownHookList90);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig92 = atmosphereConfig81.populate(atmosphereConfig88);
        java.lang.String str94 = atmosphereConfig81.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList95 = atmosphereConfig81.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap96 = atmosphereConfig81.getproperties();
        atmosphereConfig0.setproperties(strMap96);
        atmosphereConfig0.initComplete();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider99 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(shutdownHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(shutdownHookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(startupHookList62);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNull(atmosphereFramework66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(startupHookList74);
        org.junit.Assert.assertNotNull(shutdownHookList75);
        org.junit.Assert.assertNotNull(shutdownHookList77);
        org.junit.Assert.assertNotNull(shutdownHookArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(startupHookList89);
        org.junit.Assert.assertNotNull(atmosphereConfig92);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNotNull(startupHookList95);
        org.junit.Assert.assertNotNull(strMap96);
    }

    @Test
    public void test02438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02438");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        boolean boolean9 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        atmosphereConfig8.initComplete();
        atmosphereConfig8.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig8.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig8.getframework();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(atmosphereFramework14);
    }

    @Test
    public void test02439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02439");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        boolean boolean10 = atmosphereConfig0.getInitParameter("hi!", false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        atmosphereConfig15.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = null;
        atmosphereConfig22.setshutdownHooks(shutdownHookList24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig15.populate(atmosphereConfig22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig26.startUpHook = startupHookList28;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig26.startUpHook;
        org.slf4j.Logger logger32 = atmosphereConfig26.getlogger();
        boolean boolean33 = atmosphereConfig26.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig26.framework = atmosphereFramework34;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig26.properties;
        atmosphereConfig0.setproperties(strMap36);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test02440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02440");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.shutdownHook(shutdownHook10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider13 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test02441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02441");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        atmosphereConfig0.initComplete();
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereHandlerConfigList9);
    }

    @Test
    public void test02442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02442");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.slf4j.Logger logger12 = atmosphereConfig0.getlogger();
        boolean boolean13 = atmosphereConfig0.getuseServletContextParameters();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        atmosphereConfig15.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList19, shutdownHookArray18);
        atmosphereConfig15.shutdownHooks = shutdownHookList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = null;
        atmosphereConfig22.setshutdownHooks(shutdownHookList24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig15.populate(atmosphereConfig22);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig22.properties;
        atmosphereConfig0.properties = strMap27;
        boolean boolean31 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        atmosphereConfig32.setproperties(strMap33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig32.shutdownHooks = shutdownHookList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = null;
        atmosphereConfig39.setshutdownHooks(shutdownHookList41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig32.populate(atmosphereConfig39);
        java.lang.String str46 = atmosphereConfig43.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig43.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig43.getproperties();
        atmosphereConfig0.setproperties(strMap48);
        boolean boolean50 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory51 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(shutdownHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test02443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02443");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.setframework(atmosphereFramework9);
        atmosphereConfig8.setSupportSession(true);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration13 = atmosphereConfig8.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
    }

    @Test
    public void test02444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02444");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig0.useServletContextParameters;
        java.lang.String str11 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework();
        boolean boolean14 = atmosphereConfig0.useServletContextParameters;
        boolean boolean17 = atmosphereConfig0.getInitParameter("", true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test02445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02445");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(strMap5);
    }

    @Test
    public void test02446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02446");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig4.setThrowExceptionOnCloned(true);
        boolean boolean7 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig4.startupHook(startupHook8);
        boolean boolean10 = atmosphereConfig4.isThrowExceptionOnCloned();
        atmosphereConfig4.supportSession = true;
        int int15 = atmosphereConfig4.getInitParameter("", 32);
        atmosphereConfig4.setuseServletContextParameters(true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
    }

    @Test
    public void test02447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02447");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        atmosphereConfig28.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.shutdownHooks;
        atmosphereConfig28.setshutdownHooks(shutdownHookList33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig28.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig28.setframework(atmosphereFramework36);
        boolean boolean38 = atmosphereConfig28.isSupportSession();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test02448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02448");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.getproperties();
        java.lang.String str16 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory19 = atmosphereConfig18.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(atmosphereConfig18);
    }

    @Test
    public void test02449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02449");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig8.setproperties(strMap9);
        boolean boolean11 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig8.supportSession = false;
        org.slf4j.Logger logger15 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig7.populate(atmosphereConfig8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig8.getframework();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNull(atmosphereFramework17);
    }

    @Test
    public void test02450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02450");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        boolean boolean9 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig7.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig7.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig13.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig16.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig16.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig16.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig16.startUpHook;
        atmosphereConfig13.startUpHook = startupHookList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig0.populate(atmosphereConfig13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig24.framework = atmosphereFramework25;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
    }

    @Test
    public void test02451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02451");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.lang.String str4 = atmosphereConfig0.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean8 = atmosphereConfig0.getInitParameter("", false);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02452");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties();
        atmosphereConfig0.supportSession = false;
        boolean boolean13 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean14 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory17 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test02453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02453");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        atmosphereConfig0.setSupportSession(true);
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        atmosphereConfig19.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray23 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList24, atmosphereHandlerConfigArray23);
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig18.populate(atmosphereConfig19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig18.getAtmosphereHandlerConfig();
        boolean boolean29 = atmosphereConfig18.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig18.framework = atmosphereFramework30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.populate(atmosphereConfig18);
        atmosphereConfig32.setThrowExceptionOnCloned(true);
        boolean boolean37 = atmosphereConfig32.getInitParameter("hi!", true);
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test02454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02454");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        boolean boolean10 = atmosphereConfig0.getInitParameter("hi!", false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.getproperties();
        org.slf4j.Logger logger17 = atmosphereConfig14.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig14.properties;
        atmosphereConfig0.setproperties(strMap18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(atmosphereFramework20);
    }

    @Test
    public void test02455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02455");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig8.setproperties(strMap9);
        boolean boolean11 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig8.supportSession = false;
        org.slf4j.Logger logger15 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig7.populate(atmosphereConfig8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig17.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.startupHook(startupHook22);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig21.startUpHook;
        atmosphereConfig7.setstartUpHook(startupHookList24);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig7.startUpHook;
        boolean boolean27 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        boolean boolean28 = atmosphereConfig7.isSupportSession();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(shutdownHookList19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test02456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02456");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig8.shutdownHooks;
        boolean boolean11 = atmosphereConfig8.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig8.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        atmosphereConfig13.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig8.populate(atmosphereConfig13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.lang.String str21 = atmosphereConfig17.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.atmosphereHandlerConfig;
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig28.shutdownHooks;
        boolean boolean31 = atmosphereConfig28.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig28.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        atmosphereConfig33.setproperties(strMap34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig28.populate(atmosphereConfig33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig36.setframework(atmosphereFramework37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig36.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig40.startUpHook;
        java.lang.String str44 = atmosphereConfig40.getInitParameter("", "");
        boolean boolean45 = atmosphereConfig40.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig40.getstartUpHook();
        atmosphereConfig36.setstartUpHook(startupHookList46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig0.populate(atmosphereConfig36);
        boolean boolean49 = atmosphereConfig36.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            atmosphereConfig36.destroy();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test02457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02457");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster8 = atmosphereConfig4.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test02458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02458");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.lang.String str14 = atmosphereConfig11.getInitParameter("", "");
        boolean boolean15 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        atmosphereConfig16.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig16.shutdownHooks = shutdownHookList20;
        atmosphereConfig11.shutdownHooks = shutdownHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig11.properties();
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(true);
        java.lang.Class<?> wildcardClass29 = atmosphereConfig11.getClass();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test02459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02459");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        int int6 = atmosphereConfig0.getInitParameter("hi!", (int) (short) -1);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        int int11 = atmosphereConfig0.getInitParameter("", (int) (short) -1);
        boolean boolean14 = atmosphereConfig0.getInitParameter("", false);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test02460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02460");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig7.getstartUpHook();
        boolean boolean13 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig7.setframework(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig7.setframework(atmosphereFramework16);
        boolean boolean18 = atmosphereConfig7.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        boolean boolean23 = atmosphereConfig19.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig19.getframework();
        atmosphereConfig19.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig19.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.populate(atmosphereConfig19);
        boolean boolean29 = atmosphereConfig19.throwExceptionOnCloned;
        boolean boolean30 = atmosphereConfig19.getuseServletContextParameters();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test02461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02461");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean12 = atmosphereConfig11.supportSession;
        int int15 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig11.throwExceptionOnCloned = false;
        java.lang.String str20 = atmosphereConfig11.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig11.framework;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework21);
    }

    @Test
    public void test02462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02462");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig8.getuseServletContextParameters();
        atmosphereConfig8.useServletContextParameters = false;
        boolean boolean13 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig8.framework;
        int int18 = atmosphereConfig8.getInitParameter("", 97);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig8.getproperties();
        java.lang.String str21 = atmosphereConfig8.getInitParameter("");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster22 = atmosphereConfig8.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test02463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02463");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray2 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList3 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList3, atmosphereHandlerConfigArray2);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList3;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig7.shutdownHooks;
        boolean boolean9 = atmosphereConfig7.getuseServletContextParameters();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig7.properties;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test02464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02464");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        atmosphereConfig8.setproperties(strMap9);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig8.shutdownHooks = shutdownHookList12;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = null;
        atmosphereConfig15.setshutdownHooks(shutdownHookList17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig8.populate(atmosphereConfig15);
        boolean boolean20 = atmosphereConfig19.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig19.startUpHook;
        java.lang.String str23 = atmosphereConfig19.getInitParameter("hi!");
        boolean boolean24 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        atmosphereConfig25.setproperties(strMap26);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList29, shutdownHookArray28);
        atmosphereConfig25.shutdownHooks = shutdownHookList29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = null;
        atmosphereConfig32.setshutdownHooks(shutdownHookList34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig25.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig32.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        atmosphereConfig39.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray43 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList44, atmosphereHandlerConfigArray43);
        atmosphereConfig39.atmosphereHandlerConfig = atmosphereHandlerConfigList44;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig39.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = atmosphereConfig48.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig48.setframework(atmosphereFramework51);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = atmosphereConfig48.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig48.startupHook(startupHook54);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig48.getshutdownHooks();
        atmosphereConfig39.setshutdownHooks(shutdownHookList56);
        atmosphereConfig32.shutdownHooks = shutdownHookList56;
        atmosphereConfig19.shutdownHooks = shutdownHookList56;
        atmosphereConfig0.setshutdownHooks(shutdownHookList56);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNull(atmosphereFramework50);
        org.junit.Assert.assertNull(atmosphereFramework53);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(shutdownHookList56);
    }

    @Test
    public void test02465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02465");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.lang.String str4 = atmosphereConfig0.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig0.framework = atmosphereFramework6;
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        atmosphereConfig10.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray14 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList15, atmosphereHandlerConfigArray14);
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig9.populate(atmosphereConfig10);
        boolean boolean19 = atmosphereConfig10.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList21, shutdownHookArray20);
        atmosphereConfig10.shutdownHooks = shutdownHookList21;
        boolean boolean24 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig0.populate(atmosphereConfig10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap26 = atmosphereConfig25.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
    }

    @Test
    public void test02466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02466");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray4 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList5, atmosphereHandlerConfigArray4);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        atmosphereConfig9.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
    }

    @Test
    public void test02467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02467");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray4 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList5, atmosphereHandlerConfigArray4);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig15.shutdownHooks;
        boolean boolean18 = atmosphereConfig15.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig15.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        atmosphereConfig20.setproperties(strMap21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig15.populate(atmosphereConfig20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig24.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig24.setframework(atmosphereFramework27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig20.populate(atmosphereConfig24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig24.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig24.getstartUpHook();
        boolean boolean35 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig24.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig38.shutdownHooks;
        boolean boolean41 = atmosphereConfig38.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig38.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        atmosphereConfig43.setproperties(strMap44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig38.populate(atmosphereConfig43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        atmosphereConfig46.setframework(atmosphereFramework47);
        java.lang.String str51 = atmosphereConfig46.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = atmosphereConfig46.getframework();
        boolean boolean53 = atmosphereConfig46.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = null;
        atmosphereConfig54.setproperties(strMap55);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray57 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList58, shutdownHookArray57);
        atmosphereConfig54.shutdownHooks = shutdownHookList58;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig54.startupHook(startupHook61);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = atmosphereConfig63.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig63.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig63.shutdownHook(shutdownHook66);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig67.properties();
        atmosphereConfig54.setproperties(strMap68);
        atmosphereConfig46.properties = strMap68;
        atmosphereConfig0.setproperties(strMap68);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(atmosphereFramework52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(startupHookList64);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(strMap68);
    }

    @Test
    public void test02468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02468");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray4 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList5, atmosphereHandlerConfigArray4);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.lang.String str11 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        atmosphereConfig16.setThrowExceptionOnCloned(true);
        boolean boolean19 = atmosphereConfig16.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig16.setframework(atmosphereFramework20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig16.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray26 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList27, atmosphereHandlerConfigArray26);
        atmosphereConfig24.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig24.startupHook(startupHook30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig31.shutdownHooks;
        java.lang.String str35 = atmosphereConfig31.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig31.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList36);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory38 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(startupHookList36);
    }

    @Test
    public void test02469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02469");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig7.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig7.startUpHook;
        boolean boolean12 = atmosphereConfig7.getInitParameter("hi!", false);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory13 = atmosphereConfig7.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test02470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02470");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray2 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList3 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList3, atmosphereHandlerConfigArray2);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList3;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig7.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig7.framework();
        atmosphereConfig7.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig13.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig13.setframework(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig13.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig13.startupHook(startupHook19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig13.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig13.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig23.shutdownHooks;
        boolean boolean26 = atmosphereConfig23.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig23.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        atmosphereConfig28.setproperties(strMap29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig23.populate(atmosphereConfig28);
        org.slf4j.Logger logger32 = atmosphereConfig31.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        atmosphereConfig33.setproperties(strMap34);
        boolean boolean36 = atmosphereConfig33.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig33.getstartUpHook();
        atmosphereConfig31.startUpHook = startupHookList37;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        atmosphereConfig31.framework = atmosphereFramework39;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig31.startupHook(startupHook41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig43.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = null;
        atmosphereConfig43.setshutdownHooks(shutdownHookList45);
        boolean boolean47 = atmosphereConfig43.useServletContextParameters;
        atmosphereConfig43.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig43.properties;
        atmosphereConfig31.setproperties(strMap50);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig31.getshutdownHooks();
        atmosphereConfig31.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig13.populate(atmosphereConfig31);
        boolean boolean56 = atmosphereConfig13.useServletContextParameters;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig13.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig58.startUpHook;
        boolean boolean60 = atmosphereConfig58.sessionTimeoutRemovalAllowed;
        boolean boolean61 = atmosphereConfig58.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig58.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig58.startupHook(startupHook63);
        boolean boolean65 = atmosphereConfig64.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig67.startUpHook;
        atmosphereConfig67.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray71 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList72 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList72, atmosphereHandlerConfigArray71);
        atmosphereConfig67.atmosphereHandlerConfig = atmosphereHandlerConfigList72;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig66.populate(atmosphereConfig67);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList76 = atmosphereConfig66.getstartUpHook();
        atmosphereConfig64.startUpHook = startupHookList76;
        atmosphereConfig13.startUpHook = startupHookList76;
        atmosphereConfig7.setstartUpHook(startupHookList76);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(startupHookList44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(startupHookList68);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNotNull(startupHookList76);
    }

    @Test
    public void test02471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02471");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig1.startUpHook;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray5 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList6, atmosphereHandlerConfigArray5);
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig1);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig9.getframework();
        boolean boolean11 = atmosphereConfig9.isThrowExceptionOnCloned();
        atmosphereConfig9.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        atmosphereConfig14.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig14.shutdownHooks = shutdownHookList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = null;
        atmosphereConfig21.setshutdownHooks(shutdownHookList23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig14.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig26.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList30, shutdownHookArray29);
        atmosphereConfig26.shutdownHooks = shutdownHookList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = null;
        atmosphereConfig33.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig26.populate(atmosphereConfig33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig26.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig26.getproperties();
        atmosphereConfig21.properties = strMap39;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig21.startupHook(startupHook41);
        atmosphereConfig42.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.shutdownHooks;
        atmosphereConfig42.setshutdownHooks(shutdownHookList47);
        atmosphereConfig9.setshutdownHooks(shutdownHookList47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = atmosphereConfig50.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        atmosphereConfig50.setframework(atmosphereFramework53);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig50.getframework();
        java.lang.String str58 = atmosphereConfig50.getInitParameter("hi!", "hi!");
        atmosphereConfig50.initComplete();
        boolean boolean60 = atmosphereConfig50.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig50.getproperties();
        atmosphereConfig9.properties = strMap61;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig9.atmosphereHandlerConfig;
        atmosphereConfig9.setuseServletContextParameters(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig9.startupHook(startupHook66);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = null;
        atmosphereConfig68.setproperties(strMap69);
        boolean boolean71 = atmosphereConfig68.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig68.getproperties();
        atmosphereConfig68.initComplete();
        atmosphereConfig68.setSessionTimeoutRemovalAllowed(true);
        boolean boolean78 = atmosphereConfig68.getInitParameter("hi!", false);
        atmosphereConfig68.setuseServletContextParameters(true);
        atmosphereConfig68.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework83 = null;
        atmosphereConfig68.setframework(atmosphereFramework83);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList85 = atmosphereConfig68.startUpHook;
        atmosphereConfig67.setstartUpHook(startupHookList85);
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(shutdownHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNull(atmosphereFramework52);
        org.junit.Assert.assertNull(atmosphereFramework55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(startupHookList85);
    }

    @Test
    public void test02472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02472");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray4 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList5, atmosphereHandlerConfigArray4);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean15 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean16 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean17 = atmosphereConfig0.useServletContextParameters;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test02473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02473");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        boolean boolean9 = atmosphereConfig0.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.lang.String str14 = atmosphereConfig10.getInitParameter("", "");
        boolean boolean15 = atmosphereConfig10.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList16;
        java.lang.String str19 = atmosphereConfig0.getInitParameter("hi!");
        atmosphereConfig0.destroy();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig0.properties();
        boolean boolean24 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test02474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02474");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.lang.String str4 = atmosphereConfig0.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig0.framework = atmosphereFramework6;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray11 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList12, atmosphereHandlerConfigArray11);
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig9.startupHook(startupHook15);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig16.shutdownHooks;
        java.lang.String str20 = atmosphereConfig16.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        atmosphereConfig21.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig21.shutdownHooks = shutdownHookList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = null;
        atmosphereConfig28.setshutdownHooks(shutdownHookList30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig21.populate(atmosphereConfig28);
        boolean boolean33 = atmosphereConfig32.supportSession;
        int int36 = atmosphereConfig32.getInitParameter("hi!", (int) (short) 0);
        java.lang.String str39 = atmosphereConfig32.getInitParameter("hi!", "");
        boolean boolean40 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.lang.String str45 = atmosphereConfig41.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig41.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        atmosphereConfig41.framework = atmosphereFramework47;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = null;
        atmosphereConfig49.setproperties(strMap50);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray52 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList53, shutdownHookArray52);
        atmosphereConfig49.shutdownHooks = shutdownHookList53;
        boolean boolean56 = atmosphereConfig49.sessionTimeoutRemovalAllowed;
        java.lang.String str58 = atmosphereConfig49.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = atmosphereConfig49.shutdownHooks;
        atmosphereConfig41.setshutdownHooks(shutdownHookList59);
        atmosphereConfig32.shutdownHooks = shutdownHookList59;
        atmosphereConfig16.setshutdownHooks(shutdownHookList59);
        atmosphereConfig0.setshutdownHooks(shutdownHookList59);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = null;
        atmosphereConfig0.setframework(atmosphereFramework64);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig66.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList68 = atmosphereConfig66.shutdownHooks;
        boolean boolean69 = atmosphereConfig66.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig66.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList71 = atmosphereConfig66.shutdownHooks;
        atmosphereConfig66.useServletContextParameters = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework74 = null;
        atmosphereConfig66.setframework(atmosphereFramework74);
        atmosphereConfig66.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = atmosphereConfig66.shutdownHooks;
        org.slf4j.Logger logger79 = atmosphereConfig66.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList80 = atmosphereConfig66.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList80;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig0.shutdownHook(shutdownHook82);
        atmosphereConfig83.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(shutdownHookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(shutdownHookList59);
        org.junit.Assert.assertNotNull(startupHookList67);
        org.junit.Assert.assertNotNull(shutdownHookList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(shutdownHookList71);
        org.junit.Assert.assertNotNull(shutdownHookList78);
        org.junit.Assert.assertNotNull(logger79);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList80);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
    }

    @Test
    public void test02475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02475");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.slf4j.Logger logger9 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig10.setproperties(strMap11);
        boolean boolean13 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.getstartUpHook();
        atmosphereConfig8.startUpHook = startupHookList14;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig8.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig8.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.setshutdownHooks(shutdownHookList22);
        boolean boolean24 = atmosphereConfig20.useServletContextParameters;
        atmosphereConfig20.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.properties;
        atmosphereConfig8.setproperties(strMap27);
        atmosphereConfig8.initComplete();
        boolean boolean30 = atmosphereConfig8.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        atmosphereConfig31.setproperties(strMap32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray34 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList35, shutdownHookArray34);
        atmosphereConfig31.shutdownHooks = shutdownHookList35;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig31.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig40.startUpHook;
        atmosphereConfig40.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray44 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList45, atmosphereHandlerConfigArray44);
        atmosphereConfig40.atmosphereHandlerConfig = atmosphereHandlerConfigList45;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig39.populate(atmosphereConfig40);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig39.getAtmosphereHandlerConfig();
        atmosphereConfig31.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig8.setframework(atmosphereFramework52);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
    }

    @Test
    public void test02476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02476");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        boolean boolean6 = atmosphereConfig0.getuseServletContextParameters();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test02477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02477");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig12.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig12.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = null;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.getproperties();
        atmosphereConfig7.properties = strMap25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig7.startupHook(startupHook27);
        atmosphereConfig28.useServletContextParameters = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.shutdownHooks;
        atmosphereConfig28.setshutdownHooks(shutdownHookList33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig28.shutdownHooks;
        atmosphereConfig28.supportSession = false;
        atmosphereConfig28.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig28.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig28.atmosphereHandlerConfig;
        atmosphereConfig28.useServletContextParameters = true;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
    }

    @Test
    public void test02478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02478");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        atmosphereConfig5.setproperties(strMap6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig8.setframework(atmosphereFramework9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig8.getproperties();
        boolean boolean12 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        boolean boolean13 = atmosphereConfig8.useServletContextParameters;
        boolean boolean14 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test02479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02479");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        boolean boolean9 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02480");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.shutdownHook(shutdownHook12);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext14 = atmosphereConfig13.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
    }

    @Test
    public void test02481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02481");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig13.shutdownHooks;
        boolean boolean16 = atmosphereConfig13.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig13.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        atmosphereConfig18.setproperties(strMap19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig13.populate(atmosphereConfig18);
        org.slf4j.Logger logger22 = atmosphereConfig21.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        atmosphereConfig23.setproperties(strMap24);
        boolean boolean26 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig23.getstartUpHook();
        atmosphereConfig21.startUpHook = startupHookList27;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig21.framework = atmosphereFramework29;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig21.startupHook(startupHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = null;
        atmosphereConfig33.setshutdownHooks(shutdownHookList35);
        boolean boolean37 = atmosphereConfig33.useServletContextParameters;
        atmosphereConfig33.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig33.properties;
        atmosphereConfig21.setproperties(strMap40);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig21.getshutdownHooks();
        boolean boolean45 = atmosphereConfig21.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig0.populate(atmosphereConfig21);
        boolean boolean49 = atmosphereConfig21.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig50.shutdownHooks;
        boolean boolean53 = atmosphereConfig50.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig50.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        atmosphereConfig55.setproperties(strMap56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig50.populate(atmosphereConfig55);
        org.slf4j.Logger logger59 = atmosphereConfig58.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        atmosphereConfig60.setproperties(strMap61);
        boolean boolean63 = atmosphereConfig60.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = atmosphereConfig60.getstartUpHook();
        atmosphereConfig58.startUpHook = startupHookList64;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = null;
        atmosphereConfig58.framework = atmosphereFramework66;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig58.startupHook(startupHook68);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList71 = atmosphereConfig70.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = null;
        atmosphereConfig70.setshutdownHooks(shutdownHookList72);
        boolean boolean74 = atmosphereConfig70.useServletContextParameters;
        atmosphereConfig70.useServletContextParameters = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig70.properties;
        atmosphereConfig58.setproperties(strMap77);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = atmosphereConfig58.getshutdownHooks();
        atmosphereConfig21.setshutdownHooks(shutdownHookList79);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(logger59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(startupHookList64);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(startupHookList71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(shutdownHookList79);
    }

    @Test
    public void test02482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02482");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean5 = atmosphereConfig0.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.useServletContextParameters = true;
        boolean boolean9 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean10 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test02483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02483");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = null;
        atmosphereConfig10.setshutdownHooks(shutdownHookList12);
        boolean boolean14 = atmosphereConfig10.useServletContextParameters;
        atmosphereConfig10.useServletContextParameters = true;
        java.lang.String str18 = atmosphereConfig10.getInitParameter("hi!");
        boolean boolean19 = atmosphereConfig10.getuseServletContextParameters();
        boolean boolean22 = atmosphereConfig10.getInitParameter("", true);
        boolean boolean23 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig10.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = null;
        atmosphereConfig25.setshutdownHooks(shutdownHookList27);
        boolean boolean29 = atmosphereConfig25.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig25.getframework();
        boolean boolean31 = atmosphereConfig25.sessionTimeoutRemovalAllowed;
        boolean boolean32 = atmosphereConfig25.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig25.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig34.shutdownHooks;
        boolean boolean37 = atmosphereConfig34.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig34.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        atmosphereConfig39.setproperties(strMap40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig34.populate(atmosphereConfig39);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        atmosphereConfig34.setproperties(strMap43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.startUpHook;
        java.lang.String str49 = atmosphereConfig45.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig45.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig45.framework = atmosphereFramework51;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig45.startUpHook;
        atmosphereConfig34.startUpHook = startupHookList53;
        atmosphereConfig25.setstartUpHook(startupHookList53);
        atmosphereConfig10.startUpHook = startupHookList53;
        atmosphereConfig0.startUpHook = startupHookList53;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = null;
        atmosphereConfig0.startUpHook = startupHookList59;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNull(atmosphereFramework58);
    }

    @Test
    public void test02484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02484");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig7.getstartUpHook();
        boolean boolean13 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig7.setframework(atmosphereFramework14);
        boolean boolean16 = atmosphereConfig7.useServletContextParameters;
        atmosphereConfig7.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig7.framework = atmosphereFramework19;
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        org.slf4j.Logger logger23 = atmosphereConfig7.getlogger();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(logger23);
    }

    @Test
    public void test02485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02485");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        atmosphereConfig0.setuseServletContextParameters(true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
    }

    @Test
    public void test02486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02486");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.supportSession;
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.getshutdownHooks();
        boolean boolean10 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        java.lang.String str16 = atmosphereConfig0.getInitParameter("", "hi!");
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test02487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02487");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        atmosphereConfig9.setproperties(strMap10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList13, shutdownHookArray12);
        atmosphereConfig9.shutdownHooks = shutdownHookList13;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig9.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList16;
        boolean boolean18 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(shutdownHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test02488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02488");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(true);
        boolean boolean7 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test02489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02489");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.setframework(atmosphereFramework3);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.lang.String str8 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        atmosphereConfig0.initComplete();
        boolean boolean10 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        atmosphereConfig13.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList17, shutdownHookArray16);
        atmosphereConfig13.shutdownHooks = shutdownHookList17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = null;
        atmosphereConfig20.setshutdownHooks(shutdownHookList22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig13.populate(atmosphereConfig20);
        boolean boolean25 = atmosphereConfig24.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig24.startUpHook;
        atmosphereConfig24.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig24.setuseServletContextParameters(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig24.getproperties();
        atmosphereConfig0.setproperties(strMap31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig0.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig35 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(shutdownHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
    }

    @Test
    public void test02490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02490");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig8.shutdownHooks;
        boolean boolean11 = atmosphereConfig8.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig8.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        atmosphereConfig13.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig8.populate(atmosphereConfig13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.lang.String str21 = atmosphereConfig17.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.atmosphereHandlerConfig;
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        atmosphereConfig0.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig0.properties;
        java.lang.String str29 = atmosphereConfig0.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig0.framework();
        atmosphereConfig0.setuseServletContextParameters(true);
        boolean boolean34 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test02491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02491");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig0.shutdownHooks;
        boolean boolean8 = atmosphereConfig0.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(startupHookList9);
    }

    @Test
    public void test02492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02492");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.lang.String str4 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.lang.Class<?> wildcardClass10 = atmosphereHandlerConfigList9.getClass();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test02493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02493");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig1.startUpHook;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray5 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList6, atmosphereHandlerConfigArray5);
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig1);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig9.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig9.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        boolean boolean14 = atmosphereConfig12.sessionTimeoutRemovalAllowed;
        boolean boolean15 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig12.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig12.framework = atmosphereFramework17;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig12.startupHook(startupHook19);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig12.getstartUpHook();
        atmosphereConfig9.setstartUpHook(startupHookList21);
        java.lang.String str25 = atmosphereConfig9.getInitParameter("", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig9.shutdownHooks;
        boolean boolean29 = atmosphereConfig9.getInitParameter("", false);
        atmosphereConfig9.setSupportSession(true);
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test02494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02494");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        boolean boolean10 = atmosphereConfig0.getInitParameter("hi!", false);
        atmosphereConfig0.setuseServletContextParameters(true);
        atmosphereConfig0.setuseServletContextParameters(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig0.setframework(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = null;
        atmosphereConfig17.setshutdownHooks(shutdownHookList19);
        boolean boolean21 = atmosphereConfig17.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig17.getframework();
        atmosphereConfig17.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig25.setSessionTimeoutRemovalAllowed(false);
        boolean boolean30 = atmosphereConfig25.useServletContextParameters;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig25.startUpHook;
        atmosphereConfig17.startUpHook = startupHookList31;
        atmosphereConfig0.startUpHook = startupHookList31;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList34;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.shutdownHook(shutdownHook36);
        boolean boolean38 = atmosphereConfig37.isSupportSession();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test02495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02495");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig9.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig9.setframework(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig9.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig9.startUpHook;
        atmosphereConfig6.startUpHook = startupHookList15;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig6.startupHook(startupHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig6.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig6.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig6.framework = atmosphereFramework21;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig6.framework();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass24 = atmosphereFramework23.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNull(atmosphereFramework23);
    }

    @Test
    public void test02496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02496");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(shutdownHookList5);
    }

    @Test
    public void test02497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02497");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.useServletContextParameters;
        atmosphereConfig0.useServletContextParameters = true;
        java.lang.String str8 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean9 = atmosphereConfig0.getuseServletContextParameters();
        boolean boolean10 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test02498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02498");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.supportSession;
        boolean boolean6 = atmosphereConfig0.getuseServletContextParameters();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        atmosphereConfig7.setproperties(strMap8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList11, shutdownHookArray10);
        atmosphereConfig7.shutdownHooks = shutdownHookList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = null;
        atmosphereConfig14.setshutdownHooks(shutdownHookList16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig7.populate(atmosphereConfig14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig14.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList19;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        atmosphereConfig22.setproperties(strMap23);
        boolean boolean25 = atmosphereConfig22.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig22.getproperties();
        org.slf4j.Logger logger27 = atmosphereConfig22.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig22.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig32.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        boolean boolean37 = atmosphereConfig36.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig36.properties();
        atmosphereConfig0.setproperties(strMap38);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig0.framework();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig0.shutdownHook(shutdownHook42);
        atmosphereConfig43.initComplete();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(logger27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
    }

    @Test
    public void test02499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02499");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray3 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList4, shutdownHookArray3);
        atmosphereConfig0.shutdownHooks = shutdownHookList4;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = null;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.populate(atmosphereConfig7);
        int int14 = atmosphereConfig7.getInitParameter("hi!", (int) (byte) -1);
        org.slf4j.Logger logger15 = atmosphereConfig7.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig7.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig17.framework = atmosphereFramework18;
        org.junit.Assert.assertNotNull(shutdownHookArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
    }

    @Test
    public void test02500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02500");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        atmosphereConfig0.setproperties(strMap1);
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        boolean boolean12 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        boolean boolean13 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig10.properties();
        atmosphereConfig10.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig10.startupHook(startupHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.properties();
        atmosphereConfig9.properties = strMap18;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig9.framework();
        boolean boolean21 = atmosphereConfig9.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig9.getproperties();
        boolean boolean23 = atmosphereConfig9.useServletContextParameters;
        atmosphereConfig9.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        atmosphereConfig25.setproperties(strMap26);
        boolean boolean28 = atmosphereConfig25.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig25.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray30 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31, shutdownHookArray30);
        atmosphereConfig25.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList31);
        boolean boolean36 = atmosphereConfig25.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig25.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig38.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig38.setframework(atmosphereFramework41);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig38.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig38.startupHook(startupHook44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig38.properties();
        atmosphereConfig25.properties = strMap46;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig25.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig49.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig49.shutdownHooks;
        atmosphereConfig49.setSessionTimeoutRemovalAllowed(false);
        boolean boolean54 = atmosphereConfig49.useServletContextParameters;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = atmosphereConfig55.startUpHook;
        boolean boolean57 = atmosphereConfig55.sessionTimeoutRemovalAllowed;
        boolean boolean58 = atmosphereConfig55.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig55.properties();
        atmosphereConfig55.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig55.startupHook(startupHook61);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig49.populate(atmosphereConfig55);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig63.shutdownHooks;
        atmosphereConfig25.setshutdownHooks(shutdownHookList64);
        atmosphereConfig9.shutdownHooks = shutdownHookList64;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig67.startUpHook;
        boolean boolean69 = atmosphereConfig67.sessionTimeoutRemovalAllowed;
        boolean boolean70 = atmosphereConfig67.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig67.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework72 = null;
        atmosphereConfig67.framework = atmosphereFramework72;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig67.startupHook(startupHook74);
        boolean boolean76 = atmosphereConfig75.sessionTimeoutRemovalAllowed;
        org.slf4j.Logger logger77 = atmosphereConfig75.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework78 = null;
        atmosphereConfig75.framework = atmosphereFramework78;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList81 = atmosphereConfig80.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList82 = atmosphereConfig80.shutdownHooks;
        atmosphereConfig75.setshutdownHooks(shutdownHookList82);
        atmosphereConfig9.shutdownHooks = shutdownHookList82;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(shutdownHookArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(startupHookList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(shutdownHookList64);
        org.junit.Assert.assertNotNull(startupHookList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(logger77);
        org.junit.Assert.assertNotNull(startupHookList81);
        org.junit.Assert.assertNotNull(shutdownHookList82);
    }
}

