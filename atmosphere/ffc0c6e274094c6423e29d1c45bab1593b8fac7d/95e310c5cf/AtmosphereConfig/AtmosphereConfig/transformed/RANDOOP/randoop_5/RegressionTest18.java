import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest18 {

    public static boolean debug = false;

    @Test
    public void test09001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09001");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig10.framework;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(false);
        boolean boolean16 = atmosphereConfig13.throwExceptionOnCloned;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider17 = atmosphereConfig13.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test09002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09002");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties();
        java.lang.String str15 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig0.framework = atmosphereFramework16;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test09003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09003");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        int int14 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig10.supportSession = false;
        atmosphereConfig10.setSupportSession(false);
        java.lang.String str20 = atmosphereConfig10.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig9.populate(atmosphereConfig10);
        java.lang.String str24 = atmosphereConfig21.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        boolean boolean27 = atmosphereConfig25.throwExceptionOnCloned;
        atmosphereConfig25.destroy();
        atmosphereConfig25.initComplete();
        java.lang.String str32 = atmosphereConfig25.getInitParameter("hi!", "");
        boolean boolean33 = atmosphereConfig25.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig34.getshutdownHooks();
        atmosphereConfig34.setThrowExceptionOnCloned(false);
        java.lang.String str40 = atmosphereConfig34.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig34.properties;
        atmosphereConfig25.setproperties(strMap41);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig25.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig25.setframework(atmosphereFramework44);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig25.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig25.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        atmosphereConfig21.supportSession = true;
        atmosphereConfig21.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = null;
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
    }

    @Test
    public void test09004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09004");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties;
        atmosphereConfig0.setproperties(strMap10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig12.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList14);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        int int24 = atmosphereConfig20.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig20.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.properties();
        atmosphereConfig0.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.shutdownHook(shutdownHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test09005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09005");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        int int15 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig11.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig11.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig23.atmosphereHandlerConfig;
        boolean boolean27 = atmosphereConfig23.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig23.getshutdownHooks();
        atmosphereConfig11.setshutdownHooks(shutdownHookList28);
        atmosphereConfig0.setshutdownHooks(shutdownHookList28);
        org.slf4j.Logger logger31 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig0.setframework(atmosphereFramework33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig0.shutdownHook(shutdownHook37);
        atmosphereConfig38.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        int int45 = atmosphereConfig41.getInitParameter("hi!", (int) (short) 0);
        boolean boolean46 = atmosphereConfig41.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig41.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig41.startupHook(startupHook49);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig50.shutdownHooks;
        atmosphereConfig38.setshutdownHooks(shutdownHookList51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(shutdownHookList51);
    }

    @Test
    public void test09006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09006");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        java.lang.String str11 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean14 = atmosphereConfig0.getInitParameter("hi!", false);
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09007");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        boolean boolean8 = atmosphereConfig4.supportSession;
        boolean boolean9 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig4.properties;
        boolean boolean11 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        int int16 = atmosphereConfig12.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig12.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19, startupHookArray18);
        atmosphereConfig12.startUpHook = startupHookList19;
        org.slf4j.Logger logger22 = atmosphereConfig12.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig12.destroy();
        atmosphereConfig12.supportSession = true;
        atmosphereConfig12.initComplete();
        atmosphereConfig12.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        int int34 = atmosphereConfig30.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig30.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig30.startUpHook = startupHookList37;
        org.slf4j.Logger logger40 = atmosphereConfig30.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig30.getshutdownHooks();
        atmosphereConfig30.destroy();
        atmosphereConfig30.supportSession = true;
        atmosphereConfig30.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig46.getAtmosphereHandlerConfig();
        boolean boolean48 = atmosphereConfig46.throwExceptionOnCloned;
        atmosphereConfig46.destroy();
        atmosphereConfig46.initComplete();
        atmosphereConfig46.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = atmosphereConfig46.framework();
        atmosphereConfig46.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig30.populate(atmosphereConfig46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig46.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        atmosphereConfig58.throwExceptionOnCloned = true;
        boolean boolean62 = atmosphereConfig58.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig58.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig64.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig64.shutdownHook(shutdownHook67);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig68.startupHook(startupHook69);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = null;
        atmosphereConfig70.setframework(atmosphereFramework71);
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig70.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList74 = atmosphereConfig70.getshutdownHooks();
        atmosphereConfig58.setshutdownHooks(shutdownHookList74);
        atmosphereConfig58.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig58.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = atmosphereConfig58.getproperties();
        atmosphereConfig46.properties = strMap80;
        org.slf4j.Logger logger82 = atmosphereConfig46.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = atmosphereConfig46.getproperties();
        atmosphereConfig12.setproperties(strMap83);
        atmosphereConfig4.setproperties(strMap83);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig86.getAtmosphereHandlerConfig();
        atmosphereConfig86.throwExceptionOnCloned = true;
        boolean boolean90 = atmosphereConfig86.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList91 = atmosphereConfig86.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap92 = atmosphereConfig86.getproperties();
        boolean boolean93 = atmosphereConfig86.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig94 = atmosphereConfig4.populate(atmosphereConfig86);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList95 = atmosphereConfig86.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(logger40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(atmosphereFramework53);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(shutdownHookList74);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(logger82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig94);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList95);
    }

    @Test
    public void test09008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09008");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.getframework();
        boolean boolean7 = atmosphereConfig0.supportSession;
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean9 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
    }

    @Test
    public void test09009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09009");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig3.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        atmosphereConfig7.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.shutdownHook(shutdownHook18);
        org.slf4j.Logger logger20 = atmosphereConfig19.getlogger();
        boolean boolean21 = atmosphereConfig19.isSupportSession();
        boolean boolean22 = atmosphereConfig19.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig23.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig23.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig7.startUpHook = startupHookList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig7.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig37.getshutdownHooks();
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig42.getshutdownHooks();
        atmosphereConfig37.setshutdownHooks(shutdownHookList44);
        atmosphereConfig7.shutdownHooks = shutdownHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        int int51 = atmosphereConfig47.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig47.supportSession = false;
        boolean boolean54 = atmosphereConfig47.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig55.getshutdownHooks();
        atmosphereConfig47.setshutdownHooks(shutdownHookList57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.properties();
        atmosphereConfig47.properties = strMap62;
        atmosphereConfig7.setproperties(strMap62);
        atmosphereConfig0.properties = strMap62;
        boolean boolean66 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig0.framework();
        java.lang.String str71 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework72 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(startupHookList67);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework72);
    }

    @Test
    public void test09010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09010");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.startupHook(startupHook8);
        java.lang.String str11 = atmosphereConfig9.getInitParameter("");
        atmosphereConfig9.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig9.framework;
        atmosphereConfig9.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig9.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig19.startUpHook;
        atmosphereConfig19.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig19.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig19.startUpHook;
        atmosphereConfig9.setstartUpHook(startupHookList26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig9.framework();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNull(atmosphereFramework28);
    }

    @Test
    public void test09011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09011");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig0.getproperties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig0.framework = atmosphereFramework27;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test09012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09012");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.framework = atmosphereFramework13;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig0.getproperties();
        java.lang.String str19 = atmosphereConfig0.getInitParameter("");
        boolean boolean20 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09013");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.supportSession = true;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test09014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09014");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig0.startupHook(startupHook4);
        boolean boolean6 = atmosphereConfig5.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        atmosphereConfig11.setThrowExceptionOnCloned(false);
        atmosphereConfig11.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.shutdownHook(shutdownHook22);
        org.slf4j.Logger logger24 = atmosphereConfig23.getlogger();
        boolean boolean25 = atmosphereConfig23.isSupportSession();
        boolean boolean26 = atmosphereConfig23.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig27.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList32, startupHookArray31);
        atmosphereConfig27.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList32);
        atmosphereConfig23.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList32);
        atmosphereConfig11.startUpHook = startupHookList32;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig37.getshutdownHooks();
        atmosphereConfig11.setshutdownHooks(shutdownHookList39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig41.getshutdownHooks();
        atmosphereConfig41.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig46.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig46.getshutdownHooks();
        atmosphereConfig41.setshutdownHooks(shutdownHookList48);
        atmosphereConfig11.shutdownHooks = shutdownHookList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        int int55 = atmosphereConfig51.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig51.supportSession = false;
        boolean boolean58 = atmosphereConfig51.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig59.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = atmosphereConfig59.getshutdownHooks();
        atmosphereConfig51.setshutdownHooks(shutdownHookList61);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig63.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig63.properties();
        atmosphereConfig51.properties = strMap66;
        atmosphereConfig11.setproperties(strMap66);
        atmosphereConfig5.properties = strMap66;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig5.startupHook(startupHook70);
        boolean boolean72 = atmosphereConfig5.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(logger24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(startupHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertNotNull(shutdownHookList61);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test09015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09015");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig0.properties = strMap11;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.framework = atmosphereFramework13;
        boolean boolean15 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09016");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        int int14 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig10.supportSession = false;
        atmosphereConfig10.setSupportSession(false);
        java.lang.String str20 = atmosphereConfig10.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig9.populate(atmosphereConfig10);
        java.lang.String str24 = atmosphereConfig21.getInitParameter("hi!", "");
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig21.getAtmosphereHandlerConfig();
        boolean boolean30 = atmosphereConfig21.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig21.startupHook(startupHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        int int37 = atmosphereConfig33.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig33.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray39 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList40, startupHookArray39);
        atmosphereConfig33.startUpHook = startupHookList40;
        org.slf4j.Logger logger43 = atmosphereConfig33.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig33.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig33.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        atmosphereConfig33.framework = atmosphereFramework50;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig52.properties();
        atmosphereConfig33.setproperties(strMap55);
        atmosphereConfig32.properties = strMap55;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(startupHookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(logger43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test09017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09017");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean9 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.startupHook(startupHook10);
        atmosphereConfig8.setThrowExceptionOnCloned(false);
        boolean boolean14 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig15.getAtmosphereHandlerConfig();
        boolean boolean17 = atmosphereConfig15.throwExceptionOnCloned;
        atmosphereConfig15.destroy();
        atmosphereConfig15.initComplete();
        java.lang.String str22 = atmosphereConfig15.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig27.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig29.setframework(atmosphereFramework30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig29.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig29.shutdownHooks;
        atmosphereConfig15.shutdownHooks = shutdownHookList33;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig15.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig37.properties;
        atmosphereConfig36.setproperties(strMap39);
        atmosphereConfig8.setproperties(strMap39);
        atmosphereConfig4.properties = strMap39;
        boolean boolean43 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig4.framework = atmosphereFramework44;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory46 = atmosphereConfig4.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test09018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09018");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig8.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.shutdownHook(shutdownHook23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig24.getproperties();
        atmosphereConfig0.properties = strMap25;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean29 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig0.properties;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig35 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test09019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09019");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig4.supportSession;
        boolean boolean13 = atmosphereConfig4.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig4.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.initComplete();
        boolean boolean18 = atmosphereConfig4.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig4.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration20 = atmosphereConfig4.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
    }

    @Test
    public void test09020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09020");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig9.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig13.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList20, startupHookArray19);
        atmosphereConfig13.startUpHook = startupHookList20;
        atmosphereConfig9.startUpHook = startupHookList20;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig9.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig9.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList28;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(startupHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
    }

    @Test
    public void test09021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09021");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.framework = atmosphereFramework14;
        java.lang.String str18 = atmosphereConfig0.getInitParameter("", "hi!");
        boolean boolean19 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean20 = atmosphereConfig0.isSupportSession();
        boolean boolean21 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean22 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig0.setframework(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test09022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09022");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.getproperties();
        atmosphereConfig40.setproperties(strMap54);
        atmosphereConfig32.setproperties(strMap54);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig58.startUpHook;
        atmosphereConfig32.startUpHook = startupHookList60;
        boolean boolean62 = atmosphereConfig32.supportSession;
        boolean boolean63 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig0.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig32.startupHook(startupHook65);
        boolean boolean67 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig32.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList69 = null;
        atmosphereConfig32.setstartUpHook(startupHookList69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(atmosphereFramework68);
    }

    @Test
    public void test09023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09023");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.shutdownHook(shutdownHook10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(atmosphereFramework13);
    }

    @Test
    public void test09024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09024");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        int int8 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig4.startUpHook = startupHookList11;
        atmosphereConfig0.startUpHook = startupHookList11;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean16 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        boolean boolean19 = atmosphereConfig17.throwExceptionOnCloned;
        atmosphereConfig17.destroy();
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig17.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30, startupHookArray29);
        atmosphereConfig25.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30);
        atmosphereConfig17.startUpHook = startupHookList30;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig17.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig0.populate(atmosphereConfig17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig42.shutdownHook(shutdownHook43);
        int int47 = atmosphereConfig44.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig48.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig48.shutdownHook(shutdownHook51);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig52.shutdownHook(shutdownHook53);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig52.atmosphereHandlerConfig;
        atmosphereConfig44.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig44.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(startupHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertNotNull(shutdownHookList59);
    }

    @Test
    public void test09025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09025");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework;
        boolean boolean17 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig0.startupHook(startupHook18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        int int25 = atmosphereConfig21.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig21.supportSession = false;
        boolean boolean28 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.shutdownHook(shutdownHook34);
        org.slf4j.Logger logger36 = atmosphereConfig35.getlogger();
        boolean boolean37 = atmosphereConfig35.isSupportSession();
        boolean boolean38 = atmosphereConfig35.isThrowExceptionOnCloned();
        org.slf4j.Logger logger39 = atmosphereConfig35.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig35.properties();
        atmosphereConfig35.initComplete();
        boolean boolean42 = atmosphereConfig35.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig21.populate(atmosphereConfig35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        boolean boolean46 = atmosphereConfig44.throwExceptionOnCloned;
        atmosphereConfig44.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig44.getAtmosphereHandlerConfig();
        atmosphereConfig43.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        atmosphereConfig19.initComplete();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(logger39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
    }

    @Test
    public void test09026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09026");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig0.getshutdownHooks();
        boolean boolean6 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test09027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09027");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean12 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
    }

    @Test
    public void test09028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09028");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig14.setframework(atmosphereFramework15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig14.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig14.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList18;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.shutdownHook(shutdownHook20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig21.properties;
        atmosphereConfig21.setThrowExceptionOnCloned(false);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext25 = atmosphereConfig21.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test09029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09029");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.getproperties();
        atmosphereConfig40.setproperties(strMap54);
        atmosphereConfig32.setproperties(strMap54);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig58.startUpHook;
        atmosphereConfig32.startUpHook = startupHookList60;
        boolean boolean62 = atmosphereConfig32.supportSession;
        boolean boolean63 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig0.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig32.startupHook(startupHook65);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig32.shutdownHook(shutdownHook67);
        int int71 = atmosphereConfig68.getInitParameter("hi!", (int) 'a');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = atmosphereConfig68.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework73 = atmosphereConfig68.framework();
        boolean boolean74 = atmosphereConfig68.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 97 + "'", int71 == 97);
        org.junit.Assert.assertNotNull(startupHookList72);
        org.junit.Assert.assertNull(atmosphereFramework73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test09030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09030");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig8.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList16;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.slf4j.Logger logger20 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig0.properties();
        boolean boolean24 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig0.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory27 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
    }

    @Test
    public void test09031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09031");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig10.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray14 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15, startupHookArray14);
        atmosphereConfig10.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15);
        atmosphereConfig6.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig6.framework();
        atmosphereConfig6.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        int int26 = atmosphereConfig22.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig22.supportSession = false;
        atmosphereConfig22.setSupportSession(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig22.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig6.populate(atmosphereConfig22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig22.setframework(atmosphereFramework33);
        atmosphereConfig22.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        atmosphereConfig22.properties = strMap37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig39.getAtmosphereHandlerConfig();
        boolean boolean41 = atmosphereConfig39.throwExceptionOnCloned;
        atmosphereConfig39.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig39.setframework(atmosphereFramework44);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig39.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        atmosphereConfig47.framework = atmosphereFramework49;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig51.throwExceptionOnCloned;
        atmosphereConfig51.destroy();
        atmosphereConfig51.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig51.shutdownHook(shutdownHook57);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig58.startupHook(startupHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig61.getAtmosphereHandlerConfig();
        int int65 = atmosphereConfig61.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig61.supportSession = false;
        atmosphereConfig61.setSupportSession(false);
        java.lang.String str71 = atmosphereConfig61.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig60.populate(atmosphereConfig61);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = atmosphereConfig72.getshutdownHooks();
        atmosphereConfig47.shutdownHooks = shutdownHookList73;
        atmosphereConfig39.setshutdownHooks(shutdownHookList73);
        atmosphereConfig22.setshutdownHooks(shutdownHookList73);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(startupHookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(shutdownHookList73);
    }

    @Test
    public void test09032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09032");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig0.properties();
        java.lang.String str17 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.startupHook(startupHook23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig24.setframework(atmosphereFramework25);
        atmosphereConfig24.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig24.properties;
        boolean boolean30 = atmosphereConfig24.throwExceptionOnCloned;
        boolean boolean33 = atmosphereConfig24.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig24.shutdownHooks;
        atmosphereConfig24.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig24.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig39.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44, startupHookArray43);
        atmosphereConfig39.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig56.startupHook(startupHook57);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = null;
        atmosphereConfig58.setframework(atmosphereFramework59);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig58.getproperties();
        atmosphereConfig47.setproperties(strMap61);
        atmosphereConfig39.setproperties(strMap61);
        atmosphereConfig24.properties = strMap61;
        atmosphereConfig0.properties = strMap61;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig66.getAtmosphereHandlerConfig();
        boolean boolean68 = atmosphereConfig66.throwExceptionOnCloned;
        atmosphereConfig66.setThrowExceptionOnCloned(false);
        boolean boolean71 = atmosphereConfig66.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig66.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = atmosphereConfig73.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = atmosphereConfig73.properties;
        atmosphereConfig66.properties = strMap75;
        atmosphereConfig0.properties = strMap75;
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList74);
        org.junit.Assert.assertNotNull(strMap75);
    }

    @Test
    public void test09033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09033");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = true;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        org.slf4j.Logger logger14 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig15.getAtmosphereHandlerConfig();
        boolean boolean17 = atmosphereConfig15.throwExceptionOnCloned;
        atmosphereConfig15.destroy();
        atmosphereConfig15.initComplete();
        java.lang.String str22 = atmosphereConfig15.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        int int27 = atmosphereConfig23.getInitParameter("hi!", (int) (short) 0);
        boolean boolean28 = atmosphereConfig23.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig15.populate(atmosphereConfig23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig23.framework = atmosphereFramework30;
        atmosphereConfig23.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig23.properties;
        atmosphereConfig4.setproperties(strMap34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig36.getAtmosphereHandlerConfig();
        int int40 = atmosphereConfig36.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig36.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList43, startupHookArray42);
        atmosphereConfig36.startUpHook = startupHookList43;
        org.slf4j.Logger logger46 = atmosphereConfig36.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig36.getshutdownHooks();
        atmosphereConfig36.destroy();
        atmosphereConfig36.supportSession = true;
        atmosphereConfig36.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig57.shutdownHook(shutdownHook60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig61.startupHook(startupHook62);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = null;
        atmosphereConfig63.setframework(atmosphereFramework64);
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig63.getproperties();
        atmosphereConfig52.setproperties(strMap66);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig52.framework;
        boolean boolean69 = atmosphereConfig52.supportSession;
        atmosphereConfig52.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig36.populate(atmosphereConfig52);
        atmosphereConfig52.destroy();
        atmosphereConfig52.setThrowExceptionOnCloned(true);
        java.lang.String str77 = atmosphereConfig52.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList78 = atmosphereConfig52.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework79 = null;
        atmosphereConfig52.setframework(atmosphereFramework79);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList81 = atmosphereConfig52.getAtmosphereHandlerConfig();
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList81;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(startupHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(logger46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(startupHookList78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList81);
    }

    @Test
    public void test09034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09034");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(true);
        org.slf4j.Logger logger14 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig19.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig19.startupHook(startupHook23);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        boolean boolean28 = atmosphereConfig24.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        boolean boolean31 = atmosphereConfig29.throwExceptionOnCloned;
        atmosphereConfig29.setThrowExceptionOnCloned(false);
        boolean boolean34 = atmosphereConfig29.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig29.framework = atmosphereFramework35;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig29.properties;
        atmosphereConfig24.properties = strMap37;
        atmosphereConfig0.setproperties(strMap37);
        org.slf4j.Logger logger40 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(logger40);
    }

    @Test
    public void test09035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09035");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig16.throwExceptionOnCloned;
        atmosphereConfig16.destroy();
        atmosphereConfig16.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig16.framework = atmosphereFramework21;
        java.lang.String str25 = atmosphereConfig16.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig16.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig32.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig32.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.throwExceptionOnCloned = false;
        atmosphereConfig39.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig39.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig39.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig47.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig47.getstartUpHook();
        atmosphereConfig39.setstartUpHook(startupHookList49);
        atmosphereConfig32.setstartUpHook(startupHookList49);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig32.atmosphereHandlerConfig;
        int int55 = atmosphereConfig32.getInitParameter("hi!", 52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
    }

    @Test
    public void test09036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09036");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig4.supportSession;
        boolean boolean13 = atmosphereConfig4.throwExceptionOnCloned;
        boolean boolean14 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig4.framework();
        atmosphereConfig4.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.shutdownHook(shutdownHook24);
        atmosphereConfig25.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig25.startupHook(startupHook27);
        java.lang.String str30 = atmosphereConfig28.getInitParameter("");
        atmosphereConfig28.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig28.getshutdownHooks();
        atmosphereConfig28.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig4.populate(atmosphereConfig28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig36.getAtmosphereHandlerConfig();
        boolean boolean38 = atmosphereConfig36.throwExceptionOnCloned;
        atmosphereConfig36.destroy();
        boolean boolean40 = atmosphereConfig36.sessionTimeoutRemovalAllowed;
        atmosphereConfig36.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig36.setSessionTimeoutRemovalAllowed(false);
        int int47 = atmosphereConfig36.getInitParameter("hi!", 100);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig48.getAtmosphereHandlerConfig();
        boolean boolean50 = atmosphereConfig48.throwExceptionOnCloned;
        atmosphereConfig48.destroy();
        atmosphereConfig48.initComplete();
        java.lang.String str55 = atmosphereConfig48.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig60.startupHook(startupHook61);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = null;
        atmosphereConfig62.setframework(atmosphereFramework63);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig62.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList66 = atmosphereConfig62.shutdownHooks;
        atmosphereConfig48.shutdownHooks = shutdownHookList66;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig48.shutdownHook(shutdownHook68);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig36.populate(atmosphereConfig48);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig36.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = atmosphereConfig36.startUpHook;
        atmosphereConfig4.setstartUpHook(startupHookList72);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(shutdownHookList66);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
        org.junit.Assert.assertNotNull(startupHookList72);
    }

    @Test
    public void test09037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09037");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig0.framework = atmosphereFramework6;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.setframework(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.startupHook(startupHook16);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
    }

    @Test
    public void test09038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09038");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.destroy();
        atmosphereConfig0.destroy();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
    }

    @Test
    public void test09039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09039");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        int int16 = atmosphereConfig13.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig21.atmosphereHandlerConfig;
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        int int28 = atmosphereConfig13.getInitParameter("", (int) (byte) 10);
        boolean boolean29 = atmosphereConfig13.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig36.setframework(atmosphereFramework37);
        atmosphereConfig36.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig36.properties;
        boolean boolean42 = atmosphereConfig36.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig43.getAtmosphereHandlerConfig();
        boolean boolean45 = atmosphereConfig43.throwExceptionOnCloned;
        atmosphereConfig43.destroy();
        atmosphereConfig43.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig43.shutdownHook(shutdownHook49);
        atmosphereConfig43.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig53.getAtmosphereHandlerConfig();
        boolean boolean55 = atmosphereConfig53.throwExceptionOnCloned;
        atmosphereConfig53.setThrowExceptionOnCloned(false);
        boolean boolean58 = atmosphereConfig53.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig53.getproperties();
        atmosphereConfig43.setproperties(strMap59);
        atmosphereConfig36.properties = strMap59;
        atmosphereConfig13.properties = strMap59;
        boolean boolean63 = atmosphereConfig13.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig13.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList64);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig0.startupHook(startupHook66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shutdownHookList64);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
    }

    @Test
    public void test09040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09040");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework;
        org.slf4j.Logger logger12 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(logger12);
    }

    @Test
    public void test09041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09041");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.throwExceptionOnCloned;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig4.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.startupHook(startupHook9);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
    }

    @Test
    public void test09042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09042");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.destroy();
        atmosphereConfig11.initComplete();
        java.lang.String str18 = atmosphereConfig11.getInitParameter("hi!", "");
        boolean boolean19 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        boolean boolean22 = atmosphereConfig11.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig23.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig23.getproperties();
        atmosphereConfig11.setproperties(strMap26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig11.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig11.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList29;
        boolean boolean31 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
    }

    @Test
    public void test09043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09043");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig8.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList16;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.shutdownHook(shutdownHook20);
        atmosphereConfig21.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
    }

    @Test
    public void test09044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09044");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig8.supportSession = false;
        boolean boolean15 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        atmosphereConfig8.destroy();
        java.lang.String str18 = atmosphereConfig8.getInitParameter("");
        atmosphereConfig8.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig8.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        boolean boolean26 = atmosphereConfig24.throwExceptionOnCloned;
        atmosphereConfig24.destroy();
        atmosphereConfig24.initComplete();
        java.lang.String str31 = atmosphereConfig24.getInitParameter("hi!", "");
        boolean boolean32 = atmosphereConfig24.isSupportSession();
        atmosphereConfig24.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig24.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig24.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        atmosphereConfig38.setframework(atmosphereFramework39);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig38.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList41);
        boolean boolean45 = atmosphereConfig0.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean49 = atmosphereConfig47.throwExceptionOnCloned;
        atmosphereConfig47.destroy();
        atmosphereConfig47.initComplete();
        atmosphereConfig47.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = atmosphereConfig47.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig47.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig0.populate(atmosphereConfig47);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig56.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(atmosphereFramework54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
    }

    @Test
    public void test09045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09045");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
    }

    @Test
    public void test09046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09046");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.getproperties();
        atmosphereConfig40.setproperties(strMap54);
        atmosphereConfig32.setproperties(strMap54);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig58.startUpHook;
        atmosphereConfig32.startUpHook = startupHookList60;
        boolean boolean62 = atmosphereConfig32.supportSession;
        boolean boolean63 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig0.populate(atmosphereConfig32);
        java.lang.String str67 = atmosphereConfig0.getInitParameter("", "");
        boolean boolean68 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig0.startupHook(startupHook69);
        boolean boolean73 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework74 = null;
        atmosphereConfig0.framework = atmosphereFramework74;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test09047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09047");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig0.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        boolean boolean8 = atmosphereConfig6.throwExceptionOnCloned;
        atmosphereConfig6.destroy();
        atmosphereConfig6.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig6.shutdownHook(shutdownHook12);
        atmosphereConfig6.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig16.throwExceptionOnCloned;
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        boolean boolean21 = atmosphereConfig16.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig16.getproperties();
        atmosphereConfig6.setproperties(strMap22);
        boolean boolean24 = atmosphereConfig6.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig5.populate(atmosphereConfig6);
        int int28 = atmosphereConfig25.getInitParameter("hi!", 0);
        boolean boolean29 = atmosphereConfig25.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test09048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09048");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        org.slf4j.Logger logger19 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig0.setframework(atmosphereFramework20);
        java.lang.String str23 = atmosphereConfig0.getInitParameter("");
        java.lang.String str26 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.getAtmosphereHandlerConfig();
        int int31 = atmosphereConfig27.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig27.supportSession = false;
        atmosphereConfig27.setSupportSession(false);
        java.lang.String str37 = atmosphereConfig27.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig27.getproperties();
        atmosphereConfig0.setproperties(strMap38);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig0.framework = atmosphereFramework41;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(shutdownHookList40);
    }

    @Test
    public void test09049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09049");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList2 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig3.getAtmosphereHandlerConfig();
        boolean boolean5 = atmosphereConfig3.throwExceptionOnCloned;
        atmosphereConfig3.destroy();
        atmosphereConfig3.initComplete();
        java.lang.String str10 = atmosphereConfig3.getInitParameter("hi!", "");
        boolean boolean11 = atmosphereConfig3.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        boolean boolean14 = atmosphereConfig12.throwExceptionOnCloned;
        atmosphereConfig12.destroy();
        atmosphereConfig12.initComplete();
        atmosphereConfig12.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig12.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig12.atmosphereHandlerConfig;
        atmosphereConfig3.atmosphereHandlerConfig = atmosphereHandlerConfigList20;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        boolean boolean25 = atmosphereConfig23.throwExceptionOnCloned;
        atmosphereConfig23.destroy();
        atmosphereConfig23.initComplete();
        java.lang.String str30 = atmosphereConfig23.getInitParameter("hi!", "");
        boolean boolean31 = atmosphereConfig23.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig32.getshutdownHooks();
        atmosphereConfig32.setThrowExceptionOnCloned(false);
        java.lang.String str38 = atmosphereConfig32.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig32.properties;
        atmosphereConfig23.setproperties(strMap39);
        atmosphereConfig0.setproperties(strMap39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        int int46 = atmosphereConfig42.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig42.supportSession = false;
        boolean boolean49 = atmosphereConfig42.isSessionTimeoutRemovalAllowed();
        atmosphereConfig42.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig51.throwExceptionOnCloned;
        atmosphereConfig51.destroy();
        atmosphereConfig51.initComplete();
        java.lang.String str58 = atmosphereConfig51.getInitParameter("hi!", "");
        boolean boolean59 = atmosphereConfig51.isSessionTimeoutRemovalAllowed();
        boolean boolean62 = atmosphereConfig51.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig63.getAtmosphereHandlerConfig();
        atmosphereConfig63.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig67.getAtmosphereHandlerConfig();
        int int71 = atmosphereConfig67.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework72 = atmosphereConfig67.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray73 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList74 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList74, startupHookArray73);
        atmosphereConfig67.startUpHook = startupHookList74;
        atmosphereConfig63.startUpHook = startupHookList74;
        atmosphereConfig51.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList74);
        atmosphereConfig42.startUpHook = startupHookList74;
        atmosphereConfig0.startUpHook = startupHookList74;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(atmosphereFramework72);
        org.junit.Assert.assertNotNull(startupHookArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(shutdownHookList81);
    }

    @Test
    public void test09050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09050");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = atmosphereConfig0.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        int int11 = atmosphereConfig7.getInitParameter("hi!", (int) (short) 0);
        boolean boolean12 = atmosphereConfig7.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig7.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig15.getAtmosphereHandlerConfig();
        int int19 = atmosphereConfig15.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig15.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig15.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig15.atmosphereHandlerConfig;
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        atmosphereConfig7.setSessionTimeoutRemovalAllowed(false);
        boolean boolean27 = atmosphereConfig7.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig7.shutdownHooks;
        atmosphereConfig4.shutdownHooks = shutdownHookList28;
        atmosphereConfig4.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        int int36 = atmosphereConfig32.getInitParameter("hi!", (int) (short) 0);
        boolean boolean37 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig32.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig40.getAtmosphereHandlerConfig();
        int int44 = atmosphereConfig40.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig40.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig40.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig40.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig40.atmosphereHandlerConfig;
        atmosphereConfig32.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig4.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig50.framework = atmosphereFramework51;
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
    }

    @Test
    public void test09051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09051");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        boolean boolean12 = atmosphereConfig0.getInitParameter("hi!", true);
        boolean boolean13 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        boolean boolean16 = atmosphereConfig14.throwExceptionOnCloned;
        atmosphereConfig14.destroy();
        atmosphereConfig14.initComplete();
        java.lang.String str21 = atmosphereConfig14.getInitParameter("hi!", "");
        boolean boolean22 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        boolean boolean23 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig14.properties();
        atmosphereConfig0.properties = strMap24;
        boolean boolean26 = atmosphereConfig0.supportSession;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test09052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09052");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.shutdownHook(shutdownHook16);
        atmosphereConfig15.setThrowExceptionOnCloned(false);
        atmosphereConfig15.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        org.slf4j.Logger logger28 = atmosphereConfig27.getlogger();
        boolean boolean29 = atmosphereConfig27.isSupportSession();
        boolean boolean30 = atmosphereConfig27.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig31.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36, startupHookArray35);
        atmosphereConfig31.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        atmosphereConfig27.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        atmosphereConfig15.startUpHook = startupHookList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig41.getshutdownHooks();
        atmosphereConfig15.setshutdownHooks(shutdownHookList43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.getshutdownHooks();
        atmosphereConfig45.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig50.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig50.getshutdownHooks();
        atmosphereConfig45.setshutdownHooks(shutdownHookList52);
        atmosphereConfig15.shutdownHooks = shutdownHookList52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        int int59 = atmosphereConfig55.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig55.supportSession = false;
        boolean boolean62 = atmosphereConfig55.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig63.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig63.getshutdownHooks();
        atmosphereConfig55.setshutdownHooks(shutdownHookList65);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig67.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig67.properties();
        atmosphereConfig55.properties = strMap70;
        atmosphereConfig15.setproperties(strMap70);
        atmosphereConfig8.properties = strMap70;
        boolean boolean76 = atmosphereConfig8.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList77 = atmosphereConfig8.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig4.populate(atmosphereConfig8);
        org.slf4j.Logger logger79 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework80 = null;
        atmosphereConfig8.framework = atmosphereFramework80;
        int int84 = atmosphereConfig8.getInitParameter("", (int) (short) -1);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(startupHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(startupHookList77);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(logger79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test09053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09053");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig9.throwExceptionOnCloned;
        atmosphereConfig9.destroy();
        atmosphereConfig9.initComplete();
        atmosphereConfig9.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig9.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        java.lang.String str20 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.startupHook(startupHook26);
        boolean boolean28 = atmosphereConfig25.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig25.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        boolean boolean32 = atmosphereConfig30.throwExceptionOnCloned;
        atmosphereConfig30.setThrowExceptionOnCloned(false);
        atmosphereConfig30.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig30.shutdownHooks;
        atmosphereConfig25.setshutdownHooks(shutdownHookList37);
        atmosphereConfig0.shutdownHooks = shutdownHookList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig40.getAtmosphereHandlerConfig();
        atmosphereConfig40.throwExceptionOnCloned = true;
        boolean boolean44 = atmosphereConfig40.isSupportSession();
        boolean boolean45 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        boolean boolean46 = atmosphereConfig40.sessionTimeoutRemovalAllowed;
        boolean boolean47 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig40.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig40.atmosphereHandlerConfig;
        org.slf4j.Logger logger50 = atmosphereConfig40.getlogger();
        atmosphereConfig40.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig53.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig53.getstartUpHook();
        atmosphereConfig40.setstartUpHook(startupHookList55);
        atmosphereConfig0.setstartUpHook(startupHookList55);
        java.lang.String str59 = atmosphereConfig0.getInitParameter("");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertNotNull(logger50);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test09054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09054");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig6.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.getshutdownHooks();
        atmosphereConfig6.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig6.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig6.properties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test09055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09055");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig0.shutdownHooks;
        boolean boolean17 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        int int22 = atmosphereConfig18.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig18.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig18.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig18.framework();
        boolean boolean27 = atmosphereConfig18.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig18.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig18.shutdownHook(shutdownHook29);
        java.lang.String str33 = atmosphereConfig30.getInitParameter("", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig30.getproperties();
        atmosphereConfig0.setproperties(strMap34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList36);
    }

    @Test
    public void test09056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09056");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties;
        atmosphereConfig0.setproperties(strMap10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig12.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList14);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig0.setframework(atmosphereFramework22);
        boolean boolean24 = atmosphereConfig0.supportSession;
        boolean boolean25 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test09057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09057");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.startupHook(startupHook16);
        atmosphereConfig17.destroy();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory19 = atmosphereConfig17.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
    }

    @Test
    public void test09058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09058");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig12.atmosphereHandlerConfig;
        boolean boolean16 = atmosphereConfig12.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList17);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.getAtmosphereHandlerConfig();
        boolean boolean29 = atmosphereConfig27.throwExceptionOnCloned;
        atmosphereConfig27.destroy();
        atmosphereConfig27.initComplete();
        java.lang.String str34 = atmosphereConfig27.getInitParameter("hi!", "");
        boolean boolean35 = atmosphereConfig27.isSessionTimeoutRemovalAllowed();
        atmosphereConfig27.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig27.getAtmosphereHandlerConfig();
        boolean boolean39 = atmosphereConfig27.isThrowExceptionOnCloned();
        boolean boolean40 = atmosphereConfig27.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig27.setframework(atmosphereFramework41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig27.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig27.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList44;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
    }

    @Test
    public void test09059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09059");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties;
        atmosphereConfig0.properties = strMap9;
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        boolean boolean17 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(startupHookList18);
    }

    @Test
    public void test09060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09060");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig17.initComplete();
        atmosphereConfig17.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.populate(atmosphereConfig17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig27.getshutdownHooks();
        atmosphereConfig27.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = null;
        atmosphereConfig27.setshutdownHooks(shutdownHookList31);
        atmosphereConfig27.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig39.startupHook(startupHook40);
        boolean boolean42 = atmosphereConfig41.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig41.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig41.getstartUpHook();
        atmosphereConfig27.setstartUpHook(startupHookList44);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig27.getframework();
        boolean boolean47 = atmosphereConfig27.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(startupHookList44);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test09061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09061");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig0.framework = atmosphereFramework6;
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
    }

    @Test
    public void test09062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09062");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean3 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.framework = atmosphereFramework4;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig7.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig7.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(startupHookList9);
    }

    @Test
    public void test09063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09063");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig18.setframework(atmosphereFramework19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig18.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig4.shutdownHooks = shutdownHookList22;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig4.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig4.atmosphereHandlerConfig;
        boolean boolean26 = atmosphereConfig4.supportSession;
        java.lang.Class<?> wildcardClass27 = atmosphereConfig4.getClass();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test09064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09064");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig0.framework = atmosphereFramework6;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig12.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22, startupHookArray21);
        atmosphereConfig17.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22);
        atmosphereConfig17.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig17.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig32.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig32.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig32.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList37);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext39 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertNotNull(startupHookList37);
    }

    @Test
    public void test09065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09065");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig4.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        int int15 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig11.supportSession = false;
        boolean boolean18 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig19.getshutdownHooks();
        atmosphereConfig11.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig11.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.startupHook(startupHook30);
        org.slf4j.Logger logger32 = atmosphereConfig29.getlogger();
        atmosphereConfig29.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig29.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.startupHook(startupHook42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig43.setframework(atmosphereFramework44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig43.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig43.getshutdownHooks();
        atmosphereConfig29.shutdownHooks = shutdownHookList47;
        atmosphereConfig24.setshutdownHooks(shutdownHookList47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig24.startupHook(startupHook50);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig51.properties();
        atmosphereConfig4.setproperties(strMap52);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig4.shutdownHook(shutdownHook54);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory56 = atmosphereConfig4.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
    }

    @Test
    public void test09066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09066");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean7 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean8 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig9.throwExceptionOnCloned;
        atmosphereConfig9.destroy();
        atmosphereConfig9.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig9.shutdownHook(shutdownHook15);
        atmosphereConfig9.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig9.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig9.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig20.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig27.shutdownHook(shutdownHook28);
        atmosphereConfig27.setThrowExceptionOnCloned(false);
        atmosphereConfig27.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig37.shutdownHook(shutdownHook38);
        org.slf4j.Logger logger40 = atmosphereConfig39.getlogger();
        boolean boolean41 = atmosphereConfig39.isSupportSession();
        boolean boolean42 = atmosphereConfig39.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig43.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray47 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList48, startupHookArray47);
        atmosphereConfig43.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList48);
        atmosphereConfig39.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList48);
        atmosphereConfig27.startUpHook = startupHookList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig53.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig53.getshutdownHooks();
        atmosphereConfig27.setshutdownHooks(shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig57.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = atmosphereConfig57.getshutdownHooks();
        atmosphereConfig57.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig62.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig62.getshutdownHooks();
        atmosphereConfig57.setshutdownHooks(shutdownHookList64);
        atmosphereConfig27.shutdownHooks = shutdownHookList64;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig67.getAtmosphereHandlerConfig();
        int int71 = atmosphereConfig67.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig67.supportSession = false;
        boolean boolean74 = atmosphereConfig67.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig75.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig75.getshutdownHooks();
        atmosphereConfig67.setshutdownHooks(shutdownHookList77);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig79.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig79.properties();
        atmosphereConfig67.properties = strMap82;
        atmosphereConfig27.setproperties(strMap82);
        atmosphereConfig20.properties = strMap82;
        boolean boolean88 = atmosphereConfig20.getInitParameter("", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = atmosphereConfig20.properties;
        atmosphereConfig9.setproperties(strMap89);
        atmosphereConfig0.properties = strMap89;
        java.lang.Class<?> wildcardClass92 = strMap89.getClass();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(logger40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(startupHookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
        org.junit.Assert.assertNotNull(shutdownHookList59);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertNotNull(shutdownHookList64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertNotNull(shutdownHookList77);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test09067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09067");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.destroy();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig0.framework = atmosphereFramework16;
        boolean boolean18 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        boolean boolean23 = atmosphereConfig21.throwExceptionOnCloned;
        atmosphereConfig21.destroy();
        atmosphereConfig21.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig21.framework = atmosphereFramework26;
        int int30 = atmosphereConfig21.getInitParameter("hi!", (int) '#');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig21.framework;
        boolean boolean32 = atmosphereConfig21.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.getshutdownHooks();
        boolean boolean38 = atmosphereConfig33.getInitParameter("", true);
        boolean boolean39 = atmosphereConfig33.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig33.getstartUpHook();
        atmosphereConfig21.startUpHook = startupHookList40;
        org.slf4j.Logger logger42 = atmosphereConfig21.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig21.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList43;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 35 + "'", int30 == 35);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(logger42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
    }

    @Test
    public void test09068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09068");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        atmosphereConfig0.setproperties(strMap18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        int int25 = atmosphereConfig21.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig21.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig21.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig29.properties;
        atmosphereConfig21.setproperties(strMap31);
        boolean boolean35 = atmosphereConfig21.getInitParameter("hi!", true);
        atmosphereConfig21.setSupportSession(true);
        boolean boolean40 = atmosphereConfig21.getInitParameter("hi!", true);
        boolean boolean41 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig46.shutdownHook(shutdownHook47);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig46.getstartUpHook();
        atmosphereConfig46.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig46.startupHook(startupHook51);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig52.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList53;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig21.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig60.shutdownHook(shutdownHook61);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig60.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig60.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList64;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig0.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = null;
        atmosphereConfig0.setframework(atmosphereFramework67);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig0.properties();
        atmosphereConfig0.supportSession = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(strMap69);
    }

    @Test
    public void test09069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09069");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        boolean boolean14 = atmosphereConfig0.getInitParameter("", false);
        java.lang.Class<?> wildcardClass15 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test09070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09070");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean3 = atmosphereConfig0.isSupportSession();
        boolean boolean4 = atmosphereConfig0.supportSession;
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties;
        boolean boolean10 = atmosphereConfig0.getInitParameter("hi!", false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09071");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig13.throwExceptionOnCloned;
        atmosphereConfig13.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig13.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        atmosphereConfig19.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig13.populate(atmosphereConfig19);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig13.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig13.properties;
        atmosphereConfig0.properties = strMap25;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test09072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09072");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig4.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.startupHook(startupHook15);
        org.slf4j.Logger logger17 = atmosphereConfig14.getlogger();
        atmosphereConfig14.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig14.sessionTimeoutRemovalAllowed = true;
        boolean boolean22 = atmosphereConfig14.supportSession;
        boolean boolean23 = atmosphereConfig14.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig14.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig14.initComplete();
        atmosphereConfig14.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig14.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig4.populate(atmosphereConfig14);
        boolean boolean33 = atmosphereConfig32.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test09073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09073");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig14.setframework(atmosphereFramework15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig14.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig14.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList18;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.startupHook(startupHook20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig21.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        boolean boolean26 = atmosphereConfig24.throwExceptionOnCloned;
        atmosphereConfig24.destroy();
        atmosphereConfig24.initComplete();
        java.lang.String str31 = atmosphereConfig24.getInitParameter("hi!", "");
        boolean boolean32 = atmosphereConfig24.isSessionTimeoutRemovalAllowed();
        java.lang.String str34 = atmosphereConfig24.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36, shutdownHookArray35);
        atmosphereConfig24.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList36);
        atmosphereConfig21.shutdownHooks = shutdownHookList36;
        atmosphereConfig21.throwExceptionOnCloned = true;
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(false);
        boolean boolean44 = atmosphereConfig21.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(shutdownHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test09074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09074");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean2 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig0.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        int int10 = atmosphereConfig6.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig6.supportSession = false;
        atmosphereConfig6.setSupportSession(false);
        boolean boolean15 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig6.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        atmosphereConfig6.properties = strMap17;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig6.framework = atmosphereFramework19;
        boolean boolean21 = atmosphereConfig6.supportSession;
        atmosphereConfig6.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig6.atmosphereHandlerConfig;
        atmosphereConfig5.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
    }

    @Test
    public void test09075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09075");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        boolean boolean10 = atmosphereConfig8.throwExceptionOnCloned;
        atmosphereConfig8.destroy();
        atmosphereConfig8.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig8.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig8.getproperties();
        atmosphereConfig4.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig4.startupHook(startupHook18);
        java.lang.String str22 = atmosphereConfig19.getInitParameter("", "");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider23 = atmosphereConfig19.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test09076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09076");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig4.supportSession;
        boolean boolean13 = atmosphereConfig4.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig4.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig15.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig17.throwExceptionOnCloned = true;
        boolean boolean21 = atmosphereConfig17.isSupportSession();
        boolean boolean22 = atmosphereConfig17.isSessionTimeoutRemovalAllowed();
        boolean boolean23 = atmosphereConfig17.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig17.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig17.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig17.framework();
        atmosphereConfig17.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig15.populate(atmosphereConfig17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        boolean boolean31 = atmosphereConfig29.throwExceptionOnCloned;
        atmosphereConfig29.setThrowExceptionOnCloned(false);
        boolean boolean36 = atmosphereConfig29.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig29.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig29.setframework(atmosphereFramework38);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig29.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig29.getstartUpHook();
        atmosphereConfig28.setstartUpHook(startupHookList41);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(startupHookList41);
    }

    @Test
    public void test09077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09077");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig0.framework = atmosphereFramework6;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.setframework(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.startupHook(startupHook16);
        int int20 = atmosphereConfig0.getInitParameter("", 35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig27.setframework(atmosphereFramework28);
        atmosphereConfig27.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig27.getproperties();
        atmosphereConfig0.properties = strMap32;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 35 + "'", int20 == 35);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(strMap32);
    }

    @Test
    public void test09078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09078");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        int int16 = atmosphereConfig12.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig12.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.startupHook(startupHook18);
        boolean boolean20 = atmosphereConfig12.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.populate(atmosphereConfig12);
        int int24 = atmosphereConfig21.getInitParameter("hi!", (int) '4');
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig21.getproperties();
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test09079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09079");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        boolean boolean12 = atmosphereConfig6.throwExceptionOnCloned;
        boolean boolean15 = atmosphereConfig6.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig6.shutdownHooks;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        java.lang.String str21 = atmosphereConfig6.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig6.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig6.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig6.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig6.setframework(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
    }

    @Test
    public void test09080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09080");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.getproperties();
        atmosphereConfig8.setproperties(strMap22);
        atmosphereConfig0.setproperties(strMap22);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        boolean boolean28 = atmosphereConfig26.throwExceptionOnCloned;
        atmosphereConfig26.destroy();
        atmosphereConfig26.initComplete();
        java.lang.String str33 = atmosphereConfig26.getInitParameter("hi!", "");
        boolean boolean34 = atmosphereConfig26.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        boolean boolean37 = atmosphereConfig35.throwExceptionOnCloned;
        atmosphereConfig35.destroy();
        atmosphereConfig35.initComplete();
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig35.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig35.atmosphereHandlerConfig;
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList43;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList43;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig0.framework();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(atmosphereFramework42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNull(atmosphereFramework46);
    }

    @Test
    public void test09081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09081");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig9.throwExceptionOnCloned;
        atmosphereConfig9.destroy();
        atmosphereConfig9.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig9.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22, startupHookArray21);
        atmosphereConfig17.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22);
        atmosphereConfig9.startUpHook = startupHookList22;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig9.shutdownHooks;
        atmosphereConfig4.shutdownHooks = shutdownHookList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        int int32 = atmosphereConfig28.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig28.supportSession = false;
        atmosphereConfig28.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig28.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig28.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig28.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig28.startUpHook;
        atmosphereConfig4.startUpHook = startupHookList40;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig4.getshutdownHooks();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig43 = atmosphereConfig4.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(shutdownHookList42);
    }

    @Test
    public void test09082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09082");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
    }

    @Test
    public void test09083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09083");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig22.getshutdownHooks();
        atmosphereConfig22.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig27.getshutdownHooks();
        atmosphereConfig22.setshutdownHooks(shutdownHookList29);
        boolean boolean31 = atmosphereConfig22.isSessionTimeoutRemovalAllowed();
        atmosphereConfig22.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig22.shutdownHooks;
        atmosphereConfig19.shutdownHooks = shutdownHookList34;
        atmosphereConfig4.setshutdownHooks(shutdownHookList34);
        java.lang.String str38 = atmosphereConfig4.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig4.getproperties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test09084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09084");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.framework = atmosphereFramework13;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean16 = atmosphereConfig15.isThrowExceptionOnCloned();
        boolean boolean17 = atmosphereConfig15.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.startupHook(startupHook18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig15.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList20;
        int int24 = atmosphereConfig0.getInitParameter("", (int) (short) -1);
        int int27 = atmosphereConfig0.getInitParameter("hi!", 32);
        atmosphereConfig0.setSupportSession(false);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory30 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
    }

    @Test
    public void test09085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09085");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig7.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig7.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig13.supportSession = false;
        atmosphereConfig13.setSupportSession(false);
        boolean boolean22 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig13.properties;
        atmosphereConfig0.properties = strMap23;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.getAtmosphereHandlerConfig();
        atmosphereConfig27.throwExceptionOnCloned = true;
        boolean boolean31 = atmosphereConfig27.isSupportSession();
        boolean boolean32 = atmosphereConfig27.isSessionTimeoutRemovalAllowed();
        boolean boolean33 = atmosphereConfig27.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig27.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig27.framework;
        org.slf4j.Logger logger36 = atmosphereConfig27.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig27.getstartUpHook();
        boolean boolean38 = atmosphereConfig27.throwExceptionOnCloned;
        atmosphereConfig27.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig27.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig45.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig45.getstartUpHook();
        atmosphereConfig45.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig45.startupHook(startupHook50);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig51.getshutdownHooks();
        atmosphereConfig27.setshutdownHooks(shutdownHookList52);
        atmosphereConfig0.shutdownHooks = shutdownHookList52;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig0.shutdownHook(shutdownHook55);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig56.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
    }

    @Test
    public void test09086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09086");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig6.startupHook(startupHook11);
        atmosphereConfig12.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
    }

    @Test
    public void test09087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09087");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig5.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList7);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework;
        org.slf4j.Logger logger13 = atmosphereConfig0.getlogger();
        boolean boolean14 = atmosphereConfig0.isSupportSession();
        java.lang.String str16 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean19 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09088");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSupportSession(false);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test09089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09089");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.setframework(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig18.setframework(atmosphereFramework19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig18.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig18.shutdownHooks;
        boolean boolean23 = atmosphereConfig18.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        atmosphereConfig24.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.startupHook(startupHook33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig34.setframework(atmosphereFramework35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig34.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig34.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig34.startUpHook;
        atmosphereConfig24.setstartUpHook(startupHookList39);
        atmosphereConfig18.startUpHook = startupHookList39;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig18.shutdownHook(shutdownHook42);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig43.getproperties();
        atmosphereConfig0.properties = strMap44;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory46 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(shutdownHookList38);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test09090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09090");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.destroy();
        atmosphereConfig11.initComplete();
        java.lang.String str18 = atmosphereConfig11.getInitParameter("hi!", "");
        boolean boolean19 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = null;
        atmosphereConfig31.setframework(atmosphereFramework32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig31.getproperties();
        atmosphereConfig20.setproperties(strMap34);
        atmosphereConfig11.setproperties(strMap34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.populate(atmosphereConfig11);
        org.slf4j.Logger logger38 = atmosphereConfig0.getlogger();
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig45.shutdownHook(shutdownHook46);
        org.slf4j.Logger logger48 = atmosphereConfig47.getlogger();
        boolean boolean49 = atmosphereConfig47.isSupportSession();
        boolean boolean50 = atmosphereConfig47.isThrowExceptionOnCloned();
        org.slf4j.Logger logger51 = atmosphereConfig47.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig47.properties();
        atmosphereConfig47.initComplete();
        boolean boolean54 = atmosphereConfig47.sessionTimeoutRemovalAllowed;
        atmosphereConfig47.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig47.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig47.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList57;
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig0.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(logger38);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(logger48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(logger51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertNotNull(strMap62);
    }

    @Test
    public void test09091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09091");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig0.shutdownHook(shutdownHook38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig39.properties();
        boolean boolean41 = atmosphereConfig39.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        boolean boolean44 = atmosphereConfig42.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig49.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList53;
        atmosphereConfig39.atmosphereHandlerConfig = atmosphereHandlerConfigList53;
        atmosphereConfig39.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
    }

    @Test
    public void test09092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09092");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean10 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09093");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.getproperties();
        atmosphereConfig8.setproperties(strMap22);
        atmosphereConfig0.setproperties(strMap22);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig26.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        boolean boolean32 = atmosphereConfig30.throwExceptionOnCloned;
        java.lang.String str35 = atmosphereConfig30.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig30.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList36;
        boolean boolean38 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig40.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig40.setThrowExceptionOnCloned(false);
        atmosphereConfig40.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig0.populate(atmosphereConfig40);
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig40.properties();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(strMap48);
    }

    @Test
    public void test09094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09094");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig4.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig4.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
    }

    @Test
    public void test09095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09095");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig0.startupHook(startupHook4);
        java.lang.String str8 = atmosphereConfig5.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        int int13 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig9.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList16, startupHookArray15);
        atmosphereConfig9.startUpHook = startupHookList16;
        org.slf4j.Logger logger19 = atmosphereConfig9.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig9.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig9.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig26.getproperties();
        atmosphereConfig9.setproperties(strMap27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig9.startUpHook;
        atmosphereConfig5.startUpHook = startupHookList29;
        boolean boolean31 = atmosphereConfig5.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig5.startUpHook;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(startupHookList32);
    }

    @Test
    public void test09096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09096");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig8.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties;
        atmosphereConfig7.setproperties(strMap14);
        boolean boolean16 = atmosphereConfig7.supportSession;
        boolean boolean19 = atmosphereConfig7.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        boolean boolean23 = atmosphereConfig20.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig20.framework = atmosphereFramework24;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.shutdownHook(shutdownHook26);
        boolean boolean28 = atmosphereConfig20.sessionTimeoutRemovalAllowed;
        int int31 = atmosphereConfig20.getInitParameter("", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig20.shutdownHook(shutdownHook32);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig20.getstartUpHook();
        atmosphereConfig7.setstartUpHook(startupHookList34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(startupHookList34);
    }

    @Test
    public void test09097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09097");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig0.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.getproperties();
        boolean boolean9 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.setframework(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        boolean boolean14 = atmosphereConfig12.throwExceptionOnCloned;
        atmosphereConfig12.destroy();
        atmosphereConfig12.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.shutdownHook(shutdownHook18);
        atmosphereConfig12.supportSession = true;
        boolean boolean22 = atmosphereConfig12.supportSession;
        atmosphereConfig12.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig0.populate(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
    }

    @Test
    public void test09098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09098");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig0.startupHook(startupHook4);
        boolean boolean6 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory9 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test09099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09099");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig5.throwExceptionOnCloned = true;
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig17.setframework(atmosphereFramework18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig17.getshutdownHooks();
        atmosphereConfig5.setshutdownHooks(shutdownHookList21);
        atmosphereConfig0.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.throwExceptionOnCloned = false;
        atmosphereConfig24.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig24.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig24.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig24.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig0.properties();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext35 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test09100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09100");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.getframework();
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig13.throwExceptionOnCloned;
        atmosphereConfig13.destroy();
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig13.shutdownHook(shutdownHook19);
        atmosphereConfig13.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig13.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig30.startupHook(startupHook31);
        org.slf4j.Logger logger33 = atmosphereConfig30.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig30.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig30.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList35);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(logger33);
        org.junit.Assert.assertNull(atmosphereFramework34);
        org.junit.Assert.assertNotNull(startupHookList35);
    }

    @Test
    public void test09101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09101");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig6.getshutdownHooks();
        boolean boolean13 = atmosphereConfig6.isSupportSession();
        boolean boolean14 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory15 = atmosphereConfig6.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09102");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig6.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig6.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig6.properties();
        atmosphereConfig6.throwExceptionOnCloned = true;
        org.slf4j.Logger logger17 = atmosphereConfig6.getlogger();
        boolean boolean18 = atmosphereConfig6.supportSession;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test09103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09103");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.getframework();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test09104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09104");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig13.shutdownHook(shutdownHook14);
        org.slf4j.Logger logger16 = atmosphereConfig15.getlogger();
        boolean boolean17 = atmosphereConfig15.isSupportSession();
        boolean boolean18 = atmosphereConfig15.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24, startupHookArray23);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24);
        atmosphereConfig15.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24);
        atmosphereConfig0.startUpHook = startupHookList24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        boolean boolean31 = atmosphereConfig29.throwExceptionOnCloned;
        atmosphereConfig29.setThrowExceptionOnCloned(false);
        atmosphereConfig29.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig29.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        int int41 = atmosphereConfig37.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig37.supportSession = false;
        boolean boolean44 = atmosphereConfig37.isSessionTimeoutRemovalAllowed();
        atmosphereConfig37.destroy();
        java.lang.String str47 = atmosphereConfig37.getInitParameter("");
        atmosphereConfig37.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig37.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig37.getstartUpHook();
        atmosphereConfig29.startUpHook = startupHookList51;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig53.getAtmosphereHandlerConfig();
        boolean boolean55 = atmosphereConfig53.throwExceptionOnCloned;
        atmosphereConfig53.destroy();
        atmosphereConfig53.initComplete();
        java.lang.String str60 = atmosphereConfig53.getInitParameter("hi!", "");
        boolean boolean61 = atmosphereConfig53.isSupportSession();
        atmosphereConfig53.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig53.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig53.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList65;
        atmosphereConfig29.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig0.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig70.getAtmosphereHandlerConfig();
        boolean boolean72 = atmosphereConfig70.throwExceptionOnCloned;
        atmosphereConfig70.destroy();
        atmosphereConfig70.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig70.shutdownHook(shutdownHook76);
        atmosphereConfig70.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList80 = atmosphereConfig79.getAtmosphereHandlerConfig();
        int int83 = atmosphereConfig79.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework84 = atmosphereConfig79.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = atmosphereConfig79.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = atmosphereConfig79.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig79.getAtmosphereHandlerConfig();
        atmosphereConfig70.atmosphereHandlerConfig = atmosphereHandlerConfigList87;
        atmosphereConfig70.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig90 = atmosphereConfig0.populate(atmosphereConfig70);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework91 = null;
        atmosphereConfig90.framework = atmosphereFramework91;
        java.util.Map<java.lang.String, java.lang.Object> strMap93 = atmosphereConfig90.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList94 = atmosphereConfig90.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(startupHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(atmosphereFramework84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertNotNull(atmosphereConfig90);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList94);
    }

    @Test
    public void test09105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09105");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig4.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig4.getAtmosphereHandlerConfig();
        boolean boolean10 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig4.framework;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(atmosphereFramework11);
    }

    @Test
    public void test09106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09106");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.supportSession = true;
        boolean boolean8 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(startupHookList9);
    }

    @Test
    public void test09107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09107");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        int int18 = atmosphereConfig0.getInitParameter("", 0);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(shutdownHookList19);
    }

    @Test
    public void test09108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09108");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        boolean boolean11 = atmosphereConfig10.supportSession;
        atmosphereConfig10.setSupportSession(true);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("hi!", "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test09109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09109");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.properties();
        boolean boolean10 = atmosphereConfig6.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09110");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.getshutdownHooks();
        boolean boolean15 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig0.framework = atmosphereFramework16;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration20 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09111");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig15.destroy();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory17 = atmosphereConfig15.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
    }

    @Test
    public void test09112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09112");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        boolean boolean2 = atmosphereConfig1.isThrowExceptionOnCloned();
        java.lang.String str4 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig5.startUpHook;
        atmosphereConfig1.startUpHook = startupHookList7;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig13.shutdownHook(shutdownHook14);
        atmosphereConfig15.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig15.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig28.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig30.setframework(atmosphereFramework31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig30.getproperties();
        atmosphereConfig19.setproperties(strMap33);
        atmosphereConfig18.properties = strMap33;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig18.getproperties();
        boolean boolean37 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        atmosphereConfig18.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig43.startupHook(startupHook44);
        org.slf4j.Logger logger46 = atmosphereConfig43.getlogger();
        atmosphereConfig43.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig43.sessionTimeoutRemovalAllowed = true;
        boolean boolean51 = atmosphereConfig43.supportSession;
        boolean boolean52 = atmosphereConfig43.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig43.shutdownHook(shutdownHook53);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig54.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig54.getshutdownHooks();
        atmosphereConfig18.shutdownHooks = shutdownHookList56;
        atmosphereConfig1.setshutdownHooks(shutdownHookList56);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(logger46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertNotNull(shutdownHookList56);
    }

    @Test
    public void test09113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09113");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        boolean boolean14 = atmosphereConfig12.throwExceptionOnCloned;
        atmosphereConfig12.destroy();
        atmosphereConfig12.initComplete();
        java.lang.String str19 = atmosphereConfig12.getInitParameter("hi!", "");
        boolean boolean20 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        java.lang.String str22 = atmosphereConfig12.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig12.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24);
        boolean boolean27 = atmosphereConfig12.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig12.getAtmosphereHandlerConfig();
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        atmosphereConfig6.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig6.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        int int37 = atmosphereConfig33.getInitParameter("hi!", (int) (short) 0);
        boolean boolean38 = atmosphereConfig33.isSupportSession();
        atmosphereConfig33.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig45.shutdownHook(shutdownHook46);
        org.slf4j.Logger logger48 = atmosphereConfig47.getlogger();
        boolean boolean49 = atmosphereConfig47.isSupportSession();
        boolean boolean50 = atmosphereConfig47.isThrowExceptionOnCloned();
        org.slf4j.Logger logger51 = atmosphereConfig47.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig47.properties();
        atmosphereConfig47.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig33.populate(atmosphereConfig47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        boolean boolean57 = atmosphereConfig55.throwExceptionOnCloned;
        atmosphereConfig55.destroy();
        atmosphereConfig55.initComplete();
        java.lang.String str62 = atmosphereConfig55.getInitParameter("hi!", "");
        boolean boolean63 = atmosphereConfig55.isSessionTimeoutRemovalAllowed();
        boolean boolean66 = atmosphereConfig55.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig67.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = atmosphereConfig67.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig67.getproperties();
        atmosphereConfig55.setproperties(strMap70);
        atmosphereConfig55.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig47.populate(atmosphereConfig55);
        boolean boolean74 = atmosphereConfig47.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList75 = atmosphereConfig47.getstartUpHook();
        atmosphereConfig6.startUpHook = startupHookList75;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework77 = null;
        atmosphereConfig6.setframework(atmosphereFramework77);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(logger48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(logger51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertNotNull(shutdownHookList69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(startupHookList75);
    }

    @Test
    public void test09114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09114");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.startupHook(startupHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig20.setframework(atmosphereFramework21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.getproperties();
        atmosphereConfig9.setproperties(strMap23);
        atmosphereConfig0.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig0.framework;
        atmosphereConfig0.setSupportSession(false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration29 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(atmosphereFramework26);
    }

    @Test
    public void test09115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09115");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.framework = atmosphereFramework13;
        atmosphereConfig0.throwExceptionOnCloned = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory17 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test09116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09116");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig14.getshutdownHooks();
        atmosphereConfig9.setshutdownHooks(shutdownHookList16);
        boolean boolean18 = atmosphereConfig9.isSessionTimeoutRemovalAllowed();
        atmosphereConfig9.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig9.shutdownHooks;
        atmosphereConfig6.shutdownHooks = shutdownHookList21;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig6.startupHook(startupHook23);
        org.slf4j.Logger logger25 = atmosphereConfig6.getlogger();
        boolean boolean26 = atmosphereConfig6.isSupportSession();
        boolean boolean27 = atmosphereConfig6.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig6.properties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(logger25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test09117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09117");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig15.getAtmosphereHandlerConfig();
        boolean boolean17 = atmosphereConfig15.throwExceptionOnCloned;
        atmosphereConfig15.destroy();
        atmosphereConfig15.initComplete();
        java.lang.String str22 = atmosphereConfig15.getInitParameter("hi!", "");
        boolean boolean23 = atmosphereConfig15.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig15.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList24;
        atmosphereConfig0.setSupportSession(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.shutdownHook(shutdownHook35);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig34.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig34.startupHook(startupHook38);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig34.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList40);
        int int44 = atmosphereConfig0.getInitParameter("", (int) (short) 10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
    }

    @Test
    public void test09118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09118");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig4.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.startupHook(startupHook15);
        org.slf4j.Logger logger17 = atmosphereConfig14.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig14.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        boolean boolean21 = atmosphereConfig19.throwExceptionOnCloned;
        atmosphereConfig19.setThrowExceptionOnCloned(false);
        atmosphereConfig19.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig19.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.getAtmosphereHandlerConfig();
        int int31 = atmosphereConfig27.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig27.supportSession = false;
        boolean boolean34 = atmosphereConfig27.isSessionTimeoutRemovalAllowed();
        atmosphereConfig27.destroy();
        java.lang.String str37 = atmosphereConfig27.getInitParameter("");
        atmosphereConfig27.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig27.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig27.getstartUpHook();
        atmosphereConfig19.startUpHook = startupHookList41;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig43.getAtmosphereHandlerConfig();
        boolean boolean45 = atmosphereConfig43.throwExceptionOnCloned;
        atmosphereConfig43.destroy();
        atmosphereConfig43.initComplete();
        java.lang.String str50 = atmosphereConfig43.getInitParameter("hi!", "");
        boolean boolean51 = atmosphereConfig43.isSupportSession();
        atmosphereConfig43.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig43.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig43.getAtmosphereHandlerConfig();
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        atmosphereConfig19.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig19.getstartUpHook();
        atmosphereConfig14.startUpHook = startupHookList59;
        atmosphereConfig4.startUpHook = startupHookList59;
        java.lang.Class<?> wildcardClass62 = atmosphereConfig4.getClass();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test09119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09119");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.framework = atmosphereFramework13;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        int int20 = atmosphereConfig16.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig16.supportSession = false;
        atmosphereConfig16.setSupportSession(false);
        boolean boolean25 = atmosphereConfig16.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig16.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig16.properties = strMap27;
        boolean boolean29 = atmosphereConfig16.isSupportSession();
        boolean boolean30 = atmosphereConfig16.isSupportSession();
        boolean boolean31 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig16.startupHook(startupHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.populate(atmosphereConfig33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig34.framework();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNull(atmosphereFramework35);
    }

    @Test
    public void test09120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09120");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig4.startupHook(startupHook8);
        atmosphereConfig4.setSupportSession(false);
        atmosphereConfig4.supportSession = false;
        atmosphereConfig4.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        atmosphereConfig16.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig16.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig16.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig16.startupHook(startupHook24);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig16.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig16.atmosphereHandlerConfig;
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        org.slf4j.Logger logger29 = atmosphereConfig4.getlogger();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(logger29);
    }

    @Test
    public void test09121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09121");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.getframework();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        boolean boolean14 = atmosphereConfig11.getInitParameter("", false);
        java.lang.String str16 = atmosphereConfig11.getInitParameter("");
        atmosphereConfig11.supportSession = false;
        java.lang.String str21 = atmosphereConfig11.getInitParameter("hi!", "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test09122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09122");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig5.throwExceptionOnCloned = true;
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig17.setframework(atmosphereFramework18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig17.getshutdownHooks();
        atmosphereConfig5.setshutdownHooks(shutdownHookList21);
        atmosphereConfig0.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig0.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        int int30 = atmosphereConfig26.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        atmosphereConfig31.throwExceptionOnCloned = true;
        boolean boolean35 = atmosphereConfig31.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig31.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.startupHook(startupHook42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig43.setframework(atmosphereFramework44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig43.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig43.getshutdownHooks();
        atmosphereConfig31.setshutdownHooks(shutdownHookList47);
        atmosphereConfig26.setshutdownHooks(shutdownHookList47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig26.startupHook(startupHook50);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig26.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList52;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(startupHookList52);
    }

    @Test
    public void test09123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09123");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean2 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig0.getstartUpHook();
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test09124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09124");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig4.startupHook(startupHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        boolean boolean13 = atmosphereConfig9.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        boolean boolean16 = atmosphereConfig14.throwExceptionOnCloned;
        atmosphereConfig14.destroy();
        atmosphereConfig14.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig14.shutdownHook(shutdownHook20);
        atmosphereConfig14.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig14.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig14.framework = atmosphereFramework24;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig14.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig14.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig9.populate(atmosphereConfig14);
        atmosphereConfig14.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig14.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(shutdownHookList33);
    }

    @Test
    public void test09125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09125");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        int int8 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig4.startUpHook = startupHookList11;
        atmosphereConfig0.startUpHook = startupHookList11;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        atmosphereConfig0.setproperties(strMap18);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(startupHookList23);
    }

    @Test
    public void test09126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09126");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig0.getstartUpHook();
        boolean boolean16 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSupportSession(true);
        boolean boolean21 = atmosphereConfig0.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
    }

    @Test
    public void test09127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09127");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = null;
        atmosphereConfig0.framework = atmosphereFramework2;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig4.throwExceptionOnCloned;
        atmosphereConfig4.destroy();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        int int18 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig14.supportSession = false;
        atmosphereConfig14.setSupportSession(false);
        java.lang.String str24 = atmosphereConfig14.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig13.populate(atmosphereConfig14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList26;
        java.lang.String str29 = atmosphereConfig0.getInitParameter("");
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig30 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test09128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09128");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig0.startupHook(startupHook4);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean8 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test09129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09129");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework;
        boolean boolean17 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig0.startupHook(startupHook18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        int int25 = atmosphereConfig21.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig21.supportSession = false;
        boolean boolean28 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.shutdownHook(shutdownHook34);
        org.slf4j.Logger logger36 = atmosphereConfig35.getlogger();
        boolean boolean37 = atmosphereConfig35.isSupportSession();
        boolean boolean38 = atmosphereConfig35.isThrowExceptionOnCloned();
        org.slf4j.Logger logger39 = atmosphereConfig35.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig35.properties();
        atmosphereConfig35.initComplete();
        boolean boolean42 = atmosphereConfig35.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig21.populate(atmosphereConfig35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        boolean boolean46 = atmosphereConfig44.throwExceptionOnCloned;
        atmosphereConfig44.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig44.getAtmosphereHandlerConfig();
        atmosphereConfig43.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap51 = atmosphereConfig19.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(logger39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
    }

    @Test
    public void test09130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09130");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        boolean boolean12 = atmosphereConfig0.getInitParameter("hi!", true);
        boolean boolean13 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        boolean boolean16 = atmosphereConfig14.throwExceptionOnCloned;
        atmosphereConfig14.destroy();
        atmosphereConfig14.initComplete();
        java.lang.String str21 = atmosphereConfig14.getInitParameter("hi!", "");
        boolean boolean22 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        boolean boolean23 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig14.properties();
        atmosphereConfig0.properties = strMap24;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        boolean boolean30 = atmosphereConfig28.throwExceptionOnCloned;
        atmosphereConfig28.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig28.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig28.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig28.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig28.startUpHook;
        boolean boolean40 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig27.populate(atmosphereConfig28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.startupHook(startupHook42);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig43.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
    }

    @Test
    public void test09131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09131");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig6.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig12.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig12.startupHook(startupHook16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        atmosphereConfig6.setstartUpHook(startupHookList18);
        atmosphereConfig6.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig21.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        int int29 = atmosphereConfig25.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig25.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList32, startupHookArray31);
        atmosphereConfig25.startUpHook = startupHookList32;
        atmosphereConfig21.startUpHook = startupHookList32;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList37;
        boolean boolean39 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig40.getAtmosphereHandlerConfig();
        int int44 = atmosphereConfig40.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig40.supportSession = false;
        atmosphereConfig40.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig40.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig40.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig40.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig6.populate(atmosphereConfig40);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig6.properties();
        atmosphereConfig6.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig6.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(startupHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
    }

    @Test
    public void test09132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09132");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig0.startupHook(startupHook4);
        boolean boolean6 = atmosphereConfig5.isThrowExceptionOnCloned();
        boolean boolean7 = atmosphereConfig5.isThrowExceptionOnCloned();
        atmosphereConfig5.throwExceptionOnCloned = false;
        java.lang.String str12 = atmosphereConfig5.getInitParameter("", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig5.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig5.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig15.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList20, startupHookArray19);
        atmosphereConfig15.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.startupHook(startupHook33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig34.setframework(atmosphereFramework35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig34.getproperties();
        atmosphereConfig23.setproperties(strMap37);
        atmosphereConfig15.setproperties(strMap37);
        atmosphereConfig15.supportSession = false;
        boolean boolean42 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig5.populate(atmosphereConfig15);
        boolean boolean44 = atmosphereConfig15.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test09133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09133");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.destroy();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig14.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19, startupHookArray18);
        atmosphereConfig14.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig14.framework = atmosphereFramework22;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig14.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig14.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig26.getshutdownHooks();
        boolean boolean31 = atmosphereConfig26.getInitParameter("", true);
        atmosphereConfig26.initComplete();
        atmosphereConfig26.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig44.startupHook(startupHook45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        atmosphereConfig46.setframework(atmosphereFramework47);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig46.getproperties();
        atmosphereConfig35.setproperties(strMap49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        atmosphereConfig35.atmosphereHandlerConfig = atmosphereHandlerConfigList52;
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList52;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig26.shutdownHooks;
        atmosphereConfig14.setshutdownHooks(shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig57.getAtmosphereHandlerConfig();
        boolean boolean59 = atmosphereConfig57.throwExceptionOnCloned;
        atmosphereConfig57.destroy();
        atmosphereConfig57.initComplete();
        atmosphereConfig57.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = atmosphereConfig57.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig65.getAtmosphereHandlerConfig();
        int int69 = atmosphereConfig65.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig65.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig65.properties();
        atmosphereConfig57.setproperties(strMap72);
        atmosphereConfig14.properties = strMap72;
        atmosphereConfig0.setproperties(strMap72);
        atmosphereConfig0.setSupportSession(true);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.Class<?> wildcardClass80 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(startupHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(startupHookList64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test09134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09134");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.slf4j.Logger logger10 = atmosphereConfig6.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig6.framework;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNull(atmosphereFramework11);
    }

    @Test
    public void test09135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09135");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        int int11 = atmosphereConfig0.getInitParameter("hi!", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        boolean boolean16 = atmosphereConfig13.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig13.startupHook(startupHook17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig18.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(shutdownHookList19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test09136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09136");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        int int8 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig4.startUpHook = startupHookList11;
        atmosphereConfig0.startUpHook = startupHookList11;
        boolean boolean15 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig0.framework = atmosphereFramework16;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig0.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test09137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09137");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNull(atmosphereFramework10);
    }

    @Test
    public void test09138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09138");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger4);
    }

    @Test
    public void test09139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09139");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.getproperties();
        boolean boolean13 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        int int18 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig14.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig14.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig14.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig22.properties;
        atmosphereConfig14.setproperties(strMap24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig26.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig26.startUpHook;
        atmosphereConfig14.setstartUpHook(startupHookList28);
        atmosphereConfig0.startUpHook = startupHookList28;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.shutdownHook(shutdownHook31);
        boolean boolean33 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
    }

    @Test
    public void test09140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09140");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig0.setframework(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration15 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
    }

    @Test
    public void test09141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09141");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(startupHookList9);
    }

    @Test
    public void test09142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09142");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test09143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09143");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.startupHook(startupHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig7.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig7.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig7.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig7.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNull(atmosphereFramework13);
    }

    @Test
    public void test09144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09144");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList3 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        int int8 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig4.framework();
        atmosphereConfig4.initComplete();
        atmosphereConfig4.destroy();
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        boolean boolean16 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        boolean boolean17 = atmosphereConfig4.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig22.getshutdownHooks();
        atmosphereConfig4.shutdownHooks = shutdownHookList25;
        atmosphereConfig0.shutdownHooks = shutdownHookList25;
        boolean boolean28 = atmosphereConfig0.supportSession;
        boolean boolean31 = atmosphereConfig0.getInitParameter("hi!", true);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test09145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09145");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig4.supportSession;
        boolean boolean13 = atmosphereConfig4.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig4.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig4.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig4.framework = atmosphereFramework17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        boolean boolean21 = atmosphereConfig19.throwExceptionOnCloned;
        atmosphereConfig19.destroy();
        atmosphereConfig19.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig19.framework = atmosphereFramework24;
        atmosphereConfig19.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig28.throwExceptionOnCloned = true;
        boolean boolean32 = atmosphereConfig28.isSupportSession();
        boolean boolean33 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        boolean boolean34 = atmosphereConfig28.sessionTimeoutRemovalAllowed;
        boolean boolean35 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig28.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig28.getstartUpHook();
        atmosphereConfig19.setstartUpHook(startupHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig39.getAtmosphereHandlerConfig();
        boolean boolean41 = atmosphereConfig39.throwExceptionOnCloned;
        atmosphereConfig39.destroy();
        atmosphereConfig39.initComplete();
        java.lang.String str46 = atmosphereConfig39.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig51.startupHook(startupHook52);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        atmosphereConfig53.setframework(atmosphereFramework54);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig53.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig53.shutdownHooks;
        atmosphereConfig39.shutdownHooks = shutdownHookList57;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig39.shutdownHook(shutdownHook59);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig60.properties;
        atmosphereConfig19.setproperties(strMap61);
        atmosphereConfig4.properties = strMap61;
        org.slf4j.Logger logger64 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(logger64);
    }

    @Test
    public void test09146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09146");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.getshutdownHooks();
        atmosphereConfig6.shutdownHooks = shutdownHookList12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig6.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig16.getshutdownHooks();
        boolean boolean21 = atmosphereConfig16.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig22.getshutdownHooks();
        atmosphereConfig22.setThrowExceptionOnCloned(false);
        java.lang.String str28 = atmosphereConfig22.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.properties;
        atmosphereConfig16.setproperties(strMap29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.properties;
        atmosphereConfig6.properties = strMap31;
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig6.framework;
        atmosphereConfig6.destroy();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory36 = atmosphereConfig6.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(atmosphereFramework34);
    }

    @Test
    public void test09147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09147");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean12 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig14.properties();
        atmosphereConfig14.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test09148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09148");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig8.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties;
        atmosphereConfig7.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig16.throwExceptionOnCloned;
        atmosphereConfig16.destroy();
        atmosphereConfig16.initComplete();
        java.lang.String str23 = atmosphereConfig16.getInitParameter("hi!", "");
        boolean boolean24 = atmosphereConfig16.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        boolean boolean27 = atmosphereConfig25.throwExceptionOnCloned;
        atmosphereConfig25.destroy();
        atmosphereConfig25.initComplete();
        atmosphereConfig25.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig25.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig25.atmosphereHandlerConfig;
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        atmosphereConfig16.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig7.populate(atmosphereConfig16);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig36.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig36.framework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(atmosphereFramework38);
    }

    @Test
    public void test09149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09149");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig0.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig0.framework = atmosphereFramework17;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test09150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09150");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig4.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig11.getAtmosphereHandlerConfig();
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig0.setframework(atmosphereFramework18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig0.getstartUpHook();
        java.lang.Class<?> wildcardClass21 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test09151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09151");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        boolean boolean8 = atmosphereConfig4.supportSession;
        org.slf4j.Logger logger9 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.startupHook(startupHook10);
        boolean boolean12 = atmosphereConfig11.throwExceptionOnCloned;
        boolean boolean13 = atmosphereConfig11.supportSession;
        boolean boolean14 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        atmosphereConfig11.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig16.framework = atmosphereFramework18;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig16.getproperties();
        org.slf4j.Logger logger21 = atmosphereConfig16.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig16.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig23.setframework(atmosphereFramework24);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig23.getshutdownHooks();
        atmosphereConfig11.shutdownHooks = shutdownHookList26;
        boolean boolean28 = atmosphereConfig11.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(logger21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test09152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09152");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig8.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.properties();
        atmosphereConfig0.properties = strMap15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig27.setframework(atmosphereFramework28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig27.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig27.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig27.startUpHook;
        atmosphereConfig17.setstartUpHook(startupHookList32);
        atmosphereConfig0.setstartUpHook(startupHookList32);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(atmosphereFramework36);
    }

    @Test
    public void test09153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09153");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.initComplete();
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig10.throwExceptionOnCloned = true;
        boolean boolean14 = atmosphereConfig10.isSupportSession();
        boolean boolean15 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        boolean boolean16 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig21.atmosphereHandlerConfig;
        boolean boolean25 = atmosphereConfig21.supportSession;
        boolean boolean26 = atmosphereConfig21.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig21.properties;
        atmosphereConfig10.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.startupHook(startupHook34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig35.setframework(atmosphereFramework36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig35.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig10.setshutdownHooks(shutdownHookList39);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig10.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig10.shutdownHook(shutdownHook42);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig0.populate(atmosphereConfig10);
        atmosphereConfig10.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
    }

    @Test
    public void test09154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09154");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        org.slf4j.Logger logger19 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig0.setframework(atmosphereFramework20);
        java.lang.String str23 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig0.startupHook(startupHook24);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
    }

    @Test
    public void test09155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09155");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig21.setframework(atmosphereFramework22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig21.getproperties();
        atmosphereConfig10.setproperties(strMap24);
        atmosphereConfig9.properties = strMap24;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig9.getproperties();
        boolean boolean28 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        atmosphereConfig9.destroy();
        atmosphereConfig9.supportSession = true;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test09156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09156");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.destroy();
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig10.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig10.startupHook(startupHook16);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig10.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        boolean boolean20 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig0.shutdownHook(shutdownHook23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test09157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09157");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.setframework(atmosphereFramework10);
        boolean boolean14 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(atmosphereFramework17);
    }

    @Test
    public void test09158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09158");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig9.throwExceptionOnCloned;
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        boolean boolean16 = atmosphereConfig14.throwExceptionOnCloned;
        atmosphereConfig14.destroy();
        atmosphereConfig14.initComplete();
        java.lang.String str21 = atmosphereConfig14.getInitParameter("hi!", "");
        boolean boolean22 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        java.lang.String str24 = atmosphereConfig14.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig14.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26);
        boolean boolean29 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        boolean boolean32 = atmosphereConfig30.throwExceptionOnCloned;
        atmosphereConfig30.destroy();
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig30.shutdownHook(shutdownHook36);
        atmosphereConfig30.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig40.getAtmosphereHandlerConfig();
        boolean boolean42 = atmosphereConfig40.throwExceptionOnCloned;
        atmosphereConfig40.setThrowExceptionOnCloned(false);
        boolean boolean45 = atmosphereConfig40.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig40.getproperties();
        atmosphereConfig30.setproperties(strMap46);
        atmosphereConfig14.properties = strMap46;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig49.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig49.properties;
        atmosphereConfig14.properties = strMap51;
        atmosphereConfig9.setproperties(strMap51);
        java.lang.String str55 = atmosphereConfig9.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig9.getproperties();
        atmosphereConfig0.setproperties(strMap56);
        java.lang.String str59 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig0.startupHook(startupHook60);
        atmosphereConfig61.destroy();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
    }

    @Test
    public void test09159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09159");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig0.startUpHook;
        boolean boolean20 = atmosphereConfig0.supportSession;
        boolean boolean23 = atmosphereConfig0.getInitParameter("hi!", true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test09160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09160");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = null;
        atmosphereConfig0.framework = atmosphereFramework2;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(shutdownHookList16);
    }

    @Test
    public void test09161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09161");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = null;
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        atmosphereConfig12.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig12.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        int int22 = atmosphereConfig18.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig18.supportSession = false;
        atmosphereConfig18.setSupportSession(false);
        boolean boolean27 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig18.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        atmosphereConfig18.properties = strMap29;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig18.framework = atmosphereFramework31;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig18.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig18.setframework(atmosphereFramework35);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig18.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig18.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig12.populate(atmosphereConfig18);
        java.lang.String str42 = atmosphereConfig39.getInitParameter("", "");
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
    }

    @Test
    public void test09162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09162");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.destroy();
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.getproperties();
        atmosphereConfig8.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig8.framework;
        boolean boolean25 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig8.startupHook(startupHook26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        boolean boolean33 = atmosphereConfig31.throwExceptionOnCloned;
        atmosphereConfig31.setThrowExceptionOnCloned(false);
        atmosphereConfig31.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig31.getframework();
        atmosphereConfig31.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig45.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig45.getstartUpHook();
        atmosphereConfig45.initComplete();
        int int52 = atmosphereConfig45.getInitParameter("hi!", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig53.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig53.getshutdownHooks();
        boolean boolean56 = atmosphereConfig53.isSupportSession();
        boolean boolean57 = atmosphereConfig53.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig45.populate(atmosphereConfig53);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig45.shutdownHook(shutdownHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig31.populate(atmosphereConfig45);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig45.properties();
        atmosphereConfig0.properties = strMap62;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(strMap62);
    }

    @Test
    public void test09163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09163");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.getproperties();
        atmosphereConfig40.setproperties(strMap54);
        atmosphereConfig32.setproperties(strMap54);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig58.startUpHook;
        atmosphereConfig32.startUpHook = startupHookList60;
        boolean boolean62 = atmosphereConfig32.supportSession;
        boolean boolean63 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig0.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig32.startupHook(startupHook65);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig32.shutdownHook(shutdownHook67);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = atmosphereConfig32.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig70.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig70.shutdownHook(shutdownHook73);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig74.shutdownHook(shutdownHook75);
        int int79 = atmosphereConfig76.getInitParameter("", (int) (byte) -1);
        atmosphereConfig76.throwExceptionOnCloned = true;
        atmosphereConfig76.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework83 = atmosphereConfig76.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = atmosphereConfig76.properties;
        atmosphereConfig32.properties = strMap84;
        atmosphereConfig32.setSupportSession(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNull(atmosphereFramework69);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(atmosphereFramework83);
        org.junit.Assert.assertNotNull(strMap84);
    }

    @Test
    public void test09164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09164");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig4.initComplete();
        int int11 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.getshutdownHooks();
        boolean boolean15 = atmosphereConfig12.isSupportSession();
        boolean boolean16 = atmosphereConfig12.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig4.populate(atmosphereConfig12);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig4.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.getshutdownHooks();
        int int23 = atmosphereConfig19.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig19.getframework();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertNull(atmosphereFramework24);
    }

    @Test
    public void test09165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09165");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig4.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.lang.String str10 = atmosphereConfig4.getInitParameter("");
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test09166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09166");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig9.properties;
        atmosphereConfig0.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        atmosphereConfig19.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        int int27 = atmosphereConfig23.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig23.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30, startupHookArray29);
        atmosphereConfig23.startUpHook = startupHookList30;
        atmosphereConfig19.startUpHook = startupHookList30;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig19.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList34;
        org.slf4j.Logger logger36 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setSupportSession(false);
        boolean boolean39 = atmosphereConfig0.supportSession;
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNotNull(startupHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test09167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09167");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        org.slf4j.Logger logger19 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig0.setframework(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        int int26 = atmosphereConfig22.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig22.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig22.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.getproperties();
        atmosphereConfig22.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        atmosphereConfig31.throwExceptionOnCloned = true;
        boolean boolean35 = atmosphereConfig31.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig31.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.startupHook(startupHook42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig43.setframework(atmosphereFramework44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig43.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig43.getshutdownHooks();
        atmosphereConfig31.setshutdownHooks(shutdownHookList47);
        atmosphereConfig31.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig51.throwExceptionOnCloned;
        atmosphereConfig51.destroy();
        atmosphereConfig51.initComplete();
        java.lang.String str58 = atmosphereConfig51.getInitParameter("hi!", "");
        boolean boolean59 = atmosphereConfig51.isSessionTimeoutRemovalAllowed();
        java.lang.String str61 = atmosphereConfig51.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63, shutdownHookArray62);
        atmosphereConfig51.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63);
        atmosphereConfig31.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig67.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig67.shutdownHook(shutdownHook70);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig71.shutdownHook(shutdownHook72);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList74 = atmosphereConfig71.getstartUpHook();
        atmosphereConfig31.startUpHook = startupHookList74;
        atmosphereConfig22.setstartUpHook(startupHookList74);
        atmosphereConfig0.setstartUpHook(startupHookList74);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework78 = null;
        atmosphereConfig0.framework = atmosphereFramework78;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList80 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean83 = atmosphereConfig0.getInitParameter("", false);
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig86.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook89 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig90 = atmosphereConfig86.shutdownHook(shutdownHook89);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook91 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig92 = atmosphereConfig90.shutdownHook(shutdownHook91);
        org.slf4j.Logger logger93 = atmosphereConfig92.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook94 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig95 = atmosphereConfig92.startupHook(startupHook94);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework96 = null;
        atmosphereConfig95.setframework(atmosphereFramework96);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig98 = atmosphereConfig0.populate(atmosphereConfig95);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory99 = atmosphereConfig98.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(shutdownHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(startupHookList74);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig90);
        org.junit.Assert.assertNotNull(atmosphereConfig92);
        org.junit.Assert.assertNotNull(logger93);
        org.junit.Assert.assertNotNull(atmosphereConfig95);
        org.junit.Assert.assertNotNull(atmosphereConfig98);
    }

    @Test
    public void test09168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09168");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        org.slf4j.Logger logger19 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test09169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09169");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties;
        atmosphereConfig0.setproperties(strMap10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig12.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList14);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        int int24 = atmosphereConfig20.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig20.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.properties();
        atmosphereConfig0.setproperties(strMap27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.shutdownHook(shutdownHook30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig0.properties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap32);
    }

    @Test
    public void test09170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09170");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        atmosphereConfig0.destroy();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        int int18 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig14.supportSession = false;
        boolean boolean21 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        atmosphereConfig14.destroy();
        boolean boolean23 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig14.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig14.shutdownHook(shutdownHook25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
    }

    @Test
    public void test09171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09171");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.shutdownHook(shutdownHook24);
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        atmosphereConfig23.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.shutdownHook(shutdownHook34);
        org.slf4j.Logger logger36 = atmosphereConfig35.getlogger();
        boolean boolean37 = atmosphereConfig35.isSupportSession();
        boolean boolean38 = atmosphereConfig35.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig39.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44, startupHookArray43);
        atmosphereConfig39.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44);
        atmosphereConfig35.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44);
        atmosphereConfig23.startUpHook = startupHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig49.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig49.getshutdownHooks();
        atmosphereConfig23.setshutdownHooks(shutdownHookList51);
        atmosphereConfig0.shutdownHooks = shutdownHookList51;
        boolean boolean54 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        atmosphereConfig0.setframework(atmosphereFramework56);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig58 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
    }

    @Test
    public void test09172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09172");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList17, startupHookArray16);
        atmosphereConfig12.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig12.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.populate(atmosphereConfig12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig12.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig12.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(startupHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNull(atmosphereFramework24);
    }

    @Test
    public void test09173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09173");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        boolean boolean10 = atmosphereConfig8.throwExceptionOnCloned;
        atmosphereConfig8.destroy();
        atmosphereConfig8.initComplete();
        java.lang.String str15 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean16 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig8.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList17;
        boolean boolean21 = atmosphereConfig0.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(startupHookList23);
    }

    @Test
    public void test09174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09174");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig27.setframework(atmosphereFramework28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig27.getproperties();
        atmosphereConfig16.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig16.framework;
        boolean boolean33 = atmosphereConfig16.supportSession;
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.populate(atmosphereConfig16);
        atmosphereConfig16.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig16.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig39.getAtmosphereHandlerConfig();
        int int43 = atmosphereConfig39.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        atmosphereConfig44.throwExceptionOnCloned = true;
        boolean boolean48 = atmosphereConfig44.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig44.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig54.startupHook(startupHook55);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        atmosphereConfig56.setframework(atmosphereFramework57);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig56.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = atmosphereConfig56.getshutdownHooks();
        atmosphereConfig44.setshutdownHooks(shutdownHookList60);
        atmosphereConfig39.setshutdownHooks(shutdownHookList60);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig39.shutdownHook(shutdownHook63);
        atmosphereConfig64.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig67.getAtmosphereHandlerConfig();
        int int71 = atmosphereConfig67.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig67.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework74 = atmosphereConfig67.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig75.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook78 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig75.shutdownHook(shutdownHook78);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig79.shutdownHook(shutdownHook80);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList82 = atmosphereConfig79.atmosphereHandlerConfig;
        boolean boolean83 = atmosphereConfig79.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList84 = atmosphereConfig79.getshutdownHooks();
        atmosphereConfig67.setshutdownHooks(shutdownHookList84);
        atmosphereConfig67.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = atmosphereConfig64.populate(atmosphereConfig67);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig89 = atmosphereConfig16.populate(atmosphereConfig64);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory90 = atmosphereConfig89.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(shutdownHookList60);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(atmosphereFramework74);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(shutdownHookList84);
        org.junit.Assert.assertNotNull(atmosphereConfig88);
        org.junit.Assert.assertNotNull(atmosphereConfig89);
    }

    @Test
    public void test09175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09175");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig6.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig6.startUpHook;
        java.lang.String str15 = atmosphereConfig6.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig16.throwExceptionOnCloned = true;
        boolean boolean20 = atmosphereConfig16.isSupportSession();
        boolean boolean21 = atmosphereConfig16.isSessionTimeoutRemovalAllowed();
        boolean boolean22 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig27.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig27.atmosphereHandlerConfig;
        boolean boolean31 = atmosphereConfig27.supportSession;
        boolean boolean32 = atmosphereConfig27.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig27.properties;
        atmosphereConfig16.setproperties(strMap33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig39.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        atmosphereConfig41.setframework(atmosphereFramework42);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig41.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig41.getshutdownHooks();
        atmosphereConfig16.setshutdownHooks(shutdownHookList45);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig16.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig48.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig48.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray52 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList53, startupHookArray52);
        atmosphereConfig48.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig61.shutdownHook(shutdownHook64);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig65.startupHook(startupHook66);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        atmosphereConfig67.setframework(atmosphereFramework68);
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig67.getproperties();
        atmosphereConfig56.setproperties(strMap70);
        atmosphereConfig48.setproperties(strMap70);
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig48.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList75 = atmosphereConfig74.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList76 = atmosphereConfig74.startUpHook;
        atmosphereConfig48.startUpHook = startupHookList76;
        boolean boolean78 = atmosphereConfig48.supportSession;
        boolean boolean79 = atmosphereConfig48.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = atmosphereConfig16.populate(atmosphereConfig48);
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = atmosphereConfig80.properties;
        atmosphereConfig6.setproperties(strMap81);
        boolean boolean83 = atmosphereConfig6.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext84 = atmosphereConfig6.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(startupHookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList75);
        org.junit.Assert.assertNotNull(startupHookList76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test09176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09176");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        java.lang.String str10 = atmosphereConfig4.getInitParameter("hi!", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig4.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig4.framework();
        java.lang.String str15 = atmosphereConfig4.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean17 = atmosphereConfig16.isThrowExceptionOnCloned();
        atmosphereConfig16.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig16.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig22.throwExceptionOnCloned = true;
        boolean boolean26 = atmosphereConfig22.isSupportSession();
        boolean boolean27 = atmosphereConfig22.isSessionTimeoutRemovalAllowed();
        boolean boolean28 = atmosphereConfig22.sessionTimeoutRemovalAllowed;
        boolean boolean29 = atmosphereConfig22.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig22.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig22.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = null;
        atmosphereConfig22.setframework(atmosphereFramework32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.shutdownHook(shutdownHook39);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig40.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig22.setshutdownHooks(shutdownHookList42);
        boolean boolean44 = atmosphereConfig22.isSessionTimeoutRemovalAllowed();
        boolean boolean45 = atmosphereConfig22.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig22.atmosphereHandlerConfig;
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList46;
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList46;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
    }

    @Test
    public void test09177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09177");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.slf4j.Logger logger10 = atmosphereConfig6.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties();
        atmosphereConfig6.destroy();
        atmosphereConfig6.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        boolean boolean16 = atmosphereConfig14.throwExceptionOnCloned;
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig14.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig14.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig28.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig30.setframework(atmosphereFramework31);
        atmosphereConfig30.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig30.properties;
        boolean boolean36 = atmosphereConfig30.throwExceptionOnCloned;
        boolean boolean39 = atmosphereConfig30.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig30.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig30.getproperties();
        atmosphereConfig23.setproperties(strMap41);
        atmosphereConfig6.setproperties(strMap41);
        boolean boolean46 = atmosphereConfig6.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig6.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig6.framework;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNull(atmosphereFramework48);
    }

    @Test
    public void test09178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09178");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        boolean boolean14 = atmosphereConfig11.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig11.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig11.getframework();
        atmosphereConfig11.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig11.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig10.populate(atmosphereConfig11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(startupHookList21);
    }

    @Test
    public void test09179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09179");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.destroy();
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig11.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24, startupHookArray23);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24);
        atmosphereConfig11.startUpHook = startupHookList24;
        atmosphereConfig0.startUpHook = startupHookList24;
        atmosphereConfig0.destroy();
        boolean boolean30 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.lang.String str33 = atmosphereConfig0.getInitParameter("", "");
        org.slf4j.Logger logger34 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(startupHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(logger34);
    }

    @Test
    public void test09180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09180");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        java.lang.String str19 = atmosphereConfig0.getInitParameter("hi!", "");
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig22.getshutdownHooks();
        boolean boolean27 = atmosphereConfig22.getInitParameter("", true);
        atmosphereConfig22.initComplete();
        atmosphereConfig22.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.populate(atmosphereConfig22);
        boolean boolean32 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test09181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09181");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
    }

    @Test
    public void test09182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09182");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        boolean boolean15 = atmosphereConfig10.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.getproperties();
        atmosphereConfig0.setproperties(strMap16);
        boolean boolean18 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig20.getshutdownHooks();
        boolean boolean25 = atmosphereConfig20.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig26.getshutdownHooks();
        atmosphereConfig26.setThrowExceptionOnCloned(false);
        java.lang.String str32 = atmosphereConfig26.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig26.properties;
        atmosphereConfig20.setproperties(strMap33);
        atmosphereConfig19.properties = strMap33;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig19.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig38.getAtmosphereHandlerConfig();
        int int42 = atmosphereConfig38.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig38.supportSession = false;
        boolean boolean45 = atmosphereConfig38.isSessionTimeoutRemovalAllowed();
        atmosphereConfig38.destroy();
        java.lang.String str48 = atmosphereConfig38.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig38.properties;
        atmosphereConfig0.setproperties(strMap49);
        java.lang.Class<?> wildcardClass51 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test09183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09183");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        boolean boolean12 = atmosphereConfig6.throwExceptionOnCloned;
        java.lang.String str15 = atmosphereConfig6.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig6.shutdownHook(shutdownHook16);
        java.lang.String str20 = atmosphereConfig6.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        int int25 = atmosphereConfig21.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig21.supportSession = false;
        boolean boolean28 = atmosphereConfig21.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig29.getshutdownHooks();
        atmosphereConfig21.setshutdownHooks(shutdownHookList31);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig21.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig21.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig6.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        int int41 = atmosphereConfig37.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig37.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = atmosphereConfig37.framework();
        org.slf4j.Logger logger45 = atmosphereConfig37.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig37.getframework();
        atmosphereConfig37.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig49.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig49.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig49.properties();
        atmosphereConfig37.properties = strMap54;
        atmosphereConfig6.setproperties(strMap54);
        boolean boolean59 = atmosphereConfig6.getInitParameter("hi!", false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(atmosphereFramework44);
        org.junit.Assert.assertNotNull(logger45);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test09184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09184");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        boolean boolean9 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig0.framework = atmosphereFramework12;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
    }

    @Test
    public void test09185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09185");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig16.throwExceptionOnCloned;
        atmosphereConfig16.destroy();
        atmosphereConfig16.initComplete();
        atmosphereConfig16.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig16.framework();
        atmosphereConfig16.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig0.populate(atmosphereConfig16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig16.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig28.throwExceptionOnCloned = true;
        boolean boolean32 = atmosphereConfig28.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig40.setframework(atmosphereFramework41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig40.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig28.setshutdownHooks(shutdownHookList44);
        atmosphereConfig28.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig28.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig28.getproperties();
        atmosphereConfig16.properties = strMap50;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig16.startupHook(startupHook52);
        atmosphereConfig16.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
    }

    @Test
    public void test09186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09186");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.framework = atmosphereFramework14;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig0.getstartUpHook();
        java.lang.String str19 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig0.framework = atmosphereFramework20;
        java.lang.String str24 = atmosphereConfig0.getInitParameter("", "");
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig25 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test09187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09187");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig4.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.startupHook(startupHook9);
        atmosphereConfig10.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig10.framework = atmosphereFramework13;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig10.properties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory16 = atmosphereConfig10.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test09188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09188");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        atmosphereConfig18.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig18.initComplete();
        atmosphereConfig18.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig18.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList28;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNull(atmosphereFramework30);
    }

    @Test
    public void test09189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09189");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig6.setframework(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig6.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig6.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.shutdownHook(shutdownHook21);
        org.slf4j.Logger logger23 = atmosphereConfig22.getlogger();
        boolean boolean24 = atmosphereConfig22.isSupportSession();
        boolean boolean25 = atmosphereConfig22.isThrowExceptionOnCloned();
        org.slf4j.Logger logger26 = atmosphereConfig22.getlogger();
        atmosphereConfig22.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig22.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig30.setframework(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig15.populate(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(logger26);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
    }

    @Test
    public void test09190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09190");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory10 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
    }

    @Test
    public void test09191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09191");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean3 = atmosphereConfig0.isSupportSession();
        boolean boolean4 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test09192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09192");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.startUpHook;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean10 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test09193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09193");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        int int12 = atmosphereConfig0.getInitParameter("hi!", 100);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        boolean boolean16 = atmosphereConfig14.throwExceptionOnCloned;
        atmosphereConfig14.destroy();
        atmosphereConfig14.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig14.framework = atmosphereFramework19;
        int int23 = atmosphereConfig14.getInitParameter("hi!", (int) '#');
        boolean boolean24 = atmosphereConfig14.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig14.properties;
        atmosphereConfig0.properties = strMap25;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 35 + "'", int23 == 35);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test09194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09194");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig0.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig0.getproperties();
        atmosphereConfig0.setSupportSession(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test09195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09195");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig4.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig4.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.shutdownHook(shutdownHook17);
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        atmosphereConfig16.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.shutdownHook(shutdownHook27);
        org.slf4j.Logger logger29 = atmosphereConfig28.getlogger();
        boolean boolean30 = atmosphereConfig28.isSupportSession();
        boolean boolean31 = atmosphereConfig28.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        atmosphereConfig28.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        atmosphereConfig16.startUpHook = startupHookList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig42.getshutdownHooks();
        atmosphereConfig16.setshutdownHooks(shutdownHookList44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig46.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig46.getshutdownHooks();
        atmosphereConfig46.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig51.getshutdownHooks();
        atmosphereConfig46.setshutdownHooks(shutdownHookList53);
        atmosphereConfig16.shutdownHooks = shutdownHookList53;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig56.getAtmosphereHandlerConfig();
        int int60 = atmosphereConfig56.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig56.supportSession = false;
        boolean boolean63 = atmosphereConfig56.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig64.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList66 = atmosphereConfig64.getshutdownHooks();
        atmosphereConfig56.setshutdownHooks(shutdownHookList66);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig68.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig68.properties();
        atmosphereConfig56.properties = strMap71;
        atmosphereConfig16.setproperties(strMap71);
        atmosphereConfig9.properties = strMap71;
        boolean boolean75 = atmosphereConfig9.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList76 = atmosphereConfig9.startUpHook;
        atmosphereConfig4.startUpHook = startupHookList76;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework78 = null;
        atmosphereConfig4.setframework(atmosphereFramework78);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList80 = atmosphereConfig4.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList81 = atmosphereConfig4.atmosphereHandlerConfig;
        org.slf4j.Logger logger82 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework83 = atmosphereConfig4.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework84 = atmosphereConfig4.framework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory85 = atmosphereConfig4.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertNotNull(shutdownHookList66);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(startupHookList76);
        org.junit.Assert.assertNotNull(shutdownHookList80);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList81);
        org.junit.Assert.assertNotNull(logger82);
        org.junit.Assert.assertNull(atmosphereFramework83);
        org.junit.Assert.assertNull(atmosphereFramework84);
    }

    @Test
    public void test09196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09196");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList2 = atmosphereConfig1.atmosphereHandlerConfig;
        java.lang.String str5 = atmosphereConfig1.getInitParameter("", "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test09197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09197");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig4.atmosphereHandlerConfig;
        atmosphereConfig4.supportSession = true;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
    }

    @Test
    public void test09198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09198");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.startupHook(startupHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig6.properties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig6.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.slf4j.Logger logger16 = atmosphereConfig13.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig13.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig6.populate(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
    }

    @Test
    public void test09199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09199");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.shutdownHooks;
        boolean boolean11 = atmosphereConfig6.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        atmosphereConfig12.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig22.setframework(atmosphereFramework23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig22.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig22.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig22.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList27);
        atmosphereConfig6.startUpHook = startupHookList27;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        int int36 = atmosphereConfig32.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig32.supportSession = false;
        boolean boolean39 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig44.startupHook(startupHook45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        atmosphereConfig46.setframework(atmosphereFramework47);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig46.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig46.getshutdownHooks();
        atmosphereConfig32.setshutdownHooks(shutdownHookList50);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig32.shutdownHooks;
        atmosphereConfig6.setshutdownHooks(shutdownHookList52);
        atmosphereConfig6.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig6.initComplete();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(shutdownHookList52);
    }

    @Test
    public void test09200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09200");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig5.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList7);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        atmosphereConfig13.throwExceptionOnCloned = true;
        boolean boolean17 = atmosphereConfig13.isSupportSession();
        boolean boolean18 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        boolean boolean19 = atmosphereConfig13.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig20.getstartUpHook();
        atmosphereConfig13.startUpHook = startupHookList24;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig13.properties();
        atmosphereConfig0.setproperties(strMap26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test09201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09201");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig4.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        int int15 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig11.supportSession = false;
        boolean boolean18 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig19.getshutdownHooks();
        atmosphereConfig11.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig11.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.startupHook(startupHook30);
        org.slf4j.Logger logger32 = atmosphereConfig29.getlogger();
        atmosphereConfig29.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig29.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.startupHook(startupHook42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig43.setframework(atmosphereFramework44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig43.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig43.getshutdownHooks();
        atmosphereConfig29.shutdownHooks = shutdownHookList47;
        atmosphereConfig24.setshutdownHooks(shutdownHookList47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig24.startupHook(startupHook50);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig51.properties();
        atmosphereConfig4.setproperties(strMap52);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig4.shutdownHook(shutdownHook54);
        java.lang.String str57 = atmosphereConfig4.getInitParameter("");
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test09202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09202");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.destroy();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig13.getshutdownHooks();
        boolean boolean18 = atmosphereConfig13.getInitParameter("", true);
        boolean boolean19 = atmosphereConfig13.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig13.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig22.throwExceptionOnCloned;
        atmosphereConfig22.destroy();
        atmosphereConfig22.initComplete();
        java.lang.String str29 = atmosphereConfig22.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig36.setframework(atmosphereFramework37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig36.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig36.shutdownHooks;
        atmosphereConfig22.shutdownHooks = shutdownHookList40;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig22.shutdownHook(shutdownHook42);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig22.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList44;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
    }

    @Test
    public void test09203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09203");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig13.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig13.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig13.getAtmosphereHandlerConfig();
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig6.setframework(atmosphereFramework19);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig6.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        atmosphereConfig6.properties = strMap22;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(shutdownHookList21);
    }

    @Test
    public void test09204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09204");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig13.throwExceptionOnCloned;
        atmosphereConfig13.destroy();
        atmosphereConfig13.initComplete();
        java.lang.String str20 = atmosphereConfig13.getInitParameter("hi!", "");
        boolean boolean21 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        atmosphereConfig13.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig0.populate(atmosphereConfig13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        boolean boolean27 = atmosphereConfig25.throwExceptionOnCloned;
        atmosphereConfig25.destroy();
        atmosphereConfig25.initComplete();
        java.lang.String str32 = atmosphereConfig25.getInitParameter("hi!", "");
        boolean boolean33 = atmosphereConfig25.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig34.getshutdownHooks();
        atmosphereConfig34.setThrowExceptionOnCloned(false);
        java.lang.String str40 = atmosphereConfig34.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig34.properties;
        atmosphereConfig25.setproperties(strMap41);
        atmosphereConfig13.setproperties(strMap41);
        boolean boolean44 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test09205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09205");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean3 = atmosphereConfig0.isSupportSession();
        boolean boolean4 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
    }

    @Test
    public void test09206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09206");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig6.startupHook(startupHook11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig12.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig12.startUpHook;
        atmosphereConfig12.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig12.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig12.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
    }

    @Test
    public void test09207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09207");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig0.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig0.framework;
        atmosphereConfig0.throwExceptionOnCloned = false;
        boolean boolean43 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test09208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09208");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.shutdownHooks;
        boolean boolean11 = atmosphereConfig6.isSupportSession();
        java.lang.String str13 = atmosphereConfig6.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        int int18 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig14.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig20.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig20.framework = atmosphereFramework28;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig20.getstartUpHook();
        atmosphereConfig14.setstartUpHook(startupHookList30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig36.shutdownHook(shutdownHook37);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig36.atmosphereHandlerConfig;
        boolean boolean40 = atmosphereConfig36.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig36.getshutdownHooks();
        atmosphereConfig14.shutdownHooks = shutdownHookList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig14.properties();
        atmosphereConfig6.properties = strMap43;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig45.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray49 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList50, startupHookArray49);
        atmosphereConfig45.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig58.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig58.shutdownHook(shutdownHook61);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig62.startupHook(startupHook63);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = null;
        atmosphereConfig64.setframework(atmosphereFramework65);
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig64.getproperties();
        atmosphereConfig53.setproperties(strMap67);
        atmosphereConfig45.setproperties(strMap67);
        atmosphereConfig45.supportSession = false;
        boolean boolean72 = atmosphereConfig45.supportSession;
        atmosphereConfig45.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = atmosphereConfig45.getproperties();
        atmosphereConfig6.properties = strMap75;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(startupHookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMap75);
    }

    @Test
    public void test09209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09209");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        int int11 = atmosphereConfig0.getInitParameter("hi!", 100);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        boolean boolean14 = atmosphereConfig12.throwExceptionOnCloned;
        atmosphereConfig12.destroy();
        atmosphereConfig12.initComplete();
        java.lang.String str19 = atmosphereConfig12.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig24.startupHook(startupHook25);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig26.setframework(atmosphereFramework27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig26.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig26.shutdownHooks;
        atmosphereConfig12.shutdownHooks = shutdownHookList30;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig12.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.populate(atmosphereConfig12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig34.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
    }

    @Test
    public void test09210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09210");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig42.shutdownHook(shutdownHook43);
        int int47 = atmosphereConfig44.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig48.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig48.getshutdownHooks();
        atmosphereConfig44.shutdownHooks = shutdownHookList50;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig44.framework = atmosphereFramework52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig54.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig54.getshutdownHooks();
        boolean boolean59 = atmosphereConfig54.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig60.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = atmosphereConfig60.getshutdownHooks();
        atmosphereConfig60.setThrowExceptionOnCloned(false);
        java.lang.String str66 = atmosphereConfig60.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig60.properties;
        atmosphereConfig54.setproperties(strMap67);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig54.properties;
        atmosphereConfig44.properties = strMap69;
        atmosphereConfig0.setproperties(strMap69);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList73 = atmosphereConfig72.getAtmosphereHandlerConfig();
        boolean boolean74 = atmosphereConfig72.throwExceptionOnCloned;
        atmosphereConfig72.destroy();
        atmosphereConfig72.initComplete();
        java.lang.String str79 = atmosphereConfig72.getInitParameter("hi!", "");
        boolean boolean80 = atmosphereConfig72.isSessionTimeoutRemovalAllowed();
        java.lang.String str82 = atmosphereConfig72.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList84 = atmosphereConfig83.getAtmosphereHandlerConfig();
        boolean boolean85 = atmosphereConfig83.throwExceptionOnCloned;
        atmosphereConfig83.setThrowExceptionOnCloned(false);
        boolean boolean88 = atmosphereConfig83.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = atmosphereConfig83.getproperties();
        atmosphereConfig72.setproperties(strMap89);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework91 = atmosphereConfig72.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList92 = atmosphereConfig72.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList93 = atmosphereConfig72.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList93;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertNotNull(shutdownHookList62);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNull(atmosphereFramework91);
        org.junit.Assert.assertNotNull(shutdownHookList92);
        org.junit.Assert.assertNotNull(shutdownHookList93);
    }

    @Test
    public void test09211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09211");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean18 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test09212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09212");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.shutdownHooks;
        boolean boolean15 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig16.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.shutdownHook(shutdownHook24);
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        atmosphereConfig23.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.shutdownHook(shutdownHook34);
        org.slf4j.Logger logger36 = atmosphereConfig35.getlogger();
        boolean boolean37 = atmosphereConfig35.isSupportSession();
        boolean boolean38 = atmosphereConfig35.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig39.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44, startupHookArray43);
        atmosphereConfig39.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44);
        atmosphereConfig35.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44);
        atmosphereConfig23.startUpHook = startupHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig49.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig49.getshutdownHooks();
        atmosphereConfig23.setshutdownHooks(shutdownHookList51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig53.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig53.getshutdownHooks();
        atmosphereConfig53.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = atmosphereConfig58.getshutdownHooks();
        atmosphereConfig53.setshutdownHooks(shutdownHookList60);
        atmosphereConfig23.shutdownHooks = shutdownHookList60;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig63.getAtmosphereHandlerConfig();
        int int67 = atmosphereConfig63.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig63.supportSession = false;
        boolean boolean70 = atmosphereConfig63.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList72 = atmosphereConfig71.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = atmosphereConfig71.getshutdownHooks();
        atmosphereConfig63.setshutdownHooks(shutdownHookList73);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig75.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = atmosphereConfig75.properties();
        atmosphereConfig63.properties = strMap78;
        atmosphereConfig23.setproperties(strMap78);
        atmosphereConfig16.properties = strMap78;
        boolean boolean84 = atmosphereConfig16.getInitParameter("", false);
        atmosphereConfig16.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        atmosphereConfig16.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = atmosphereConfig16.getproperties();
        atmosphereConfig0.setproperties(strMap91);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory93 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(shutdownHookList60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList72);
        org.junit.Assert.assertNotNull(shutdownHookList73);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strMap91);
    }

    @Test
    public void test09213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09213");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.getproperties();
        atmosphereConfig8.setproperties(strMap22);
        atmosphereConfig0.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        atmosphereConfig0.setproperties(strMap26);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig0.shutdownHook(shutdownHook28);
        atmosphereConfig29.initComplete();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
    }

    @Test
    public void test09214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09214");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig14.getshutdownHooks();
        atmosphereConfig9.setshutdownHooks(shutdownHookList16);
        boolean boolean18 = atmosphereConfig9.isSessionTimeoutRemovalAllowed();
        atmosphereConfig9.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig9.shutdownHooks;
        atmosphereConfig6.shutdownHooks = shutdownHookList21;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig6.startupHook(startupHook23);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.getstartUpHook();
        atmosphereConfig24.throwExceptionOnCloned = true;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(startupHookList25);
    }

    @Test
    public void test09215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09215");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig14.atmosphereHandlerConfig;
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig6.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        int int24 = atmosphereConfig20.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig20.supportSession = false;
        boolean boolean27 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        atmosphereConfig20.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        boolean boolean31 = atmosphereConfig29.throwExceptionOnCloned;
        atmosphereConfig29.destroy();
        atmosphereConfig29.initComplete();
        java.lang.String str36 = atmosphereConfig29.getInitParameter("hi!", "");
        boolean boolean37 = atmosphereConfig29.isSessionTimeoutRemovalAllowed();
        boolean boolean40 = atmosphereConfig29.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        atmosphereConfig41.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        int int49 = atmosphereConfig45.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = atmosphereConfig45.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray51 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList52, startupHookArray51);
        atmosphereConfig45.startUpHook = startupHookList52;
        atmosphereConfig41.startUpHook = startupHookList52;
        atmosphereConfig29.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList52);
        atmosphereConfig20.startUpHook = startupHookList52;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig20.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig20.properties();
        atmosphereConfig6.setproperties(strMap59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig61.getAtmosphereHandlerConfig();
        boolean boolean63 = atmosphereConfig61.throwExceptionOnCloned;
        atmosphereConfig61.destroy();
        boolean boolean65 = atmosphereConfig61.sessionTimeoutRemovalAllowed;
        atmosphereConfig61.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig61.setSessionTimeoutRemovalAllowed(false);
        int int72 = atmosphereConfig61.getInitParameter("hi!", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig61.startupHook(startupHook73);
        boolean boolean77 = atmosphereConfig74.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig78.getAtmosphereHandlerConfig();
        int int82 = atmosphereConfig78.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework83 = atmosphereConfig78.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray84 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList85 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList85, startupHookArray84);
        atmosphereConfig78.startUpHook = startupHookList85;
        org.slf4j.Logger logger88 = atmosphereConfig78.getlogger();
        java.lang.String str90 = atmosphereConfig78.getInitParameter("");
        boolean boolean91 = atmosphereConfig78.isThrowExceptionOnCloned();
        boolean boolean92 = atmosphereConfig78.isSupportSession();
        atmosphereConfig78.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList95 = atmosphereConfig78.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap96 = atmosphereConfig78.properties();
        atmosphereConfig74.properties = strMap96;
        atmosphereConfig6.properties = strMap96;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(atmosphereFramework50);
        org.junit.Assert.assertNotNull(startupHookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNull(atmosphereFramework83);
        org.junit.Assert.assertNotNull(startupHookArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(logger88);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(startupHookList95);
        org.junit.Assert.assertNotNull(strMap96);
    }

    @Test
    public void test09216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09216");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSupportSession(true);
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.destroy();
        atmosphereConfig10.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig10.shutdownHook(shutdownHook16);
        atmosphereConfig10.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig10.getproperties();
        atmosphereConfig10.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig10.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig10.properties;
        atmosphereConfig0.setproperties(strMap23);
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
    }

    @Test
    public void test09217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09217");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework11);
    }

    @Test
    public void test09218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09218");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList25;
        boolean boolean27 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig0.setframework(atmosphereFramework33);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shutdownHookList32);
    }

    @Test
    public void test09219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09219");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.throwExceptionOnCloned = true;
        boolean boolean12 = atmosphereConfig4.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test09220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09220");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(false);
        boolean boolean15 = atmosphereConfig0.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.slf4j.Logger logger19 = atmosphereConfig16.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig20.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig20.setshutdownHooks(shutdownHookList27);
        boolean boolean29 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        atmosphereConfig20.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig20.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig16.populate(atmosphereConfig20);
        org.slf4j.Logger logger35 = atmosphereConfig16.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig16.setframework(atmosphereFramework36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig38.getAtmosphereHandlerConfig();
        int int42 = atmosphereConfig38.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig38.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig38.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig38.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig47.throwExceptionOnCloned = true;
        boolean boolean51 = atmosphereConfig47.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig57.startupHook(startupHook58);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig59.setframework(atmosphereFramework60);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig59.getshutdownHooks();
        atmosphereConfig47.setshutdownHooks(shutdownHookList63);
        atmosphereConfig47.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig67.getAtmosphereHandlerConfig();
        boolean boolean69 = atmosphereConfig67.throwExceptionOnCloned;
        atmosphereConfig67.destroy();
        atmosphereConfig67.initComplete();
        java.lang.String str74 = atmosphereConfig67.getInitParameter("hi!", "");
        boolean boolean75 = atmosphereConfig67.isSessionTimeoutRemovalAllowed();
        java.lang.String str77 = atmosphereConfig67.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray78 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList79, shutdownHookArray78);
        atmosphereConfig67.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList79);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList79);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig83.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook86 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig87 = atmosphereConfig83.shutdownHook(shutdownHook86);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook88 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig89 = atmosphereConfig87.shutdownHook(shutdownHook88);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList90 = atmosphereConfig87.getstartUpHook();
        atmosphereConfig47.startUpHook = startupHookList90;
        atmosphereConfig38.setstartUpHook(startupHookList90);
        atmosphereConfig16.setstartUpHook(startupHookList90);
        atmosphereConfig0.startUpHook = startupHookList90;
        boolean boolean97 = atmosphereConfig0.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook98 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig99 = atmosphereConfig0.shutdownHook(shutdownHook98);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(logger35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(shutdownHookArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig87);
        org.junit.Assert.assertNotNull(atmosphereConfig89);
        org.junit.Assert.assertNotNull(startupHookList90);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig99);
    }

    @Test
    public void test09221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09221");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.getshutdownHooks();
        boolean boolean17 = atmosphereConfig12.getInitParameter("", true);
        atmosphereConfig12.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig12.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig12.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig4.populate(atmosphereConfig12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
    }

    @Test
    public void test09222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09222");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        org.slf4j.Logger logger19 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig0.setframework(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.shutdownHook(shutdownHook22);
        boolean boolean26 = atmosphereConfig0.getInitParameter("", true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory27 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test09223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09223");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.setframework(atmosphereFramework8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        int int16 = atmosphereConfig12.getInitParameter("hi!", (int) (short) 0);
        boolean boolean17 = atmosphereConfig12.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        atmosphereConfig12.startUpHook = startupHookList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.populate(atmosphereConfig12);
        atmosphereConfig12.supportSession = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
    }

    @Test
    public void test09224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09224");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.shutdownHook(shutdownHook36);
        boolean boolean38 = atmosphereConfig37.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig37.properties;
        atmosphereConfig37.destroy();
        org.slf4j.Logger logger41 = atmosphereConfig37.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig37.getframework();
        atmosphereConfig37.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(logger41);
        org.junit.Assert.assertNull(atmosphereFramework42);
    }

    @Test
    public void test09225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09225");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig0.startUpHook;
        boolean boolean4 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.startupHook(startupHook13);
        boolean boolean15 = atmosphereConfig12.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig12.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig12.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        java.lang.String str24 = atmosphereConfig18.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig18.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig18.startupHook(startupHook26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig18.properties;
        atmosphereConfig12.setproperties(strMap28);
        atmosphereConfig0.properties = strMap28;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test09226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09226");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig7.getshutdownHooks();
        boolean boolean12 = atmosphereConfig7.getInitParameter("", true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig7.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig7.framework();
        int int17 = atmosphereConfig7.getInitParameter("hi!", (int) (byte) 10);
        atmosphereConfig7.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig7.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        org.slf4j.Logger logger28 = atmosphereConfig27.getlogger();
        boolean boolean29 = atmosphereConfig27.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig27.getstartUpHook();
        atmosphereConfig7.setstartUpHook(startupHookList30);
        atmosphereConfig4.startUpHook = startupHookList30;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig4.properties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test09227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09227");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig9.properties;
        atmosphereConfig0.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig0.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework();
        org.slf4j.Logger logger22 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig0.framework = atmosphereFramework24;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
    }

    @Test
    public void test09228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09228");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.getshutdownHooks();
        atmosphereConfig6.shutdownHooks = shutdownHookList12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig6.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig16.getshutdownHooks();
        boolean boolean21 = atmosphereConfig16.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig22.getshutdownHooks();
        atmosphereConfig22.setThrowExceptionOnCloned(false);
        java.lang.String str28 = atmosphereConfig22.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.properties;
        atmosphereConfig16.setproperties(strMap29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.properties;
        atmosphereConfig6.properties = strMap31;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig6.setframework(atmosphereFramework33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        boolean boolean37 = atmosphereConfig35.throwExceptionOnCloned;
        atmosphereConfig35.destroy();
        atmosphereConfig35.initComplete();
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig35.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig43.getAtmosphereHandlerConfig();
        int int47 = atmosphereConfig43.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig43.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig43.properties();
        atmosphereConfig35.setproperties(strMap50);
        atmosphereConfig35.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean55 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig54.startupHook(startupHook56);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig54.startUpHook;
        atmosphereConfig35.startUpHook = startupHookList58;
        atmosphereConfig6.startUpHook = startupHookList58;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig6.getproperties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertNotNull(strMap61);
    }

    @Test
    public void test09229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09229");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean10 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig0.setframework(atmosphereFramework11);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster13 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09230");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig4.supportSession;
        boolean boolean13 = atmosphereConfig4.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig4.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig15.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig17.throwExceptionOnCloned = true;
        boolean boolean21 = atmosphereConfig17.isSupportSession();
        boolean boolean22 = atmosphereConfig17.isSessionTimeoutRemovalAllowed();
        boolean boolean23 = atmosphereConfig17.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig17.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig17.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig17.framework();
        atmosphereConfig17.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig15.populate(atmosphereConfig17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig29.getshutdownHooks();
        boolean boolean32 = atmosphereConfig29.isSupportSession();
        boolean boolean33 = atmosphereConfig29.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig34.throwExceptionOnCloned = true;
        boolean boolean38 = atmosphereConfig34.isSupportSession();
        boolean boolean39 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        boolean boolean40 = atmosphereConfig34.sessionTimeoutRemovalAllowed;
        boolean boolean41 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig34.shutdownHooks;
        atmosphereConfig29.setshutdownHooks(shutdownHookList42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig48.shutdownHook(shutdownHook49);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig48.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig48.atmosphereHandlerConfig;
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList52;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig29.startupHook(startupHook54);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig55.getproperties();
        atmosphereConfig15.setproperties(strMap56);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test09231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09231");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.startupHook(startupHook8);
        java.lang.String str11 = atmosphereConfig9.getInitParameter("");
        atmosphereConfig9.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig9.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig9.getframework();
        boolean boolean16 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.shutdownHook(shutdownHook22);
        org.slf4j.Logger logger24 = atmosphereConfig23.getlogger();
        boolean boolean25 = atmosphereConfig23.isSupportSession();
        atmosphereConfig23.throwExceptionOnCloned = false;
        atmosphereConfig23.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig23.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig23.setframework(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig9.populate(atmosphereConfig23);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap34 = atmosphereConfig9.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(logger24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
    }

    @Test
    public void test09232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09232");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig14.atmosphereHandlerConfig;
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig6.atmosphereHandlerConfig;
        atmosphereConfig6.setThrowExceptionOnCloned(false);
        java.lang.String str24 = atmosphereConfig6.getInitParameter("", "");
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test09233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09233");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig9.throwExceptionOnCloned;
        atmosphereConfig9.destroy();
        atmosphereConfig9.initComplete();
        java.lang.String str16 = atmosphereConfig9.getInitParameter("hi!", "");
        boolean boolean17 = atmosphereConfig9.isSessionTimeoutRemovalAllowed();
        boolean boolean20 = atmosphereConfig9.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig21.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        int int29 = atmosphereConfig25.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig25.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList32, startupHookArray31);
        atmosphereConfig25.startUpHook = startupHookList32;
        atmosphereConfig21.startUpHook = startupHookList32;
        atmosphereConfig9.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList32);
        atmosphereConfig0.startUpHook = startupHookList32;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig0.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.getproperties();
        atmosphereConfig40.setproperties(strMap54);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = atmosphereConfig40.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.throwExceptionOnCloned = false;
        atmosphereConfig57.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig57.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig57.initComplete();
        atmosphereConfig57.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig40.populate(atmosphereConfig57);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig67.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList68;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(startupHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(atmosphereFramework56);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
    }

    @Test
    public void test09234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09234");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.setframework(atmosphereFramework10);
        java.lang.String str14 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider15 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test09235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09235");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        boolean boolean12 = atmosphereConfig6.throwExceptionOnCloned;
        boolean boolean15 = atmosphereConfig6.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig6.shutdownHooks;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig6.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig21.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26, startupHookArray25);
        atmosphereConfig21.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig40.setframework(atmosphereFramework41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig40.getproperties();
        atmosphereConfig29.setproperties(strMap43);
        atmosphereConfig21.setproperties(strMap43);
        atmosphereConfig6.setproperties(strMap43);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig6.getproperties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(startupHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test09236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09236");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig18.setframework(atmosphereFramework19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig18.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig4.shutdownHooks = shutdownHookList22;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig4.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        int int29 = atmosphereConfig25.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig25.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList32, startupHookArray31);
        atmosphereConfig25.startUpHook = startupHookList32;
        org.slf4j.Logger logger35 = atmosphereConfig25.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig25.destroy();
        atmosphereConfig25.supportSession = true;
        atmosphereConfig25.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        boolean boolean43 = atmosphereConfig41.throwExceptionOnCloned;
        atmosphereConfig41.destroy();
        atmosphereConfig41.initComplete();
        atmosphereConfig41.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig41.framework();
        atmosphereConfig41.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig25.populate(atmosphereConfig41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig4.populate(atmosphereConfig51);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig52.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig54.getAtmosphereHandlerConfig();
        int int58 = atmosphereConfig54.getInitParameter("hi!", (int) (short) 0);
        org.slf4j.Logger logger59 = atmosphereConfig54.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = atmosphereConfig54.shutdownHooks;
        atmosphereConfig52.setshutdownHooks(shutdownHookList60);
        atmosphereConfig52.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(startupHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(logger35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(logger59);
        org.junit.Assert.assertNotNull(shutdownHookList60);
    }

    @Test
    public void test09237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09237");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        boolean boolean14 = atmosphereConfig12.throwExceptionOnCloned;
        atmosphereConfig12.destroy();
        atmosphereConfig12.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.shutdownHook(shutdownHook18);
        atmosphereConfig12.supportSession = true;
        boolean boolean22 = atmosphereConfig12.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig12.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig12.framework = atmosphereFramework24;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig12.properties;
        atmosphereConfig0.properties = strMap26;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig0.shutdownHook(shutdownHook28);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider30 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
    }

    @Test
    public void test09238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09238");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.startupHook(startupHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig20.setframework(atmosphereFramework21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.getproperties();
        atmosphereConfig9.setproperties(strMap23);
        atmosphereConfig0.setproperties(strMap23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig0.framework;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap29 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(atmosphereFramework28);
    }

    @Test
    public void test09239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09239");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        int int11 = atmosphereConfig0.getInitParameter("hi!", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        boolean boolean16 = atmosphereConfig14.throwExceptionOnCloned;
        atmosphereConfig14.destroy();
        atmosphereConfig14.initComplete();
        java.lang.String str21 = atmosphereConfig14.getInitParameter("hi!", "");
        boolean boolean22 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        java.lang.String str24 = atmosphereConfig14.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        int int29 = atmosphereConfig25.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig25.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig25.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig37.shutdownHook(shutdownHook38);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig37.atmosphereHandlerConfig;
        boolean boolean41 = atmosphereConfig37.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig37.getshutdownHooks();
        atmosphereConfig25.setshutdownHooks(shutdownHookList42);
        atmosphereConfig14.setshutdownHooks(shutdownHookList42);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig14.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList45);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig0.shutdownHook(shutdownHook47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
    }

    @Test
    public void test09240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09240");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        boolean boolean7 = atmosphereConfig6.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig6.setframework(atmosphereFramework8);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test09241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09241");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.getframework();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig11.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig11.shutdownHook(shutdownHook15);
        boolean boolean17 = atmosphereConfig11.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09242");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        atmosphereConfig0.setproperties(strMap18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        int int25 = atmosphereConfig21.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig21.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig21.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig29.properties;
        atmosphereConfig21.setproperties(strMap31);
        boolean boolean35 = atmosphereConfig21.getInitParameter("hi!", true);
        atmosphereConfig21.setSupportSession(true);
        boolean boolean40 = atmosphereConfig21.getInitParameter("hi!", true);
        boolean boolean41 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig46.shutdownHook(shutdownHook47);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig46.getstartUpHook();
        atmosphereConfig46.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig46.startupHook(startupHook51);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig52.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList53;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig21.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig60.shutdownHook(shutdownHook61);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig60.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig60.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList64;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig0.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = null;
        atmosphereConfig0.setframework(atmosphereFramework67);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean71 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework72 = null;
        atmosphereConfig0.framework = atmosphereFramework72;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig75.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig75.getshutdownHooks();
        boolean boolean80 = atmosphereConfig75.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList82 = atmosphereConfig81.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig81.getshutdownHooks();
        atmosphereConfig81.setThrowExceptionOnCloned(false);
        java.lang.String str87 = atmosphereConfig81.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = atmosphereConfig81.properties;
        atmosphereConfig75.setproperties(strMap88);
        atmosphereConfig74.properties = strMap88;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList91 = atmosphereConfig74.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList91);
        boolean boolean93 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertNotNull(shutdownHookList77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList82);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(shutdownHookList91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test09243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09243");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        boolean boolean10 = atmosphereConfig8.throwExceptionOnCloned;
        atmosphereConfig8.destroy();
        atmosphereConfig8.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig8.framework = atmosphereFramework13;
        int int17 = atmosphereConfig8.getInitParameter("hi!", (int) '#');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig8.framework;
        boolean boolean19 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig20.getshutdownHooks();
        boolean boolean25 = atmosphereConfig20.getInitParameter("", true);
        boolean boolean26 = atmosphereConfig20.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig20.getstartUpHook();
        atmosphereConfig8.startUpHook = startupHookList27;
        atmosphereConfig0.startUpHook = startupHookList27;
        java.lang.String str32 = atmosphereConfig0.getInitParameter("", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig0.shutdownHook(shutdownHook34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
    }

    @Test
    public void test09244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09244");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(false);
        boolean boolean15 = atmosphereConfig0.getInitParameter("hi!", false);
        atmosphereConfig0.destroy();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory17 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09245");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        int int18 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig14.supportSession = false;
        atmosphereConfig14.setSupportSession(false);
        boolean boolean23 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig14.properties;
        org.slf4j.Logger logger25 = atmosphereConfig14.getlogger();
        boolean boolean26 = atmosphereConfig14.supportSession;
        atmosphereConfig14.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig14.getproperties();
        atmosphereConfig0.setproperties(strMap29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(logger25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test09246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09246");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig0.framework = atmosphereFramework11;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test09247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09247");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = null;
        atmosphereConfig6.setstartUpHook(startupHookList12);
        java.lang.String str16 = atmosphereConfig6.getInitParameter("", "hi!");
        java.lang.String str18 = atmosphereConfig6.getInitParameter("hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test09248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09248");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.getshutdownHooks();
        atmosphereConfig6.shutdownHooks = shutdownHookList12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig6.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig16.getshutdownHooks();
        boolean boolean21 = atmosphereConfig16.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig22.getshutdownHooks();
        atmosphereConfig22.setThrowExceptionOnCloned(false);
        java.lang.String str28 = atmosphereConfig22.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.properties;
        atmosphereConfig16.setproperties(strMap29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.properties;
        atmosphereConfig6.properties = strMap31;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig6.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig6.getstartUpHook();
        java.lang.String str36 = atmosphereConfig6.getInitParameter("hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test09249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09249");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        boolean boolean26 = atmosphereConfig24.throwExceptionOnCloned;
        atmosphereConfig24.destroy();
        atmosphereConfig24.initComplete();
        java.lang.String str31 = atmosphereConfig24.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig36.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        atmosphereConfig38.setframework(atmosphereFramework39);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig38.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig38.shutdownHooks;
        atmosphereConfig24.shutdownHooks = shutdownHookList42;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig24.shutdownHook(shutdownHook44);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig24.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig24.getproperties();
        atmosphereConfig0.setproperties(strMap47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig0.startupHook(startupHook49);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNull(atmosphereFramework51);
    }

    @Test
    public void test09250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09250");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig14.setframework(atmosphereFramework15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig14.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig14.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList18;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig0.framework = atmosphereFramework22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        boolean boolean26 = atmosphereConfig24.throwExceptionOnCloned;
        atmosphereConfig24.destroy();
        atmosphereConfig24.initComplete();
        java.lang.String str31 = atmosphereConfig24.getInitParameter("hi!", "");
        boolean boolean32 = atmosphereConfig24.isSessionTimeoutRemovalAllowed();
        java.lang.String str34 = atmosphereConfig24.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        int int39 = atmosphereConfig35.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig35.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig35.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig47.shutdownHook(shutdownHook48);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig47.atmosphereHandlerConfig;
        boolean boolean51 = atmosphereConfig47.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig47.getshutdownHooks();
        atmosphereConfig35.setshutdownHooks(shutdownHookList52);
        atmosphereConfig24.setshutdownHooks(shutdownHookList52);
        boolean boolean55 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig24.properties;
        atmosphereConfig0.properties = strMap56;
        boolean boolean58 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig59.getAtmosphereHandlerConfig();
        int int63 = atmosphereConfig59.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = atmosphereConfig59.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig59.startupHook(startupHook65);
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig66.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig66.getframework();
        atmosphereConfig66.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList71 = atmosphereConfig66.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList71);
        java.lang.String str75 = atmosphereConfig0.getInitParameter("hi!", "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(atmosphereFramework42);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(atmosphereFramework64);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertNotNull(shutdownHookList71);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
    }

    @Test
    public void test09251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09251");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList16, startupHookArray15);
        atmosphereConfig11.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig28.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig30.setframework(atmosphereFramework31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig30.getproperties();
        atmosphereConfig19.setproperties(strMap33);
        atmosphereConfig11.setproperties(strMap33);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig11.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig37.startUpHook;
        atmosphereConfig11.startUpHook = startupHookList39;
        boolean boolean41 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig0.populate(atmosphereConfig11);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster43 = atmosphereConfig42.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(startupHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
    }

    @Test
    public void test09252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09252");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig16.getlogger();
        boolean boolean18 = atmosphereConfig16.isSupportSession();
        boolean boolean19 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig20.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig4.startUpHook = startupHookList25;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig4.framework();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(atmosphereFramework30);
    }

    @Test
    public void test09253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09253");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig10.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray14 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15, startupHookArray14);
        atmosphereConfig10.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15);
        atmosphereConfig6.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig6.framework();
        atmosphereConfig6.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        int int26 = atmosphereConfig22.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig22.supportSession = false;
        atmosphereConfig22.setSupportSession(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig22.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig6.populate(atmosphereConfig22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        boolean boolean35 = atmosphereConfig33.throwExceptionOnCloned;
        atmosphereConfig33.destroy();
        atmosphereConfig33.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig33.framework = atmosphereFramework38;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig33.framework = atmosphereFramework40;
        boolean boolean44 = atmosphereConfig33.getInitParameter("hi!", true);
        atmosphereConfig33.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig33.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig33.startUpHook;
        atmosphereConfig6.setstartUpHook(startupHookList48);
        atmosphereConfig6.throwExceptionOnCloned = false;
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        atmosphereConfig6.framework = atmosphereFramework53;
        boolean boolean55 = atmosphereConfig6.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = atmosphereConfig6.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(startupHookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(startupHookList56);
    }

    @Test
    public void test09254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09254");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean13 = atmosphereConfig0.isSupportSession();
        boolean boolean14 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09255");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.shutdownHook(shutdownHook12);
        atmosphereConfig13.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig13.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNull(atmosphereFramework16);
    }

    @Test
    public void test09256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09256");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig0.startupHook(startupHook39);
        boolean boolean41 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig0.shutdownHook(shutdownHook42);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(startupHookList44);
    }

    @Test
    public void test09257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09257");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.setframework(atmosphereFramework10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.properties;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test09258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09258");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig16.getlogger();
        boolean boolean18 = atmosphereConfig16.isSupportSession();
        boolean boolean19 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig20.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig4.startUpHook = startupHookList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig30.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig34.getshutdownHooks();
        atmosphereConfig34.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig39.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig39.getshutdownHooks();
        atmosphereConfig34.setshutdownHooks(shutdownHookList41);
        atmosphereConfig4.shutdownHooks = shutdownHookList41;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        boolean boolean46 = atmosphereConfig44.throwExceptionOnCloned;
        atmosphereConfig44.destroy();
        atmosphereConfig44.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        atmosphereConfig44.framework = atmosphereFramework49;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig44.framework = atmosphereFramework51;
        boolean boolean55 = atmosphereConfig44.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = atmosphereConfig44.getstartUpHook();
        atmosphereConfig4.startUpHook = startupHookList56;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig4.atmosphereHandlerConfig;
        org.slf4j.Logger logger59 = atmosphereConfig4.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig4.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig4.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = null;
        atmosphereConfig4.framework = atmosphereFramework62;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = null;
        atmosphereConfig4.setframework(atmosphereFramework64);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(startupHookList56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
        org.junit.Assert.assertNotNull(logger59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNull(atmosphereFramework61);
    }

    @Test
    public void test09259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09259");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = null;
        atmosphereConfig0.framework = atmosphereFramework2;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(startupHookList8);
    }

    @Test
    public void test09260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09260");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.setSupportSession(true);
        boolean boolean16 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig0.shutdownHooks;
        java.lang.Class<?> wildcardClass18 = shutdownHookList17.getClass();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test09261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09261");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList25;
        boolean boolean27 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.startupHook(startupHook33);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
    }

    @Test
    public void test09262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09262");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test09263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09263");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig4.supportSession;
        boolean boolean13 = atmosphereConfig4.throwExceptionOnCloned;
        boolean boolean14 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig4.framework();
        atmosphereConfig4.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.shutdownHook(shutdownHook24);
        atmosphereConfig25.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig25.startupHook(startupHook27);
        java.lang.String str30 = atmosphereConfig28.getInitParameter("");
        atmosphereConfig28.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig28.getshutdownHooks();
        atmosphereConfig28.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig4.populate(atmosphereConfig28);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig35.properties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test09264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09264");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        org.slf4j.Logger logger19 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig0.setframework(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.shutdownHook(shutdownHook22);
        boolean boolean24 = atmosphereConfig23.isThrowExceptionOnCloned();
        java.lang.String str26 = atmosphereConfig23.getInitParameter("");
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test09265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09265");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        boolean boolean8 = atmosphereConfig4.supportSession;
        boolean boolean9 = atmosphereConfig4.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig4.properties;
        boolean boolean11 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.properties;
        atmosphereConfig4.setproperties(strMap15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap17 = atmosphereConfig4.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test09266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09266");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig4.initComplete();
        int int11 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.getshutdownHooks();
        boolean boolean15 = atmosphereConfig12.isSupportSession();
        boolean boolean16 = atmosphereConfig12.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig4.populate(atmosphereConfig12);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig4.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        int int24 = atmosphereConfig20.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig20.supportSession = false;
        boolean boolean27 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        atmosphereConfig20.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        boolean boolean31 = atmosphereConfig29.throwExceptionOnCloned;
        atmosphereConfig29.destroy();
        atmosphereConfig29.initComplete();
        java.lang.String str36 = atmosphereConfig29.getInitParameter("hi!", "");
        boolean boolean37 = atmosphereConfig29.isSessionTimeoutRemovalAllowed();
        boolean boolean40 = atmosphereConfig29.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        atmosphereConfig41.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        int int49 = atmosphereConfig45.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = atmosphereConfig45.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray51 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList52, startupHookArray51);
        atmosphereConfig45.startUpHook = startupHookList52;
        atmosphereConfig41.startUpHook = startupHookList52;
        atmosphereConfig29.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList52);
        atmosphereConfig20.startUpHook = startupHookList52;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig20.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList58);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig60.getAtmosphereHandlerConfig();
        boolean boolean62 = atmosphereConfig60.throwExceptionOnCloned;
        boolean boolean63 = atmosphereConfig60.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig60.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = atmosphereConfig60.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig4.populate(atmosphereConfig60);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration67 = atmosphereConfig66.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(atmosphereFramework50);
        org.junit.Assert.assertNotNull(startupHookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shutdownHookList64);
        org.junit.Assert.assertNull(atmosphereFramework65);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
    }

    @Test
    public void test09267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09267");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        int int12 = atmosphereConfig0.getInitParameter("hi!", 52);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
    }

    @Test
    public void test09268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09268");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.shutdownHook(shutdownHook16);
        atmosphereConfig15.setThrowExceptionOnCloned(false);
        atmosphereConfig15.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        org.slf4j.Logger logger28 = atmosphereConfig27.getlogger();
        boolean boolean29 = atmosphereConfig27.isSupportSession();
        boolean boolean30 = atmosphereConfig27.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig31.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36, startupHookArray35);
        atmosphereConfig31.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        atmosphereConfig27.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        atmosphereConfig15.startUpHook = startupHookList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig41.getshutdownHooks();
        atmosphereConfig15.setshutdownHooks(shutdownHookList43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.getshutdownHooks();
        atmosphereConfig45.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig50.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig50.getshutdownHooks();
        atmosphereConfig45.setshutdownHooks(shutdownHookList52);
        atmosphereConfig15.shutdownHooks = shutdownHookList52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        int int59 = atmosphereConfig55.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig55.supportSession = false;
        boolean boolean62 = atmosphereConfig55.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig63.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig63.getshutdownHooks();
        atmosphereConfig55.setshutdownHooks(shutdownHookList65);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig67.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig67.properties();
        atmosphereConfig55.properties = strMap70;
        atmosphereConfig15.setproperties(strMap70);
        atmosphereConfig8.properties = strMap70;
        boolean boolean76 = atmosphereConfig8.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList77 = atmosphereConfig8.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig4.populate(atmosphereConfig8);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig4.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig4.shutdownHook(shutdownHook80);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList82 = atmosphereConfig4.startUpHook;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        boolean boolean85 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(startupHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(startupHookList77);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertNotNull(startupHookList82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test09269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09269");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig16.getlogger();
        boolean boolean18 = atmosphereConfig16.isSupportSession();
        boolean boolean19 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig20.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig4.startUpHook = startupHookList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig30.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig34.getshutdownHooks();
        atmosphereConfig34.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig39.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig39.getshutdownHooks();
        atmosphereConfig34.setshutdownHooks(shutdownHookList41);
        atmosphereConfig4.shutdownHooks = shutdownHookList41;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        boolean boolean46 = atmosphereConfig44.throwExceptionOnCloned;
        atmosphereConfig44.destroy();
        atmosphereConfig44.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        atmosphereConfig44.framework = atmosphereFramework49;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig44.framework = atmosphereFramework51;
        boolean boolean55 = atmosphereConfig44.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = atmosphereConfig44.getstartUpHook();
        atmosphereConfig4.startUpHook = startupHookList56;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig4.atmosphereHandlerConfig;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(startupHookList56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
    }

    @Test
    public void test09270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09270");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        int int14 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig10.supportSession = false;
        atmosphereConfig10.setSupportSession(false);
        java.lang.String str20 = atmosphereConfig10.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig9.populate(atmosphereConfig10);
        java.lang.String str24 = atmosphereConfig21.getInitParameter("hi!", "");
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig21.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory28 = atmosphereConfig21.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
    }

    @Test
    public void test09271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09271");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        org.slf4j.Logger logger15 = atmosphereConfig14.getlogger();
        boolean boolean16 = atmosphereConfig14.isSupportSession();
        boolean boolean17 = atmosphereConfig14.isThrowExceptionOnCloned();
        org.slf4j.Logger logger18 = atmosphereConfig14.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig14.properties();
        atmosphereConfig14.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.populate(atmosphereConfig14);
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig0.framework();
        org.slf4j.Logger logger25 = atmosphereConfig0.getlogger();
        int int28 = atmosphereConfig0.getInitParameter("hi!", 35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(logger25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 35 + "'", int28 == 35);
    }

    @Test
    public void test09272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09272");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setSupportSession(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test09273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09273");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookList10);
    }

    @Test
    public void test09274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09274");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig8.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.shutdownHook(shutdownHook23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig24.getproperties();
        atmosphereConfig0.properties = strMap25;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean29 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig0.shutdownHooks;
        boolean boolean33 = atmosphereConfig0.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        boolean boolean36 = atmosphereConfig34.throwExceptionOnCloned;
        atmosphereConfig34.destroy();
        atmosphereConfig34.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig34.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.startupHook(startupHook42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        int int48 = atmosphereConfig44.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig44.supportSession = false;
        atmosphereConfig44.setSupportSession(false);
        java.lang.String str54 = atmosphereConfig44.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig43.populate(atmosphereConfig44);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig44.startupHook(startupHook56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig0.populate(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
    }

    @Test
    public void test09275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09275");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig3.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        atmosphereConfig7.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.shutdownHook(shutdownHook18);
        org.slf4j.Logger logger20 = atmosphereConfig19.getlogger();
        boolean boolean21 = atmosphereConfig19.isSupportSession();
        boolean boolean22 = atmosphereConfig19.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig23.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig23.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig7.startUpHook = startupHookList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig7.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig37.getshutdownHooks();
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig42.getshutdownHooks();
        atmosphereConfig37.setshutdownHooks(shutdownHookList44);
        atmosphereConfig7.shutdownHooks = shutdownHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        int int51 = atmosphereConfig47.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig47.supportSession = false;
        boolean boolean54 = atmosphereConfig47.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig55.getshutdownHooks();
        atmosphereConfig47.setshutdownHooks(shutdownHookList57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.properties();
        atmosphereConfig47.properties = strMap62;
        atmosphereConfig7.setproperties(strMap62);
        atmosphereConfig0.properties = strMap62;
        boolean boolean68 = atmosphereConfig0.getInitParameter("", false);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = true;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster74 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(atmosphereFramework71);
    }

    @Test
    public void test09276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09276");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
    }

    @Test
    public void test09277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09277");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        int int14 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig10.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList17, startupHookArray16);
        atmosphereConfig10.startUpHook = startupHookList17;
        org.slf4j.Logger logger20 = atmosphereConfig10.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig10.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig10.startupHook(startupHook22);
        boolean boolean24 = atmosphereConfig23.throwExceptionOnCloned;
        boolean boolean25 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig4.populate(atmosphereConfig23);
        atmosphereConfig26.destroy();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(startupHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
    }

    @Test
    public void test09278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09278");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean8 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        atmosphereConfig11.throwExceptionOnCloned = true;
        boolean boolean15 = atmosphereConfig11.isSupportSession();
        boolean boolean16 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        boolean boolean17 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig22.atmosphereHandlerConfig;
        boolean boolean26 = atmosphereConfig22.supportSession;
        boolean boolean27 = atmosphereConfig22.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig22.properties;
        atmosphereConfig11.setproperties(strMap28);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList30);
        int int34 = atmosphereConfig0.getInitParameter("", (int) '4');
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.shutdownHook(shutdownHook35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig36.properties();
        boolean boolean38 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        java.lang.String str40 = atmosphereConfig36.getInitParameter("hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test09279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09279");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        boolean boolean13 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.populate(atmosphereConfig8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig8.framework = atmosphereFramework15;
        atmosphereConfig8.setThrowExceptionOnCloned(true);
        atmosphereConfig8.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig8.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        org.slf4j.Logger logger28 = atmosphereConfig27.getlogger();
        boolean boolean29 = atmosphereConfig27.isSupportSession();
        boolean boolean30 = atmosphereConfig27.isThrowExceptionOnCloned();
        org.slf4j.Logger logger31 = atmosphereConfig27.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig27.properties();
        atmosphereConfig27.initComplete();
        boolean boolean34 = atmosphereConfig27.sessionTimeoutRemovalAllowed;
        atmosphereConfig27.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        boolean boolean39 = atmosphereConfig37.throwExceptionOnCloned;
        atmosphereConfig37.destroy();
        atmosphereConfig37.initComplete();
        java.lang.String str44 = atmosphereConfig37.getInitParameter("hi!", "");
        boolean boolean45 = atmosphereConfig37.isSessionTimeoutRemovalAllowed();
        java.lang.String str47 = atmosphereConfig37.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList49, shutdownHookArray48);
        atmosphereConfig37.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig52.getAtmosphereHandlerConfig();
        boolean boolean54 = atmosphereConfig52.throwExceptionOnCloned;
        atmosphereConfig52.destroy();
        atmosphereConfig52.initComplete();
        java.lang.String str59 = atmosphereConfig52.getInitParameter("hi!", "");
        boolean boolean60 = atmosphereConfig52.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = atmosphereConfig52.shutdownHooks;
        atmosphereConfig37.shutdownHooks = shutdownHookList61;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig63.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig65.getAtmosphereHandlerConfig();
        int int69 = atmosphereConfig65.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = atmosphereConfig65.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig65.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig65.getproperties();
        atmosphereConfig63.setproperties(strMap72);
        atmosphereConfig37.setproperties(strMap72);
        atmosphereConfig27.properties = strMap72;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList77 = atmosphereConfig76.getAtmosphereHandlerConfig();
        boolean boolean78 = atmosphereConfig76.throwExceptionOnCloned;
        atmosphereConfig76.destroy();
        atmosphereConfig76.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig76.shutdownHook(shutdownHook82);
        atmosphereConfig76.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook85 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = atmosphereConfig76.shutdownHook(shutdownHook85);
        atmosphereConfig86.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework89 = null;
        atmosphereConfig86.setframework(atmosphereFramework89);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList91 = atmosphereConfig86.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList92 = atmosphereConfig86.getshutdownHooks();
        atmosphereConfig27.setshutdownHooks(shutdownHookList92);
        atmosphereConfig8.shutdownHooks = shutdownHookList92;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(shutdownHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(shutdownHookList61);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(atmosphereFramework70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(atmosphereConfig86);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList91);
        org.junit.Assert.assertNotNull(shutdownHookList92);
    }

    @Test
    public void test09280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09280");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        atmosphereConfig4.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig7.getshutdownHooks();
        boolean boolean12 = atmosphereConfig7.getInitParameter("", true);
        boolean boolean13 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig14.throwExceptionOnCloned = true;
        boolean boolean18 = atmosphereConfig14.isSupportSession();
        boolean boolean19 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        boolean boolean20 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        boolean boolean21 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig14.shutdownHooks;
        atmosphereConfig14.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig14.properties();
        atmosphereConfig7.setproperties(strMap25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig27.setframework(atmosphereFramework28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig27.properties;
        atmosphereConfig7.setproperties(strMap30);
        atmosphereConfig4.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig4.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig4.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
    }

    @Test
    public void test09281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09281");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig14.setframework(atmosphereFramework15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig14.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig14.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList18;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.startupHook(startupHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test09282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09282");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        boolean boolean8 = atmosphereConfig6.throwExceptionOnCloned;
        atmosphereConfig6.destroy();
        atmosphereConfig6.initComplete();
        java.lang.String str13 = atmosphereConfig6.getInitParameter("hi!", "");
        boolean boolean14 = atmosphereConfig6.isSupportSession();
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig6.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig6.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig0.populate(atmosphereConfig6);
        boolean boolean20 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(startupHookList21);
    }

    @Test
    public void test09283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09283");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        int int20 = atmosphereConfig16.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig21.throwExceptionOnCloned = true;
        boolean boolean25 = atmosphereConfig21.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig31.startupHook(startupHook32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig33.setframework(atmosphereFramework34);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig33.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig21.setshutdownHooks(shutdownHookList37);
        atmosphereConfig16.setshutdownHooks(shutdownHookList37);
        atmosphereConfig0.setshutdownHooks(shutdownHookList37);
        atmosphereConfig0.setSupportSession(true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory43 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
    }

    @Test
    public void test09284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09284");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean10 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties();
        boolean boolean12 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test09285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09285");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig4.startupHook(startupHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig4.shutdownHooks;
        int int13 = atmosphereConfig4.getInitParameter("", (int) '#');
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 35 + "'", int13 == 35);
    }

    @Test
    public void test09286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09286");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean10 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        atmosphereConfig11.throwExceptionOnCloned = true;
        boolean boolean15 = atmosphereConfig11.isSupportSession();
        boolean boolean16 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        boolean boolean17 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig22.atmosphereHandlerConfig;
        boolean boolean26 = atmosphereConfig22.supportSession;
        boolean boolean27 = atmosphereConfig22.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig22.properties;
        atmosphereConfig11.setproperties(strMap28);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig11.startUpHook;
        boolean boolean31 = atmosphereConfig11.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.getproperties();
        atmosphereConfig40.setproperties(strMap54);
        atmosphereConfig32.setproperties(strMap54);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig58.startUpHook;
        atmosphereConfig32.startUpHook = startupHookList60;
        atmosphereConfig11.setstartUpHook(startupHookList60);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig11.shutdownHook(shutdownHook63);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap65);
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = atmosphereConfig0.framework;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(atmosphereFramework69);
    }

    @Test
    public void test09287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09287");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig5.throwExceptionOnCloned = true;
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig17.setframework(atmosphereFramework18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig17.getshutdownHooks();
        atmosphereConfig5.setshutdownHooks(shutdownHookList21);
        atmosphereConfig0.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig0.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig27.getshutdownHooks();
        boolean boolean32 = atmosphereConfig27.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig33.setThrowExceptionOnCloned(false);
        java.lang.String str39 = atmosphereConfig33.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig33.properties;
        atmosphereConfig27.setproperties(strMap40);
        atmosphereConfig26.properties = strMap40;
        atmosphereConfig25.properties = strMap40;
        atmosphereConfig25.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig50.shutdownHook(shutdownHook51);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig50.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig50.startupHook(startupHook54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        atmosphereConfig60.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig63.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig63.shutdownHook(shutdownHook66);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig67.startupHook(startupHook68);
        boolean boolean70 = atmosphereConfig67.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = atmosphereConfig67.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList73 = atmosphereConfig72.getAtmosphereHandlerConfig();
        boolean boolean74 = atmosphereConfig72.throwExceptionOnCloned;
        atmosphereConfig72.setThrowExceptionOnCloned(false);
        atmosphereConfig72.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = atmosphereConfig72.shutdownHooks;
        atmosphereConfig67.setshutdownHooks(shutdownHookList79);
        atmosphereConfig60.shutdownHooks = shutdownHookList79;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList82 = atmosphereConfig60.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = atmosphereConfig60.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList84 = atmosphereConfig60.getstartUpHook();
        atmosphereConfig50.startUpHook = startupHookList84;
        atmosphereConfig25.setstartUpHook(startupHookList84);
        boolean boolean87 = atmosphereConfig25.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(atmosphereFramework71);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(shutdownHookList79);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(startupHookList84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test09288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09288");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig5.throwExceptionOnCloned = true;
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig17.setframework(atmosphereFramework18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig17.getshutdownHooks();
        atmosphereConfig5.setshutdownHooks(shutdownHookList21);
        atmosphereConfig0.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig24.framework = atmosphereFramework26;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig24.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig24.setframework(atmosphereFramework29);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig24.framework;
        atmosphereConfig24.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig24.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList34;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
    }

    @Test
    public void test09289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09289");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = atmosphereConfig0.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.slf4j.Logger logger5 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig4.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig4.startUpHook;
        boolean boolean9 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test09290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09290");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.getproperties();
        atmosphereConfig40.setproperties(strMap54);
        atmosphereConfig32.setproperties(strMap54);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig58.startUpHook;
        atmosphereConfig32.startUpHook = startupHookList60;
        boolean boolean62 = atmosphereConfig32.supportSession;
        boolean boolean63 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig0.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig32.startupHook(startupHook65);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig32.shutdownHook(shutdownHook67);
        int int71 = atmosphereConfig68.getInitParameter("hi!", (int) 'a');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = atmosphereConfig68.startUpHook;
        java.lang.String str74 = atmosphereConfig68.getInitParameter("");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 97 + "'", int71 == 97);
        org.junit.Assert.assertNotNull(startupHookList72);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test09291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09291");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig13.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList20, startupHookArray19);
        atmosphereConfig13.startUpHook = startupHookList20;
        org.slf4j.Logger logger23 = atmosphereConfig13.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig13.getshutdownHooks();
        atmosphereConfig13.destroy();
        atmosphereConfig13.supportSession = true;
        atmosphereConfig13.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig40.setframework(atmosphereFramework41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig40.getproperties();
        atmosphereConfig29.setproperties(strMap43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig29.framework;
        boolean boolean46 = atmosphereConfig29.supportSession;
        atmosphereConfig29.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig13.populate(atmosphereConfig29);
        atmosphereConfig29.destroy();
        atmosphereConfig29.setThrowExceptionOnCloned(true);
        java.lang.String str54 = atmosphereConfig29.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        int int59 = atmosphereConfig55.getInitParameter("hi!", (int) (short) 0);
        boolean boolean60 = atmosphereConfig55.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig55.shutdownHook(shutdownHook61);
        atmosphereConfig62.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig65.getAtmosphereHandlerConfig();
        boolean boolean67 = atmosphereConfig65.throwExceptionOnCloned;
        atmosphereConfig65.destroy();
        atmosphereConfig65.initComplete();
        java.lang.String str72 = atmosphereConfig65.getInitParameter("hi!", "");
        boolean boolean73 = atmosphereConfig65.isSessionTimeoutRemovalAllowed();
        java.lang.String str75 = atmosphereConfig65.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray76 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList77, shutdownHookArray76);
        atmosphereConfig65.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList77);
        atmosphereConfig62.shutdownHooks = shutdownHookList77;
        atmosphereConfig29.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList77);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList77);
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(startupHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(shutdownHookArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strMap85);
    }

    @Test
    public void test09292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09292");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.startupHook(startupHook12);
        boolean boolean14 = atmosphereConfig13.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig13.framework;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration16 = atmosphereConfig13.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(atmosphereFramework15);
    }

    @Test
    public void test09293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09293");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig18.setframework(atmosphereFramework19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig18.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig4.shutdownHooks = shutdownHookList22;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig4.throwExceptionOnCloned = true;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext27 = atmosphereConfig4.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(shutdownHookList24);
    }

    @Test
    public void test09294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09294");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig8.supportSession = false;
        boolean boolean15 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        atmosphereConfig8.destroy();
        java.lang.String str18 = atmosphereConfig8.getInitParameter("");
        atmosphereConfig8.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig8.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        boolean boolean26 = atmosphereConfig24.throwExceptionOnCloned;
        atmosphereConfig24.destroy();
        atmosphereConfig24.initComplete();
        java.lang.String str31 = atmosphereConfig24.getInitParameter("hi!", "");
        boolean boolean32 = atmosphereConfig24.isSupportSession();
        atmosphereConfig24.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig24.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig24.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList36;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        int int45 = atmosphereConfig41.getInitParameter("hi!", (int) (short) 0);
        boolean boolean46 = atmosphereConfig41.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig41.shutdownHook(shutdownHook47);
        atmosphereConfig48.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig51.throwExceptionOnCloned;
        atmosphereConfig51.destroy();
        atmosphereConfig51.initComplete();
        java.lang.String str58 = atmosphereConfig51.getInitParameter("hi!", "");
        boolean boolean59 = atmosphereConfig51.isSessionTimeoutRemovalAllowed();
        java.lang.String str61 = atmosphereConfig51.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63, shutdownHookArray62);
        atmosphereConfig51.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63);
        atmosphereConfig48.shutdownHooks = shutdownHookList63;
        atmosphereConfig0.shutdownHooks = shutdownHookList63;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        atmosphereConfig0.setframework(atmosphereFramework68);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig70.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig70.shutdownHook(shutdownHook73);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig74.startupHook(startupHook75);
        boolean boolean77 = atmosphereConfig74.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework78 = atmosphereConfig74.getframework();
        boolean boolean79 = atmosphereConfig74.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList81 = atmosphereConfig80.getAtmosphereHandlerConfig();
        boolean boolean82 = atmosphereConfig80.throwExceptionOnCloned;
        atmosphereConfig80.destroy();
        atmosphereConfig80.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework85 = null;
        atmosphereConfig80.framework = atmosphereFramework85;
        java.lang.String str89 = atmosphereConfig80.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList90 = atmosphereConfig80.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList91 = atmosphereConfig80.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList92 = atmosphereConfig80.atmosphereHandlerConfig;
        atmosphereConfig74.atmosphereHandlerConfig = atmosphereHandlerConfigList92;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList92;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(shutdownHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(atmosphereFramework78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList90);
        org.junit.Assert.assertNotNull(shutdownHookList91);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList92);
    }

    @Test
    public void test09295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09295");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        boolean boolean12 = atmosphereConfig6.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig13.throwExceptionOnCloned;
        atmosphereConfig13.destroy();
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig13.shutdownHook(shutdownHook19);
        atmosphereConfig13.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        boolean boolean25 = atmosphereConfig23.throwExceptionOnCloned;
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        boolean boolean28 = atmosphereConfig23.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig23.getproperties();
        atmosphereConfig13.setproperties(strMap29);
        atmosphereConfig6.properties = strMap29;
        boolean boolean34 = atmosphereConfig6.getInitParameter("", false);
        atmosphereConfig6.setThrowExceptionOnCloned(false);
        atmosphereConfig6.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig6.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig6.getAtmosphereHandlerConfig();
        atmosphereConfig6.destroy();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
    }

    @Test
    public void test09296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09296");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.destroy();
        atmosphereConfig10.initComplete();
        java.lang.String str17 = atmosphereConfig10.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig10.startUpHook;
        atmosphereConfig4.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        int int24 = atmosphereConfig20.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig20.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig20.framework();
        org.slf4j.Logger logger28 = atmosphereConfig20.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig4.populate(atmosphereConfig20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig4.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig4.framework = atmosphereFramework33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        boolean boolean37 = atmosphereConfig35.throwExceptionOnCloned;
        atmosphereConfig35.destroy();
        atmosphereConfig35.initComplete();
        java.lang.String str42 = atmosphereConfig35.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig43.getAtmosphereHandlerConfig();
        int int47 = atmosphereConfig43.getInitParameter("hi!", (int) (short) 0);
        boolean boolean48 = atmosphereConfig43.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig35.populate(atmosphereConfig43);
        atmosphereConfig49.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig49.setframework(atmosphereFramework52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig54.getAtmosphereHandlerConfig();
        int int58 = atmosphereConfig54.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig54.supportSession = false;
        atmosphereConfig54.setSupportSession(false);
        boolean boolean63 = atmosphereConfig54.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig54.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = null;
        atmosphereConfig54.properties = strMap65;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = null;
        atmosphereConfig54.framework = atmosphereFramework67;
        atmosphereConfig54.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig71.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig71.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray75 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList76 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList76, startupHookArray75);
        atmosphereConfig71.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList76);
        atmosphereConfig71.sessionTimeoutRemovalAllowed = true;
        boolean boolean81 = atmosphereConfig71.isSessionTimeoutRemovalAllowed();
        java.lang.String str83 = atmosphereConfig71.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework84 = null;
        atmosphereConfig71.framework = atmosphereFramework84;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean87 = atmosphereConfig86.isThrowExceptionOnCloned();
        boolean boolean88 = atmosphereConfig86.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook89 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig90 = atmosphereConfig86.startupHook(startupHook89);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList91 = atmosphereConfig86.getshutdownHooks();
        atmosphereConfig71.shutdownHooks = shutdownHookList91;
        atmosphereConfig54.shutdownHooks = shutdownHookList91;
        atmosphereConfig49.setshutdownHooks(shutdownHookList91);
        atmosphereConfig4.setshutdownHooks(shutdownHookList91);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(startupHookArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig90);
        org.junit.Assert.assertNotNull(shutdownHookList91);
    }

    @Test
    public void test09297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09297");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean40 = atmosphereConfig0.getInitParameter("", true);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig0.properties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strMap41);
    }

    @Test
    public void test09298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09298");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean8 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        org.slf4j.Logger logger11 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(logger11);
        org.junit.Assert.assertNull(atmosphereFramework14);
    }

    @Test
    public void test09299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09299");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig8.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.properties();
        atmosphereConfig0.properties = strMap15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig27.setframework(atmosphereFramework28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig27.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig27.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig27.startUpHook;
        atmosphereConfig17.setstartUpHook(startupHookList32);
        atmosphereConfig0.setstartUpHook(startupHookList32);
        boolean boolean35 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig40.shutdownHook(shutdownHook41);
        org.slf4j.Logger logger43 = atmosphereConfig42.getlogger();
        boolean boolean44 = atmosphereConfig42.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig42.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig47.throwExceptionOnCloned = true;
        boolean boolean51 = atmosphereConfig47.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig57.startupHook(startupHook58);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig59.setframework(atmosphereFramework60);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig59.getshutdownHooks();
        atmosphereConfig47.setshutdownHooks(shutdownHookList63);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig47.properties;
        atmosphereConfig0.setproperties(strMap65);
        boolean boolean67 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList69 = atmosphereConfig68.getAtmosphereHandlerConfig();
        boolean boolean70 = atmosphereConfig68.throwExceptionOnCloned;
        atmosphereConfig68.destroy();
        atmosphereConfig68.initComplete();
        java.lang.String str75 = atmosphereConfig68.getInitParameter("hi!", "");
        boolean boolean76 = atmosphereConfig68.isSessionTimeoutRemovalAllowed();
        java.lang.String str78 = atmosphereConfig68.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray79 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList80 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList80, shutdownHookArray79);
        atmosphereConfig68.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList80);
        int int85 = atmosphereConfig68.getInitParameter("", (int) (short) -1);
        atmosphereConfig68.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = atmosphereConfig68.getproperties();
        atmosphereConfig0.setproperties(strMap88);
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook92 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig93 = atmosphereConfig0.shutdownHook(shutdownHook92);
        atmosphereConfig0.supportSession = true;
        boolean boolean96 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(logger43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(shutdownHookArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(atmosphereConfig93);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test09300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09300");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        int int8 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig4.startUpHook = startupHookList11;
        atmosphereConfig0.startUpHook = startupHookList11;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig17.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig17.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig17.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(startupHookList21);
    }

    @Test
    public void test09301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09301");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig3.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        atmosphereConfig7.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.shutdownHook(shutdownHook18);
        org.slf4j.Logger logger20 = atmosphereConfig19.getlogger();
        boolean boolean21 = atmosphereConfig19.isSupportSession();
        boolean boolean22 = atmosphereConfig19.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig23.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig23.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig7.startUpHook = startupHookList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig7.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig37.getshutdownHooks();
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig42.getshutdownHooks();
        atmosphereConfig37.setshutdownHooks(shutdownHookList44);
        atmosphereConfig7.shutdownHooks = shutdownHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        int int51 = atmosphereConfig47.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig47.supportSession = false;
        boolean boolean54 = atmosphereConfig47.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig55.getshutdownHooks();
        atmosphereConfig47.setshutdownHooks(shutdownHookList57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.properties();
        atmosphereConfig47.properties = strMap62;
        atmosphereConfig7.setproperties(strMap62);
        atmosphereConfig0.properties = strMap62;
        boolean boolean68 = atmosphereConfig0.getInitParameter("", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig0.properties;
        boolean boolean70 = atmosphereConfig0.isSupportSession();
        org.slf4j.Logger logger71 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList72 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.destroy();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(logger71);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList72);
    }

    @Test
    public void test09302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09302");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig8.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.properties();
        atmosphereConfig0.setproperties(strMap15);
        atmosphereConfig0.supportSession = false;
        java.lang.String str20 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean24 = atmosphereConfig0.getInitParameter("", false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test09303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09303");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.destroy();
        atmosphereConfig10.initComplete();
        java.lang.String str17 = atmosphereConfig10.getInitParameter("hi!", "");
        boolean boolean18 = atmosphereConfig10.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        boolean boolean21 = atmosphereConfig19.throwExceptionOnCloned;
        atmosphereConfig19.destroy();
        atmosphereConfig19.initComplete();
        atmosphereConfig19.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig19.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig19.atmosphereHandlerConfig;
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        java.lang.String str30 = atmosphereConfig10.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig35.startupHook(startupHook36);
        org.slf4j.Logger logger38 = atmosphereConfig35.getlogger();
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig35.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig35.startUpHook;
        atmosphereConfig10.startUpHook = startupHookList42;
        atmosphereConfig4.setstartUpHook(startupHookList42);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig45 = atmosphereConfig4.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(logger38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(startupHookList42);
    }

    @Test
    public void test09304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09304");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig0.shutdownHook(shutdownHook32);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig0.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test09305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09305");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.shutdownHook(shutdownHook10);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        atmosphereConfig9.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.shutdownHook(shutdownHook20);
        org.slf4j.Logger logger22 = atmosphereConfig21.getlogger();
        boolean boolean23 = atmosphereConfig21.isSupportSession();
        boolean boolean24 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30, startupHookArray29);
        atmosphereConfig25.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30);
        atmosphereConfig21.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30);
        atmosphereConfig9.startUpHook = startupHookList30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig9.setshutdownHooks(shutdownHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig39.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig39.getshutdownHooks();
        atmosphereConfig39.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig44.getshutdownHooks();
        atmosphereConfig39.setshutdownHooks(shutdownHookList46);
        atmosphereConfig9.shutdownHooks = shutdownHookList46;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig49.getAtmosphereHandlerConfig();
        int int53 = atmosphereConfig49.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig49.supportSession = false;
        boolean boolean56 = atmosphereConfig49.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig57.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = atmosphereConfig57.getshutdownHooks();
        atmosphereConfig49.setshutdownHooks(shutdownHookList59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig61.properties();
        atmosphereConfig49.properties = strMap64;
        atmosphereConfig9.setproperties(strMap64);
        atmosphereConfig0.setproperties(strMap64);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig0.getstartUpHook();
        boolean boolean69 = atmosphereConfig0.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory70 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(startupHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertNotNull(shutdownHookList46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
        org.junit.Assert.assertNotNull(shutdownHookList59);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(startupHookList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test09306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09306");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig13.shutdownHook(shutdownHook14);
        org.slf4j.Logger logger16 = atmosphereConfig15.getlogger();
        boolean boolean17 = atmosphereConfig15.isSupportSession();
        boolean boolean18 = atmosphereConfig15.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24, startupHookArray23);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24);
        atmosphereConfig15.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24);
        atmosphereConfig0.startUpHook = startupHookList24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        boolean boolean31 = atmosphereConfig29.throwExceptionOnCloned;
        atmosphereConfig29.setThrowExceptionOnCloned(false);
        atmosphereConfig29.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig29.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        int int41 = atmosphereConfig37.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig37.supportSession = false;
        boolean boolean44 = atmosphereConfig37.isSessionTimeoutRemovalAllowed();
        atmosphereConfig37.destroy();
        java.lang.String str47 = atmosphereConfig37.getInitParameter("");
        atmosphereConfig37.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig37.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig37.getstartUpHook();
        atmosphereConfig29.startUpHook = startupHookList51;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig53.getAtmosphereHandlerConfig();
        boolean boolean55 = atmosphereConfig53.throwExceptionOnCloned;
        atmosphereConfig53.destroy();
        atmosphereConfig53.initComplete();
        java.lang.String str60 = atmosphereConfig53.getInitParameter("hi!", "");
        boolean boolean61 = atmosphereConfig53.isSupportSession();
        atmosphereConfig53.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig53.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig53.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList65;
        atmosphereConfig29.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig0.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig70.getAtmosphereHandlerConfig();
        boolean boolean72 = atmosphereConfig70.throwExceptionOnCloned;
        atmosphereConfig70.destroy();
        atmosphereConfig70.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig70.shutdownHook(shutdownHook76);
        atmosphereConfig70.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList80 = atmosphereConfig79.getAtmosphereHandlerConfig();
        int int83 = atmosphereConfig79.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework84 = atmosphereConfig79.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = atmosphereConfig79.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = atmosphereConfig79.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig79.getAtmosphereHandlerConfig();
        atmosphereConfig70.atmosphereHandlerConfig = atmosphereHandlerConfigList87;
        atmosphereConfig70.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig90 = atmosphereConfig0.populate(atmosphereConfig70);
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = null;
        atmosphereConfig90.setproperties(strMap91);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList93 = atmosphereConfig90.atmosphereHandlerConfig;
        java.lang.Class<?> wildcardClass94 = atmosphereConfig90.getClass();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(startupHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(atmosphereFramework84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertNotNull(atmosphereConfig90);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test09307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09307");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        boolean boolean3 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.getframework();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test09308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09308");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig10.throwExceptionOnCloned = true;
        boolean boolean14 = atmosphereConfig10.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        boolean boolean19 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test09309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09309");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties;
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.shutdownHooks;
        boolean boolean12 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(startupHookList13);
    }

    @Test
    public void test09310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09310");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = null;
        atmosphereConfig37.startUpHook = startupHookList38;
        boolean boolean40 = atmosphereConfig37.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        int int45 = atmosphereConfig41.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig41.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig41.startupHook(startupHook47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig41.framework();
        boolean boolean50 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig41.setframework(atmosphereFramework51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig37.populate(atmosphereConfig41);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig41.shutdownHook(shutdownHook54);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig55.shutdownHook(shutdownHook56);
        atmosphereConfig55.supportSession = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
    }

    @Test
    public void test09311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09311");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        boolean boolean6 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig8.supportSession = false;
        boolean boolean15 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig16.getshutdownHooks();
        atmosphereConfig8.setshutdownHooks(shutdownHookList18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        atmosphereConfig8.properties = strMap23;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig25.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.startupHook(startupHook34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig35.setframework(atmosphereFramework36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig35.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig35.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig35.startUpHook;
        atmosphereConfig25.setstartUpHook(startupHookList40);
        atmosphereConfig8.setstartUpHook(startupHookList40);
        boolean boolean43 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig8.framework = atmosphereFramework44;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig8.properties;
        atmosphereConfig0.setproperties(strMap46);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(atmosphereFramework48);
    }

    @Test
    public void test09312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09312");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig14.framework;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap16 = atmosphereConfig14.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNull(atmosphereFramework15);
    }

    @Test
    public void test09313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09313");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList17, startupHookArray16);
        atmosphereConfig12.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig12.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.populate(atmosphereConfig12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig12.getstartUpHook();
        java.lang.Class<?> wildcardClass24 = startupHookList23.getClass();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(startupHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test09314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09314");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig0.startupHook(startupHook18);
        boolean boolean20 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean21 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig0.setframework(atmosphereFramework22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test09315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09315");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig8.supportSession = false;
        boolean boolean15 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        atmosphereConfig8.destroy();
        java.lang.String str18 = atmosphereConfig8.getInitParameter("");
        atmosphereConfig8.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig8.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList22;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.shutdownHook(shutdownHook27);
        boolean boolean29 = atmosphereConfig28.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test09316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09316");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        boolean boolean2 = atmosphereConfig1.isThrowExceptionOnCloned();
        java.lang.String str4 = atmosphereConfig1.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig1.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        int int11 = atmosphereConfig7.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig7.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray13 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList14, startupHookArray13);
        atmosphereConfig7.startUpHook = startupHookList14;
        org.slf4j.Logger logger17 = atmosphereConfig7.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig7.getshutdownHooks();
        atmosphereConfig7.destroy();
        atmosphereConfig7.supportSession = true;
        atmosphereConfig7.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.startupHook(startupHook33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig34.setframework(atmosphereFramework35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig34.getproperties();
        atmosphereConfig23.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig23.framework;
        boolean boolean40 = atmosphereConfig23.supportSession;
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig7.populate(atmosphereConfig23);
        atmosphereConfig23.destroy();
        atmosphereConfig23.setThrowExceptionOnCloned(true);
        java.lang.String str48 = atmosphereConfig23.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig49.getAtmosphereHandlerConfig();
        int int53 = atmosphereConfig49.getInitParameter("hi!", (int) (short) 0);
        boolean boolean54 = atmosphereConfig49.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig49.shutdownHook(shutdownHook55);
        atmosphereConfig56.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig59.getAtmosphereHandlerConfig();
        boolean boolean61 = atmosphereConfig59.throwExceptionOnCloned;
        atmosphereConfig59.destroy();
        atmosphereConfig59.initComplete();
        java.lang.String str66 = atmosphereConfig59.getInitParameter("hi!", "");
        boolean boolean67 = atmosphereConfig59.isSessionTimeoutRemovalAllowed();
        java.lang.String str69 = atmosphereConfig59.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray70 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList71 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList71, shutdownHookArray70);
        atmosphereConfig59.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList71);
        atmosphereConfig56.shutdownHooks = shutdownHookList71;
        atmosphereConfig23.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList71);
        atmosphereConfig1.shutdownHooks = shutdownHookList71;
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig1.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = atmosphereConfig1.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig1.getproperties();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(startupHookArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(shutdownHookArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap79);
    }

    @Test
    public void test09317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09317");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.getproperties();
        atmosphereConfig8.setproperties(strMap22);
        atmosphereConfig0.setproperties(strMap22);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig26.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList28;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        boolean boolean35 = atmosphereConfig33.throwExceptionOnCloned;
        atmosphereConfig33.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig38.getAtmosphereHandlerConfig();
        atmosphereConfig38.throwExceptionOnCloned = true;
        boolean boolean42 = atmosphereConfig38.isSupportSession();
        boolean boolean43 = atmosphereConfig38.isSessionTimeoutRemovalAllowed();
        boolean boolean44 = atmosphereConfig38.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig33.populate(atmosphereConfig38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig50.startupHook(startupHook51);
        org.slf4j.Logger logger53 = atmosphereConfig50.getlogger();
        atmosphereConfig50.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig50.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig50.startUpHook;
        atmosphereConfig38.startUpHook = startupHookList57;
        atmosphereConfig0.startUpHook = startupHookList57;
        boolean boolean62 = atmosphereConfig0.getInitParameter("hi!", false);
        boolean boolean63 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean64 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(logger53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test09318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09318");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.framework = atmosphereFramework14;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig0.getstartUpHook();
        java.lang.String str19 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig0.framework = atmosphereFramework20;
        java.lang.Class<?> wildcardClass22 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test09319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09319");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.shutdownHooks;
        boolean boolean15 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.throwExceptionOnCloned = true;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig22.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList27, startupHookArray26);
        atmosphereConfig22.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList27);
        atmosphereConfig22.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig22.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.populate(atmosphereConfig22);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig0.properties();
        java.lang.Class<?> wildcardClass34 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(startupHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test09320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09320");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.destroy();
        atmosphereConfig11.initComplete();
        java.lang.String str18 = atmosphereConfig11.getInitParameter("hi!", "");
        boolean boolean19 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        boolean boolean22 = atmosphereConfig11.getInitParameter("hi!", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig11.getproperties();
        boolean boolean24 = atmosphereConfig11.isSupportSession();
        atmosphereConfig11.initComplete();
        boolean boolean26 = atmosphereConfig11.isSupportSession();
        atmosphereConfig11.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig11.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList28;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookList28);
    }

    @Test
    public void test09321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09321");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        atmosphereConfig6.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.populate(atmosphereConfig6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        int int15 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig11.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig11.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties;
        atmosphereConfig11.setproperties(strMap21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig23.startUpHook;
        atmosphereConfig11.setstartUpHook(startupHookList25);
        atmosphereConfig11.supportSession = false;
        atmosphereConfig11.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig11.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig10.populate(atmosphereConfig11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig10.startUpHook;
        atmosphereConfig10.setThrowExceptionOnCloned(true);
        boolean boolean36 = atmosphereConfig10.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test09322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09322");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig13.throwExceptionOnCloned;
        atmosphereConfig13.setThrowExceptionOnCloned(false);
        boolean boolean20 = atmosphereConfig13.getInitParameter("", true);
        atmosphereConfig13.sessionTimeoutRemovalAllowed = true;
        boolean boolean23 = atmosphereConfig13.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig13.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig0.populate(atmosphereConfig13);
        boolean boolean27 = atmosphereConfig26.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test09323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09323");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.startupHook(startupHook8);
        atmosphereConfig9.throwExceptionOnCloned = false;
        atmosphereConfig9.throwExceptionOnCloned = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider14 = atmosphereConfig9.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
    }

    @Test
    public void test09324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09324");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        int int15 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig11.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig11.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig23.atmosphereHandlerConfig;
        boolean boolean27 = atmosphereConfig23.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig23.getshutdownHooks();
        atmosphereConfig11.setshutdownHooks(shutdownHookList28);
        atmosphereConfig0.setshutdownHooks(shutdownHookList28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNull(atmosphereFramework31);
    }

    @Test
    public void test09325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09325");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        boolean boolean15 = atmosphereConfig10.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig10.framework = atmosphereFramework16;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.shutdownHook(shutdownHook20);
        boolean boolean22 = atmosphereConfig21.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        int int27 = atmosphereConfig23.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig23.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig23.startupHook(startupHook29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig30.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig30.getframework();
        atmosphereConfig30.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig39.shutdownHook(shutdownHook40);
        org.slf4j.Logger logger42 = atmosphereConfig41.getlogger();
        boolean boolean43 = atmosphereConfig41.isSupportSession();
        boolean boolean44 = atmosphereConfig41.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig45.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray49 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList50, startupHookArray49);
        atmosphereConfig45.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList50);
        atmosphereConfig41.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = atmosphereConfig41.framework();
        atmosphereConfig41.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig57.getAtmosphereHandlerConfig();
        int int61 = atmosphereConfig57.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig57.supportSession = false;
        atmosphereConfig57.setSupportSession(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig57.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig41.populate(atmosphereConfig57);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        atmosphereConfig57.setframework(atmosphereFramework68);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList70 = atmosphereConfig57.getshutdownHooks();
        atmosphereConfig30.setshutdownHooks(shutdownHookList70);
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig30.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig30.getproperties();
        atmosphereConfig21.setproperties(strMap73);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(logger42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(startupHookArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(atmosphereFramework54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(shutdownHookList70);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
    }

    @Test
    public void test09326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09326");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig0.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.getproperties();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(startupHookList11);
    }

    @Test
    public void test09327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09327");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig5.throwExceptionOnCloned = true;
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig17.setframework(atmosphereFramework18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig17.getshutdownHooks();
        atmosphereConfig5.setshutdownHooks(shutdownHookList21);
        atmosphereConfig0.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig0.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.framework = atmosphereFramework26;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig25.getshutdownHooks();
        boolean boolean29 = atmosphereConfig25.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test09328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09328");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig14.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig14.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig21.getshutdownHooks();
        boolean boolean24 = atmosphereConfig21.isSupportSession();
        boolean boolean25 = atmosphereConfig21.supportSession;
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig21.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig21.getshutdownHooks();
        boolean boolean30 = atmosphereConfig21.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig21.properties;
        atmosphereConfig0.setproperties(strMap31);
        java.lang.Class<?> wildcardClass33 = strMap31.getClass();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test09329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09329");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig5.throwExceptionOnCloned = true;
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        boolean boolean10 = atmosphereConfig5.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig5.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.slf4j.Logger logger20 = atmosphereConfig17.getlogger();
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig17.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig17.startUpHook;
        atmosphereConfig5.startUpHook = startupHookList24;
        boolean boolean26 = atmosphereConfig5.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig5.setframework(atmosphereFramework27);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap29 = atmosphereConfig5.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test09330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09330");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig4.supportSession;
        boolean boolean13 = atmosphereConfig4.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig4.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig15.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig17.throwExceptionOnCloned = true;
        boolean boolean21 = atmosphereConfig17.isSupportSession();
        boolean boolean22 = atmosphereConfig17.isSessionTimeoutRemovalAllowed();
        boolean boolean23 = atmosphereConfig17.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig17.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig17.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig17.framework();
        atmosphereConfig17.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig15.populate(atmosphereConfig17);
        int int31 = atmosphereConfig17.getInitParameter("hi!", (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test09331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09331");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.destroy();
        atmosphereConfig10.initComplete();
        java.lang.String str17 = atmosphereConfig10.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig10.startUpHook;
        atmosphereConfig4.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig4.framework = atmosphereFramework20;
        atmosphereConfig4.destroy();
        java.lang.String str25 = atmosphereConfig4.getInitParameter("hi!", "hi!");
        boolean boolean26 = atmosphereConfig4.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig4.properties();
        atmosphereConfig4.supportSession = true;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test09332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09332");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig16.getlogger();
        boolean boolean18 = atmosphereConfig16.isSupportSession();
        boolean boolean19 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig20.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig4.startUpHook = startupHookList25;
        atmosphereConfig4.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig35.shutdownHook(shutdownHook36);
        org.slf4j.Logger logger38 = atmosphereConfig37.getlogger();
        boolean boolean39 = atmosphereConfig37.isSupportSession();
        boolean boolean40 = atmosphereConfig37.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig41.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList46, startupHookArray45);
        atmosphereConfig41.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList46);
        atmosphereConfig37.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList46);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = atmosphereConfig37.framework();
        java.lang.String str52 = atmosphereConfig37.getInitParameter("");
        java.lang.String str55 = atmosphereConfig37.getInitParameter("hi!", "");
        atmosphereConfig37.supportSession = true;
        atmosphereConfig37.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig37.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = atmosphereConfig37.shutdownHooks;
        atmosphereConfig4.shutdownHooks = shutdownHookList61;
        atmosphereConfig4.destroy();
        atmosphereConfig4.setSupportSession(true);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(logger38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(startupHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(atmosphereFramework50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertNotNull(shutdownHookList61);
    }

    @Test
    public void test09333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09333");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.getshutdownHooks();
        atmosphereConfig6.shutdownHooks = shutdownHookList12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig6.framework = atmosphereFramework14;
        int int18 = atmosphereConfig6.getInitParameter("", 35);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 35 + "'", int18 == 35);
    }

    @Test
    public void test09334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09334");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = null;
        atmosphereConfig0.framework = atmosphereFramework2;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig4.throwExceptionOnCloned;
        atmosphereConfig4.destroy();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        int int18 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig14.supportSession = false;
        atmosphereConfig14.setSupportSession(false);
        java.lang.String str24 = atmosphereConfig14.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig13.populate(atmosphereConfig14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList26;
        boolean boolean28 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.startupHook(startupHook29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        boolean boolean34 = atmosphereConfig32.throwExceptionOnCloned;
        atmosphereConfig32.destroy();
        atmosphereConfig32.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig32.framework = atmosphereFramework37;
        int int41 = atmosphereConfig32.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig32.getstartUpHook();
        atmosphereConfig32.setSupportSession(false);
        boolean boolean47 = atmosphereConfig32.getInitParameter("hi!", false);
        atmosphereConfig32.sessionTimeoutRemovalAllowed = false;
        boolean boolean50 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig32.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean53 = atmosphereConfig52.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = null;
        atmosphereConfig52.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        boolean boolean58 = atmosphereConfig52.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig32.populate(atmosphereConfig52);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig52.getproperties();
        atmosphereConfig0.properties = strMap60;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig0.getproperties();
        atmosphereConfig0.destroy();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 35 + "'", int41 == 35);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap62);
    }

    @Test
    public void test09335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09335");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        boolean boolean12 = atmosphereConfig6.throwExceptionOnCloned;
        boolean boolean15 = atmosphereConfig6.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig6.shutdownHooks;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        java.lang.String str21 = atmosphereConfig6.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig6.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig6.getframework();
        atmosphereConfig6.supportSession = false;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNull(atmosphereFramework23);
    }

    @Test
    public void test09336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09336");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.shutdownHook(shutdownHook24);
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        atmosphereConfig23.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.shutdownHook(shutdownHook34);
        org.slf4j.Logger logger36 = atmosphereConfig35.getlogger();
        boolean boolean37 = atmosphereConfig35.isSupportSession();
        boolean boolean38 = atmosphereConfig35.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig39.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44, startupHookArray43);
        atmosphereConfig39.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44);
        atmosphereConfig35.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44);
        atmosphereConfig23.startUpHook = startupHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig49.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig49.getshutdownHooks();
        atmosphereConfig23.setshutdownHooks(shutdownHookList51);
        atmosphereConfig0.shutdownHooks = shutdownHookList51;
        boolean boolean54 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        atmosphereConfig0.setframework(atmosphereFramework56);
        boolean boolean58 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test09337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09337");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        int int18 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig14.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21, startupHookArray20);
        atmosphereConfig14.startUpHook = startupHookList21;
        org.slf4j.Logger logger24 = atmosphereConfig14.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig14.getshutdownHooks();
        atmosphereConfig14.destroy();
        atmosphereConfig14.supportSession = true;
        atmosphereConfig14.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        boolean boolean32 = atmosphereConfig30.throwExceptionOnCloned;
        atmosphereConfig30.destroy();
        atmosphereConfig30.initComplete();
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig30.framework();
        atmosphereConfig30.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig14.populate(atmosphereConfig30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig30.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        atmosphereConfig42.throwExceptionOnCloned = true;
        boolean boolean46 = atmosphereConfig42.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig42.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig48.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig48.shutdownHook(shutdownHook51);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig52.startupHook(startupHook53);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = null;
        atmosphereConfig54.setframework(atmosphereFramework55);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig54.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = atmosphereConfig54.getshutdownHooks();
        atmosphereConfig42.setshutdownHooks(shutdownHookList58);
        atmosphereConfig42.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig42.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig42.getproperties();
        atmosphereConfig30.properties = strMap64;
        org.slf4j.Logger logger66 = atmosphereConfig30.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig30.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig0.populate(atmosphereConfig30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList70 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean71 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(startupHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(logger24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(shutdownHookList58);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(logger66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(shutdownHookList69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test09338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09338");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.destroy();
        atmosphereConfig11.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig11.framework = atmosphereFramework16;
        java.lang.String str20 = atmosphereConfig11.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig11.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList21;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.startupHook(startupHook26);
        atmosphereConfig27.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
    }

    @Test
    public void test09339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09339");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig0.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.startupHook(startupHook22);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
    }

    @Test
    public void test09340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09340");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.getframework();
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.atmosphereHandlerConfig;
        int int14 = atmosphereConfig0.getInitParameter("hi!", (-1));
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test09341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09341");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework;
        boolean boolean17 = atmosphereConfig0.supportSession;
        boolean boolean18 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test09342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09342");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.startupHook(startupHook2);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework();
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
    }

    @Test
    public void test09343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09343");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.destroy();
        atmosphereConfig10.initComplete();
        java.lang.String str17 = atmosphereConfig10.getInitParameter("hi!", "");
        atmosphereConfig10.throwExceptionOnCloned = false;
        boolean boolean20 = atmosphereConfig10.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig10.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        int int26 = atmosphereConfig22.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig22.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig22.startUpHook = startupHookList29;
        org.slf4j.Logger logger32 = atmosphereConfig22.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig22.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig22.startupHook(startupHook34);
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(true);
        java.lang.String str39 = atmosphereConfig35.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig35.startUpHook;
        atmosphereConfig10.startUpHook = startupHookList40;
        atmosphereConfig4.startUpHook = startupHookList40;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig4.getproperties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test09344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09344");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig16.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        int int22 = atmosphereConfig18.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig18.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig18.startUpHook = startupHookList25;
        org.slf4j.Logger logger28 = atmosphereConfig18.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig18.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig18.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.slf4j.Logger logger35 = atmosphereConfig16.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(logger35);
    }

    @Test
    public void test09345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09345");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig6.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig12.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig12.startupHook(startupHook16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        atmosphereConfig6.setstartUpHook(startupHookList18);
        java.lang.String str22 = atmosphereConfig6.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig6.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig6.properties;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test09346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09346");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.supportSession;
        java.lang.String str3 = atmosphereConfig0.getInitParameter("hi!");
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        atmosphereConfig0.supportSession = false;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
    }

    @Test
    public void test09347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09347");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig4.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.startupHook(startupHook9);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig4.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig4.properties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test09348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09348");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean8 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext13 = atmosphereConfig12.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
    }

    @Test
    public void test09349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09349");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.startupHook(startupHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig20.setframework(atmosphereFramework21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.getproperties();
        atmosphereConfig9.setproperties(strMap23);
        atmosphereConfig0.setproperties(strMap23);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        atmosphereConfig30.throwExceptionOnCloned = true;
        boolean boolean34 = atmosphereConfig30.isSupportSession();
        boolean boolean35 = atmosphereConfig30.isSessionTimeoutRemovalAllowed();
        boolean boolean36 = atmosphereConfig30.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig30.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig30.framework;
        org.slf4j.Logger logger39 = atmosphereConfig30.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig30.getstartUpHook();
        boolean boolean41 = atmosphereConfig30.throwExceptionOnCloned;
        atmosphereConfig30.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig30.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig48.shutdownHook(shutdownHook49);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig48.getstartUpHook();
        atmosphereConfig48.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig48.startupHook(startupHook53);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig54.getshutdownHooks();
        atmosphereConfig30.setshutdownHooks(shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig57.getAtmosphereHandlerConfig();
        boolean boolean59 = atmosphereConfig57.throwExceptionOnCloned;
        atmosphereConfig57.destroy();
        atmosphereConfig57.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = null;
        atmosphereConfig57.framework = atmosphereFramework62;
        atmosphereConfig57.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList66 = atmosphereConfig57.shutdownHooks;
        atmosphereConfig30.setshutdownHooks(shutdownHookList66);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList68 = atmosphereConfig30.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList68;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(logger39);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shutdownHookList66);
        org.junit.Assert.assertNotNull(shutdownHookList68);
    }

    @Test
    public void test09350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09350");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList2 = atmosphereConfig1.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList3 = atmosphereConfig1.getshutdownHooks();
        boolean boolean6 = atmosphereConfig1.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig7.getshutdownHooks();
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        java.lang.String str13 = atmosphereConfig7.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig7.properties;
        atmosphereConfig1.setproperties(strMap14);
        atmosphereConfig0.properties = strMap14;
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig21.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList23;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.slf4j.Logger logger29 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList2);
        org.junit.Assert.assertNotNull(shutdownHookList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(logger29);
    }

    @Test
    public void test09351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09351");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig14.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNull(atmosphereFramework15);
    }

    @Test
    public void test09352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09352");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig3.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        atmosphereConfig7.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.shutdownHook(shutdownHook18);
        org.slf4j.Logger logger20 = atmosphereConfig19.getlogger();
        boolean boolean21 = atmosphereConfig19.isSupportSession();
        boolean boolean22 = atmosphereConfig19.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig23.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig23.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig7.startUpHook = startupHookList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig7.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig37.getshutdownHooks();
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig42.getshutdownHooks();
        atmosphereConfig37.setshutdownHooks(shutdownHookList44);
        atmosphereConfig7.shutdownHooks = shutdownHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        int int51 = atmosphereConfig47.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig47.supportSession = false;
        boolean boolean54 = atmosphereConfig47.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig55.getshutdownHooks();
        atmosphereConfig47.setshutdownHooks(shutdownHookList57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.properties();
        atmosphereConfig47.properties = strMap62;
        atmosphereConfig7.setproperties(strMap62);
        atmosphereConfig0.properties = strMap62;
        boolean boolean68 = atmosphereConfig0.getInitParameter("", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig0.properties;
        boolean boolean70 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test09353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09353");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig4.supportSession;
        boolean boolean13 = atmosphereConfig4.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig4.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.initComplete();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig4.startupHook(startupHook20);
        java.lang.String str24 = atmosphereConfig4.getInitParameter("", "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
    }

    @Test
    public void test09354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09354");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        java.lang.String str14 = atmosphereConfig0.getInitParameter("hi!", "");
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test09355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09355");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig5.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList7);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig0.shutdownHooks;
        java.lang.String str14 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        boolean boolean19 = atmosphereConfig17.throwExceptionOnCloned;
        atmosphereConfig17.destroy();
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig17.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30, startupHookArray29);
        atmosphereConfig25.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30);
        atmosphereConfig17.startUpHook = startupHookList30;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig17.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList34;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(startupHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookList34);
    }

    @Test
    public void test09356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09356");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig8.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.properties();
        atmosphereConfig0.properties = strMap15;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig0.getstartUpHook();
        java.lang.String str19 = atmosphereConfig0.getInitParameter("hi!");
        java.lang.String str21 = atmosphereConfig0.getInitParameter("hi!");
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        int int28 = atmosphereConfig24.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig24.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig24.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig24.framework();
        boolean boolean33 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig24.setframework(atmosphereFramework34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig36.getAtmosphereHandlerConfig();
        boolean boolean38 = atmosphereConfig36.throwExceptionOnCloned;
        atmosphereConfig36.destroy();
        atmosphereConfig36.initComplete();
        java.lang.String str43 = atmosphereConfig36.getInitParameter("hi!", "");
        boolean boolean44 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        atmosphereConfig36.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig36.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig36.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig36.startUpHook;
        atmosphereConfig24.setstartUpHook(startupHookList49);
        atmosphereConfig24.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig52.getAtmosphereHandlerConfig();
        int int56 = atmosphereConfig52.getInitParameter("hi!", (int) (short) 0);
        org.slf4j.Logger logger57 = atmosphereConfig52.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = atmosphereConfig52.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig59.getAtmosphereHandlerConfig();
        boolean boolean61 = atmosphereConfig59.throwExceptionOnCloned;
        atmosphereConfig59.destroy();
        atmosphereConfig59.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = null;
        atmosphereConfig59.framework = atmosphereFramework64;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = null;
        atmosphereConfig59.framework = atmosphereFramework66;
        boolean boolean70 = atmosphereConfig59.getInitParameter("hi!", true);
        atmosphereConfig59.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = atmosphereConfig59.shutdownHooks;
        atmosphereConfig52.setshutdownHooks(shutdownHookList73);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray75 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList76 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList76, shutdownHookArray75);
        atmosphereConfig52.shutdownHooks = shutdownHookList76;
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig52.properties();
        atmosphereConfig24.setproperties(strMap79);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList81 = atmosphereConfig24.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList81;
        atmosphereConfig0.destroy();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(logger57);
        org.junit.Assert.assertNotNull(shutdownHookList58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(shutdownHookList73);
        org.junit.Assert.assertNotNull(shutdownHookArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList81);
    }

    @Test
    public void test09357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09357");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList2 = atmosphereConfig1.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList3 = atmosphereConfig1.getshutdownHooks();
        boolean boolean6 = atmosphereConfig1.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig7.getshutdownHooks();
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        java.lang.String str13 = atmosphereConfig7.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig7.properties;
        atmosphereConfig1.setproperties(strMap14);
        atmosphereConfig0.properties = strMap14;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig0.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList2);
        org.junit.Assert.assertNotNull(shutdownHookList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(atmosphereFramework19);
    }

    @Test
    public void test09358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09358");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str8 = atmosphereConfig0.getInitParameter("hi!", "");
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test09359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09359");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = true;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.shutdownHook(shutdownHook20);
        org.slf4j.Logger logger22 = atmosphereConfig21.getlogger();
        boolean boolean23 = atmosphereConfig21.isSupportSession();
        atmosphereConfig21.throwExceptionOnCloned = false;
        atmosphereConfig21.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig21.startUpHook;
        atmosphereConfig4.startUpHook = startupHookList28;
        java.lang.String str32 = atmosphereConfig4.getInitParameter("hi!", "");
        atmosphereConfig4.throwExceptionOnCloned = true;
        boolean boolean35 = atmosphereConfig4.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig4.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(startupHookList36);
    }

    @Test
    public void test09360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09360");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean3 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.framework = atmosphereFramework4;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        int int11 = atmosphereConfig0.getInitParameter("", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test09361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09361");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig0.framework = atmosphereFramework11;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.startupHook(startupHook15);
        java.lang.String str18 = atmosphereConfig16.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig16.framework = atmosphereFramework19;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test09362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09362");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean8 = atmosphereConfig0.getInitParameter("hi!", false);
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test09363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09363");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        int int8 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig4.startUpHook = startupHookList11;
        atmosphereConfig0.startUpHook = startupHookList11;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean17 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        boolean boolean21 = atmosphereConfig19.throwExceptionOnCloned;
        atmosphereConfig19.destroy();
        atmosphereConfig19.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig19.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.getAtmosphereHandlerConfig();
        int int31 = atmosphereConfig27.getInitParameter("hi!", (int) (short) 0);
        boolean boolean32 = atmosphereConfig27.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig27.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig27.framework = atmosphereFramework35;
        boolean boolean39 = atmosphereConfig27.getInitParameter("hi!", true);
        boolean boolean40 = atmosphereConfig27.isSessionTimeoutRemovalAllowed();
        java.lang.String str43 = atmosphereConfig27.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig19.populate(atmosphereConfig27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig0.populate(atmosphereConfig44);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        atmosphereConfig0.setframework(atmosphereFramework46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
    }

    @Test
    public void test09364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09364");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig0.startupHook(startupHook4);
        boolean boolean6 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.setframework(atmosphereFramework7);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test09365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09365");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig19.framework = atmosphereFramework21;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig19.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        boolean boolean26 = atmosphereConfig24.throwExceptionOnCloned;
        atmosphereConfig24.destroy();
        atmosphereConfig24.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig24.shutdownHook(shutdownHook30);
        atmosphereConfig24.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig24.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig24.shutdownHooks;
        atmosphereConfig19.shutdownHooks = shutdownHookList34;
        atmosphereConfig0.shutdownHooks = shutdownHookList34;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        int int41 = atmosphereConfig37.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig37.supportSession = false;
        boolean boolean44 = atmosphereConfig37.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.getshutdownHooks();
        atmosphereConfig37.setshutdownHooks(shutdownHookList47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig49.properties();
        atmosphereConfig37.properties = strMap52;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig37.getstartUpHook();
        java.lang.String str56 = atmosphereConfig37.getInitParameter("hi!");
        atmosphereConfig37.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig0.populate(atmosphereConfig37);
        atmosphereConfig37.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig37.getproperties();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(strMap61);
    }

    @Test
    public void test09366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09366");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig4.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList16, startupHookArray15);
        atmosphereConfig11.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList16);
        atmosphereConfig11.initComplete();
        boolean boolean20 = atmosphereConfig11.isThrowExceptionOnCloned();
        java.lang.String str23 = atmosphereConfig11.getInitParameter("", "hi!");
        java.lang.String str26 = atmosphereConfig11.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig11.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        boolean boolean30 = atmosphereConfig28.throwExceptionOnCloned;
        atmosphereConfig28.destroy();
        atmosphereConfig28.initComplete();
        java.lang.String str35 = atmosphereConfig28.getInitParameter("hi!", "");
        boolean boolean36 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        atmosphereConfig28.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig28.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig28.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig28.startUpHook;
        atmosphereConfig11.startUpHook = startupHookList41;
        atmosphereConfig4.startUpHook = startupHookList41;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory44 = atmosphereConfig4.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(startupHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(startupHookList41);
    }

    @Test
    public void test09367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09367");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        boolean boolean12 = atmosphereConfig6.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig6.startupHook(startupHook13);
        atmosphereConfig6.initComplete();
        atmosphereConfig6.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        atmosphereConfig6.setproperties(strMap20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.shutdownHook(shutdownHook27);
        atmosphereConfig26.setThrowExceptionOnCloned(false);
        atmosphereConfig26.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig36.shutdownHook(shutdownHook37);
        org.slf4j.Logger logger39 = atmosphereConfig38.getlogger();
        boolean boolean40 = atmosphereConfig38.isSupportSession();
        boolean boolean41 = atmosphereConfig38.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig42.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray46 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList47, startupHookArray46);
        atmosphereConfig42.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList47);
        atmosphereConfig38.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList47);
        atmosphereConfig26.startUpHook = startupHookList47;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig52.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray56 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList57, startupHookArray56);
        atmosphereConfig52.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList57);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig52.framework = atmosphereFramework60;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig52.getstartUpHook();
        atmosphereConfig26.startUpHook = startupHookList62;
        atmosphereConfig26.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig66.getAtmosphereHandlerConfig();
        int int70 = atmosphereConfig66.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig66.supportSession = false;
        atmosphereConfig66.setSupportSession(false);
        boolean boolean75 = atmosphereConfig66.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig66.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = null;
        atmosphereConfig66.properties = strMap77;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = atmosphereConfig66.getshutdownHooks();
        boolean boolean80 = atmosphereConfig66.isThrowExceptionOnCloned();
        atmosphereConfig66.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig66.getshutdownHooks();
        atmosphereConfig26.setshutdownHooks(shutdownHookList83);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig85 = atmosphereConfig6.populate(atmosphereConfig26);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap86 = atmosphereConfig85.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(logger39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(startupHookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(startupHookArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(startupHookList62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(shutdownHookList79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNotNull(atmosphereConfig85);
    }

    @Test
    public void test09368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09368");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig13.throwExceptionOnCloned;
        boolean boolean16 = atmosphereConfig13.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig13.getshutdownHooks();
        atmosphereConfig12.shutdownHooks = shutdownHookList17;
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList17);
    }

    @Test
    public void test09369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09369");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.slf4j.Logger logger10 = atmosphereConfig6.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties();
        atmosphereConfig6.destroy();
        atmosphereConfig6.destroy();
        atmosphereConfig6.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig6.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.getstartUpHook();
        boolean boolean19 = atmosphereConfig17.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap20 = atmosphereConfig17.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test09370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09370");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig4.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig4.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.shutdownHook(shutdownHook17);
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        atmosphereConfig16.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.shutdownHook(shutdownHook27);
        org.slf4j.Logger logger29 = atmosphereConfig28.getlogger();
        boolean boolean30 = atmosphereConfig28.isSupportSession();
        boolean boolean31 = atmosphereConfig28.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        atmosphereConfig28.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        atmosphereConfig16.startUpHook = startupHookList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig42.getshutdownHooks();
        atmosphereConfig16.setshutdownHooks(shutdownHookList44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig46.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig46.getshutdownHooks();
        atmosphereConfig46.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig51.getshutdownHooks();
        atmosphereConfig46.setshutdownHooks(shutdownHookList53);
        atmosphereConfig16.shutdownHooks = shutdownHookList53;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig56.getAtmosphereHandlerConfig();
        int int60 = atmosphereConfig56.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig56.supportSession = false;
        boolean boolean63 = atmosphereConfig56.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig64.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList66 = atmosphereConfig64.getshutdownHooks();
        atmosphereConfig56.setshutdownHooks(shutdownHookList66);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig68.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig68.properties();
        atmosphereConfig56.properties = strMap71;
        atmosphereConfig16.setproperties(strMap71);
        atmosphereConfig9.properties = strMap71;
        boolean boolean75 = atmosphereConfig9.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList76 = atmosphereConfig9.startUpHook;
        atmosphereConfig4.startUpHook = startupHookList76;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework78 = null;
        atmosphereConfig4.setframework(atmosphereFramework78);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList80 = atmosphereConfig4.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList81 = atmosphereConfig4.atmosphereHandlerConfig;
        org.slf4j.Logger logger82 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework83 = null;
        atmosphereConfig4.setframework(atmosphereFramework83);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList85 = atmosphereConfig4.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertNotNull(shutdownHookList66);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(startupHookList76);
        org.junit.Assert.assertNotNull(shutdownHookList80);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList81);
        org.junit.Assert.assertNotNull(logger82);
        org.junit.Assert.assertNotNull(shutdownHookList85);
    }

    @Test
    public void test09371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09371");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig6.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig6.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig18.getshutdownHooks();
        java.lang.String str23 = atmosphereConfig18.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        boolean boolean26 = atmosphereConfig24.throwExceptionOnCloned;
        atmosphereConfig24.destroy();
        atmosphereConfig24.initComplete();
        java.lang.String str31 = atmosphereConfig24.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig24.startUpHook;
        atmosphereConfig18.setstartUpHook(startupHookList32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        int int38 = atmosphereConfig34.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig34.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig34.framework();
        org.slf4j.Logger logger42 = atmosphereConfig34.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig34.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig18.populate(atmosphereConfig34);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig18.shutdownHook(shutdownHook45);
        atmosphereConfig46.supportSession = true;
        boolean boolean49 = atmosphereConfig46.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig46.getstartUpHook();
        atmosphereConfig6.setstartUpHook(startupHookList50);
        int int54 = atmosphereConfig6.getInitParameter("", 0);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(logger42);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test09372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09372");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig0.getproperties();
        boolean boolean23 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig0.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory25 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(shutdownHookList24);
    }

    @Test
    public void test09373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09373");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig7.throwExceptionOnCloned = true;
        java.lang.String str12 = atmosphereConfig7.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.slf4j.Logger logger20 = atmosphereConfig17.getlogger();
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig17.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig17.startUpHook;
        atmosphereConfig7.startUpHook = startupHookList24;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig7.properties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test09374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09374");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig4.initComplete();
        int int11 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.shutdownHook(shutdownHook17);
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        atmosphereConfig16.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.shutdownHook(shutdownHook27);
        org.slf4j.Logger logger29 = atmosphereConfig28.getlogger();
        boolean boolean30 = atmosphereConfig28.isSupportSession();
        boolean boolean31 = atmosphereConfig28.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        atmosphereConfig28.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        atmosphereConfig16.startUpHook = startupHookList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig42.getshutdownHooks();
        atmosphereConfig16.setshutdownHooks(shutdownHookList44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig46.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig46.getshutdownHooks();
        atmosphereConfig46.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig51.getshutdownHooks();
        atmosphereConfig46.setshutdownHooks(shutdownHookList53);
        atmosphereConfig16.shutdownHooks = shutdownHookList53;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig56.getAtmosphereHandlerConfig();
        boolean boolean58 = atmosphereConfig56.throwExceptionOnCloned;
        atmosphereConfig56.destroy();
        atmosphereConfig56.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        atmosphereConfig56.framework = atmosphereFramework61;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = null;
        atmosphereConfig56.framework = atmosphereFramework63;
        boolean boolean67 = atmosphereConfig56.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig56.getstartUpHook();
        atmosphereConfig16.startUpHook = startupHookList68;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList70 = atmosphereConfig16.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig4.populate(atmosphereConfig16);
        atmosphereConfig71.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework74 = null;
        atmosphereConfig71.framework = atmosphereFramework74;
        boolean boolean76 = atmosphereConfig71.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory77 = atmosphereConfig71.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(startupHookList68);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList70);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test09375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09375");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        boolean boolean12 = atmosphereConfig6.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig13.throwExceptionOnCloned;
        atmosphereConfig13.destroy();
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig13.shutdownHook(shutdownHook19);
        atmosphereConfig13.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        boolean boolean25 = atmosphereConfig23.throwExceptionOnCloned;
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        boolean boolean28 = atmosphereConfig23.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig23.getproperties();
        atmosphereConfig13.setproperties(strMap29);
        atmosphereConfig6.properties = strMap29;
        boolean boolean34 = atmosphereConfig6.getInitParameter("", false);
        atmosphereConfig6.setThrowExceptionOnCloned(false);
        atmosphereConfig6.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig6.supportSession = false;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test09376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09376");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.shutdownHook(shutdownHook33);
        boolean boolean37 = atmosphereConfig34.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig38.getAtmosphereHandlerConfig();
        atmosphereConfig38.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        int int46 = atmosphereConfig42.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig42.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49, startupHookArray48);
        atmosphereConfig42.startUpHook = startupHookList49;
        atmosphereConfig38.startUpHook = startupHookList49;
        atmosphereConfig34.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig34.shutdownHook(shutdownHook54);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        atmosphereConfig55.setSupportSession(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertNotNull(startupHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
    }

    @Test
    public void test09377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09377");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean9 = atmosphereConfig8.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.startupHook(startupHook10);
        atmosphereConfig8.setThrowExceptionOnCloned(false);
        boolean boolean14 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig15.getAtmosphereHandlerConfig();
        boolean boolean17 = atmosphereConfig15.throwExceptionOnCloned;
        atmosphereConfig15.destroy();
        atmosphereConfig15.initComplete();
        java.lang.String str22 = atmosphereConfig15.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig27.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig29.setframework(atmosphereFramework30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig29.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig29.shutdownHooks;
        atmosphereConfig15.shutdownHooks = shutdownHookList33;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig15.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig37.properties;
        atmosphereConfig36.setproperties(strMap39);
        atmosphereConfig8.setproperties(strMap39);
        atmosphereConfig4.properties = strMap39;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig4.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig4.getproperties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test09378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09378");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig16.throwExceptionOnCloned;
        atmosphereConfig16.destroy();
        atmosphereConfig16.initComplete();
        atmosphereConfig16.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig16.framework();
        atmosphereConfig16.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig0.populate(atmosphereConfig16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.shutdownHook(shutdownHook27);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.startupHook(startupHook42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig43.setframework(atmosphereFramework44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig43.getproperties();
        atmosphereConfig32.setproperties(strMap46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig32.shutdownHooks;
        boolean boolean49 = atmosphereConfig32.sessionTimeoutRemovalAllowed;
        boolean boolean50 = atmosphereConfig32.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig0.populate(atmosphereConfig32);
        int int54 = atmosphereConfig0.getInitParameter("", 1);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(startupHookList55);
    }

    @Test
    public void test09379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09379");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig10.framework = atmosphereFramework12;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList14;
        int int18 = atmosphereConfig0.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24, startupHookArray23);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig36.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        atmosphereConfig38.setframework(atmosphereFramework39);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig38.getproperties();
        atmosphereConfig27.setproperties(strMap41);
        atmosphereConfig19.setproperties(strMap41);
        atmosphereConfig19.supportSession = false;
        boolean boolean46 = atmosphereConfig19.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean49 = atmosphereConfig47.throwExceptionOnCloned;
        atmosphereConfig47.destroy();
        atmosphereConfig47.initComplete();
        java.lang.String str54 = atmosphereConfig47.getInitParameter("hi!", "");
        boolean boolean55 = atmosphereConfig47.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig61.shutdownHook(shutdownHook64);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig65.startupHook(startupHook66);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        atmosphereConfig67.setframework(atmosphereFramework68);
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig67.getproperties();
        atmosphereConfig56.setproperties(strMap70);
        atmosphereConfig47.setproperties(strMap70);
        java.lang.String str75 = atmosphereConfig47.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig19.populate(atmosphereConfig47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig0.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework78 = null;
        atmosphereConfig77.setframework(atmosphereFramework78);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework80 = atmosphereConfig77.framework();
        atmosphereConfig77.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(startupHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNull(atmosphereFramework80);
    }

    @Test
    public void test09380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09380");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig5.throwExceptionOnCloned = true;
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        boolean boolean10 = atmosphereConfig5.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig5.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.slf4j.Logger logger20 = atmosphereConfig17.getlogger();
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig17.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig17.startUpHook;
        atmosphereConfig5.startUpHook = startupHookList24;
        boolean boolean26 = atmosphereConfig5.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig5.setframework(atmosphereFramework27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        atmosphereConfig29.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        int int37 = atmosphereConfig33.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig33.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray39 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList40, startupHookArray39);
        atmosphereConfig33.startUpHook = startupHookList40;
        atmosphereConfig29.startUpHook = startupHookList40;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig29.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig29.shutdownHook(shutdownHook45);
        atmosphereConfig46.sessionTimeoutRemovalAllowed = true;
        boolean boolean49 = atmosphereConfig46.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = atmosphereConfig46.getframework();
        boolean boolean51 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig52.getAtmosphereHandlerConfig();
        boolean boolean54 = atmosphereConfig52.throwExceptionOnCloned;
        atmosphereConfig52.destroy();
        atmosphereConfig52.initComplete();
        java.lang.String str59 = atmosphereConfig52.getInitParameter("hi!", "");
        boolean boolean60 = atmosphereConfig52.isSessionTimeoutRemovalAllowed();
        java.lang.String str62 = atmosphereConfig52.getInitParameter("hi!");
        boolean boolean63 = atmosphereConfig52.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = atmosphereConfig52.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig52.shutdownHooks;
        atmosphereConfig46.shutdownHooks = shutdownHookList65;
        atmosphereConfig5.shutdownHooks = shutdownHookList65;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(startupHookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(atmosphereFramework50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(atmosphereFramework64);
        org.junit.Assert.assertNotNull(shutdownHookList65);
    }

    @Test
    public void test09381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09381");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        boolean boolean15 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig10.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList16;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig0.getstartUpHook();
        boolean boolean19 = atmosphereConfig0.supportSession;
        boolean boolean20 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09382");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean3 = atmosphereConfig0.isSupportSession();
        boolean boolean4 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework();
        java.lang.String str13 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test09383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09383");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.getshutdownHooks();
        int int9 = atmosphereConfig0.getInitParameter("", (int) (byte) 0);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        boolean boolean16 = atmosphereConfig14.throwExceptionOnCloned;
        atmosphereConfig14.destroy();
        boolean boolean18 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        atmosphereConfig14.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig14.setSessionTimeoutRemovalAllowed(false);
        int int25 = atmosphereConfig14.getInitParameter("hi!", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig14.startupHook(startupHook26);
        org.slf4j.Logger logger28 = atmosphereConfig27.getlogger();
        boolean boolean29 = atmosphereConfig27.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig13.populate(atmosphereConfig27);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory31 = atmosphereConfig27.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
    }

    @Test
    public void test09384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09384");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.getproperties();
        atmosphereConfig8.setproperties(strMap22);
        atmosphereConfig0.setproperties(strMap22);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig26.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList28;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        boolean boolean35 = atmosphereConfig33.throwExceptionOnCloned;
        atmosphereConfig33.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig38.getAtmosphereHandlerConfig();
        atmosphereConfig38.throwExceptionOnCloned = true;
        boolean boolean42 = atmosphereConfig38.isSupportSession();
        boolean boolean43 = atmosphereConfig38.isSessionTimeoutRemovalAllowed();
        boolean boolean44 = atmosphereConfig38.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig33.populate(atmosphereConfig38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig50.startupHook(startupHook51);
        org.slf4j.Logger logger53 = atmosphereConfig50.getlogger();
        atmosphereConfig50.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig50.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig50.startUpHook;
        atmosphereConfig38.startUpHook = startupHookList57;
        atmosphereConfig0.startUpHook = startupHookList57;
        boolean boolean62 = atmosphereConfig0.getInitParameter("hi!", false);
        boolean boolean63 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(logger53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(shutdownHookList64);
    }

    @Test
    public void test09385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09385");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig0.getproperties();
        boolean boolean23 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
    }

    @Test
    public void test09386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09386");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = null;
        atmosphereConfig37.startUpHook = startupHookList38;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig37.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(shutdownHookList40);
    }

    @Test
    public void test09387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09387");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        boolean boolean8 = atmosphereConfig4.supportSession;
        java.lang.String str11 = atmosphereConfig4.getInitParameter("", "hi!");
        atmosphereConfig4.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        boolean boolean16 = atmosphereConfig14.supportSession;
        org.slf4j.Logger logger17 = atmosphereConfig14.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig23.getshutdownHooks();
        atmosphereConfig18.setshutdownHooks(shutdownHookList25);
        boolean boolean27 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        atmosphereConfig18.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig18.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig14.populate(atmosphereConfig18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig14.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig14.setframework(atmosphereFramework34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig14.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList36);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig4.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig4.destroy();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
    }

    @Test
    public void test09388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09388");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        boolean boolean10 = atmosphereConfig8.throwExceptionOnCloned;
        atmosphereConfig8.destroy();
        atmosphereConfig8.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig8.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig8.getproperties();
        atmosphereConfig4.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig18.getshutdownHooks();
        boolean boolean23 = atmosphereConfig18.getInitParameter("", true);
        boolean boolean24 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig25.throwExceptionOnCloned = true;
        boolean boolean29 = atmosphereConfig25.isSupportSession();
        boolean boolean30 = atmosphereConfig25.isSessionTimeoutRemovalAllowed();
        boolean boolean31 = atmosphereConfig25.sessionTimeoutRemovalAllowed;
        boolean boolean32 = atmosphereConfig25.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig25.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig25.properties();
        atmosphereConfig18.setproperties(strMap36);
        atmosphereConfig4.setproperties(strMap36);
        boolean boolean39 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig40.getAtmosphereHandlerConfig();
        boolean boolean42 = atmosphereConfig40.throwExceptionOnCloned;
        atmosphereConfig40.destroy();
        atmosphereConfig40.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        atmosphereConfig40.framework = atmosphereFramework45;
        int int49 = atmosphereConfig40.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig40.getstartUpHook();
        atmosphereConfig40.setSupportSession(false);
        boolean boolean55 = atmosphereConfig40.getInitParameter("hi!", false);
        atmosphereConfig40.sessionTimeoutRemovalAllowed = false;
        boolean boolean58 = atmosphereConfig40.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig40.properties();
        atmosphereConfig4.properties = strMap59;
        org.slf4j.Logger logger61 = atmosphereConfig4.getlogger();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 35 + "'", int49 == 35);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(logger61);
    }

    @Test
    public void test09389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09389");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean12 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.shutdownHook(shutdownHook20);
        atmosphereConfig21.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig21.startupHook(startupHook23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig24.properties;
        atmosphereConfig0.properties = strMap25;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig0.framework;
        java.lang.String str29 = atmosphereConfig0.getInitParameter("");
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test09390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09390");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        boolean boolean21 = atmosphereConfig0.getInitParameter("", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean25 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test09391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09391");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        boolean boolean12 = atmosphereConfig6.throwExceptionOnCloned;
        boolean boolean15 = atmosphereConfig6.getInitParameter("", true);
        atmosphereConfig6.throwExceptionOnCloned = false;
        boolean boolean18 = atmosphereConfig6.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test09392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09392");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.slf4j.Logger logger10 = atmosphereConfig6.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties();
        atmosphereConfig6.initComplete();
        boolean boolean13 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        atmosphereConfig6.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig6.shutdownHooks;
        atmosphereConfig6.initComplete();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster17 = atmosphereConfig6.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shutdownHookList15);
    }

    @Test
    public void test09393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09393");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.getframework();
        atmosphereConfig0.throwExceptionOnCloned = false;
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.startupHook(startupHook20);
        org.slf4j.Logger logger22 = atmosphereConfig19.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig19.startupHook(startupHook23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig36.setframework(atmosphereFramework37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig36.getproperties();
        atmosphereConfig25.setproperties(strMap39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig25.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.throwExceptionOnCloned = false;
        atmosphereConfig42.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig42.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig42.initComplete();
        atmosphereConfig42.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig25.populate(atmosphereConfig42);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig52.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig58.shutdownHook(shutdownHook59);
        atmosphereConfig58.setThrowExceptionOnCloned(false);
        atmosphereConfig58.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig64.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig64.shutdownHook(shutdownHook67);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig68.shutdownHook(shutdownHook69);
        org.slf4j.Logger logger71 = atmosphereConfig70.getlogger();
        boolean boolean72 = atmosphereConfig70.isSupportSession();
        boolean boolean73 = atmosphereConfig70.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig74.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig74.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray78 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList79 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList79, startupHookArray78);
        atmosphereConfig74.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList79);
        atmosphereConfig70.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList79);
        atmosphereConfig58.startUpHook = startupHookList79;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig84 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig84.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = atmosphereConfig84.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray88 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList89 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList89, startupHookArray88);
        atmosphereConfig84.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList89);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework92 = null;
        atmosphereConfig84.framework = atmosphereFramework92;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList94 = atmosphereConfig84.getstartUpHook();
        atmosphereConfig58.startUpHook = startupHookList94;
        atmosphereConfig52.setstartUpHook(startupHookList94);
        atmosphereConfig24.setstartUpHook(startupHookList94);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList98 = atmosphereConfig24.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList98);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(logger71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(startupHookArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(startupHookArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(startupHookList94);
        org.junit.Assert.assertNotNull(shutdownHookList98);
    }

    @Test
    public void test09394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09394");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean8 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        atmosphereConfig11.throwExceptionOnCloned = true;
        boolean boolean15 = atmosphereConfig11.isSupportSession();
        boolean boolean16 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        boolean boolean17 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig22.atmosphereHandlerConfig;
        boolean boolean26 = atmosphereConfig22.supportSession;
        boolean boolean27 = atmosphereConfig22.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig22.properties;
        atmosphereConfig11.setproperties(strMap28);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig11.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList30);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig0.framework();
        int int36 = atmosphereConfig0.getInitParameter("", (int) 'a');
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 97 + "'", int36 == 97);
    }

    @Test
    public void test09395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09395");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig8.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties;
        atmosphereConfig7.setproperties(strMap14);
        boolean boolean16 = atmosphereConfig7.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig7.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig7.setframework(atmosphereFramework18);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider20 = atmosphereConfig7.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList17);
    }

    @Test
    public void test09396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09396");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig14.setframework(atmosphereFramework15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig14.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig14.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList18;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        boolean boolean22 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig0.framework();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean29 = atmosphereConfig0.getInitParameter("hi!", false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test09397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09397");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strMap3);
    }

    @Test
    public void test09398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09398");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap13 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test09399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09399");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.getshutdownHooks();
        boolean boolean15 = atmosphereConfig10.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig16.getshutdownHooks();
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        java.lang.String str22 = atmosphereConfig16.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.properties;
        atmosphereConfig10.setproperties(strMap23);
        atmosphereConfig9.properties = strMap23;
        atmosphereConfig9.setSupportSession(false);
        atmosphereConfig9.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig30.getshutdownHooks();
        atmosphereConfig9.shutdownHooks = shutdownHookList32;
        atmosphereConfig0.setshutdownHooks(shutdownHookList32);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig37.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray41 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList42, startupHookArray41);
        atmosphereConfig37.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig54.startupHook(startupHook55);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        atmosphereConfig56.setframework(atmosphereFramework57);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig56.getproperties();
        atmosphereConfig45.setproperties(strMap59);
        atmosphereConfig37.setproperties(strMap59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig62.getAtmosphereHandlerConfig();
        atmosphereConfig62.throwExceptionOnCloned = true;
        boolean boolean66 = atmosphereConfig62.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig62.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig68.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook71 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig68.shutdownHook(shutdownHook71);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig72.startupHook(startupHook73);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework75 = null;
        atmosphereConfig74.setframework(atmosphereFramework75);
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig74.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = atmosphereConfig74.getshutdownHooks();
        atmosphereConfig62.setshutdownHooks(shutdownHookList78);
        atmosphereConfig62.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList83 = atmosphereConfig82.getAtmosphereHandlerConfig();
        boolean boolean84 = atmosphereConfig82.throwExceptionOnCloned;
        atmosphereConfig82.destroy();
        atmosphereConfig82.initComplete();
        java.lang.String str89 = atmosphereConfig82.getInitParameter("hi!", "");
        boolean boolean90 = atmosphereConfig82.isSessionTimeoutRemovalAllowed();
        java.lang.String str92 = atmosphereConfig82.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray93 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList94 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean95 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList94, shutdownHookArray93);
        atmosphereConfig82.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList94);
        atmosphereConfig62.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList94);
        atmosphereConfig37.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList94);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList94);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(startupHookArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(shutdownHookList78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNotNull(shutdownHookArray93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test09400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09400");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.getframework();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean13 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig14.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig14.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig14.startupHook(startupHook18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList20;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test09401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09401");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        org.slf4j.Logger logger15 = atmosphereConfig14.getlogger();
        boolean boolean16 = atmosphereConfig14.isSupportSession();
        boolean boolean17 = atmosphereConfig14.isThrowExceptionOnCloned();
        org.slf4j.Logger logger18 = atmosphereConfig14.getlogger();
        atmosphereConfig14.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig14.startupHook(startupHook21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig22.properties();
        atmosphereConfig0.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        int int29 = atmosphereConfig25.getInitParameter("hi!", (int) (short) 0);
        boolean boolean30 = atmosphereConfig25.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig25.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        int int37 = atmosphereConfig33.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig33.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig33.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig33.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig33.atmosphereHandlerConfig;
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig47.shutdownHook(shutdownHook48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig49.getproperties();
        atmosphereConfig25.properties = strMap50;
        atmosphereConfig25.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig0.populate(atmosphereConfig25);
        org.slf4j.Logger logger55 = atmosphereConfig0.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig0.properties;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(logger55);
        org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test09402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09402");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig13.shutdownHook(shutdownHook14);
        org.slf4j.Logger logger16 = atmosphereConfig15.getlogger();
        boolean boolean17 = atmosphereConfig15.isSupportSession();
        boolean boolean18 = atmosphereConfig15.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24, startupHookArray23);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24);
        atmosphereConfig15.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24);
        atmosphereConfig0.startUpHook = startupHookList24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        boolean boolean31 = atmosphereConfig29.throwExceptionOnCloned;
        atmosphereConfig29.setThrowExceptionOnCloned(false);
        atmosphereConfig29.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig29.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        int int41 = atmosphereConfig37.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig37.supportSession = false;
        boolean boolean44 = atmosphereConfig37.isSessionTimeoutRemovalAllowed();
        atmosphereConfig37.destroy();
        java.lang.String str47 = atmosphereConfig37.getInitParameter("");
        atmosphereConfig37.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig37.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig37.getstartUpHook();
        atmosphereConfig29.startUpHook = startupHookList51;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig53.getAtmosphereHandlerConfig();
        boolean boolean55 = atmosphereConfig53.throwExceptionOnCloned;
        atmosphereConfig53.destroy();
        atmosphereConfig53.initComplete();
        java.lang.String str60 = atmosphereConfig53.getInitParameter("hi!", "");
        boolean boolean61 = atmosphereConfig53.isSupportSession();
        atmosphereConfig53.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig53.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig53.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList65;
        atmosphereConfig29.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig0.populate(atmosphereConfig29);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList70 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(startupHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList70);
        org.junit.Assert.assertNotNull(strMap71);
    }

    @Test
    public void test09403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09403");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.getproperties();
        atmosphereConfig40.setproperties(strMap54);
        atmosphereConfig32.setproperties(strMap54);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig58.startUpHook;
        atmosphereConfig32.startUpHook = startupHookList60;
        boolean boolean62 = atmosphereConfig32.supportSession;
        boolean boolean63 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig0.populate(atmosphereConfig32);
        java.lang.String str67 = atmosphereConfig0.getInitParameter("", "");
        boolean boolean68 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig0.startupHook(startupHook69);
        java.lang.String str72 = atmosphereConfig70.getInitParameter("");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test09404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09404");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        boolean boolean10 = atmosphereConfig8.throwExceptionOnCloned;
        atmosphereConfig8.destroy();
        atmosphereConfig8.initComplete();
        java.lang.String str15 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean16 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        java.lang.String str18 = atmosphereConfig8.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig8.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        int int28 = atmosphereConfig24.getInitParameter("hi!", (int) (short) 0);
        boolean boolean29 = atmosphereConfig24.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig24.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        int int36 = atmosphereConfig32.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig32.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig32.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig32.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig32.atmosphereHandlerConfig;
        atmosphereConfig24.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig46.shutdownHook(shutdownHook47);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig48.getproperties();
        atmosphereConfig24.properties = strMap49;
        atmosphereConfig24.setThrowExceptionOnCloned(true);
        boolean boolean53 = atmosphereConfig24.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig0.populate(atmosphereConfig24);
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
    }

    @Test
    public void test09405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09405");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        boolean boolean8 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        atmosphereConfig4.setThrowExceptionOnCloned(true);
        boolean boolean13 = atmosphereConfig4.getInitParameter("hi!", false);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig14 = atmosphereConfig4.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test09406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09406");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.setSupportSession(true);
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig9.throwExceptionOnCloned = true;
        boolean boolean13 = atmosphereConfig9.isSupportSession();
        boolean boolean14 = atmosphereConfig9.isSessionTimeoutRemovalAllowed();
        boolean boolean15 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        boolean boolean16 = atmosphereConfig9.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig9.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig9.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig0.framework = atmosphereFramework20;
        org.slf4j.Logger logger22 = atmosphereConfig0.getlogger();
        boolean boolean23 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test09407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09407");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        int int8 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig4.startUpHook = startupHookList11;
        atmosphereConfig0.startUpHook = startupHookList11;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean17 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig18.getshutdownHooks();
        boolean boolean23 = atmosphereConfig18.getInitParameter("", true);
        boolean boolean24 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30, startupHookArray29);
        atmosphereConfig25.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig25.framework = atmosphereFramework33;
        atmosphereConfig25.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig25.properties();
        atmosphereConfig18.setproperties(strMap36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        atmosphereConfig42.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.getshutdownHooks();
        boolean boolean50 = atmosphereConfig45.getInitParameter("", true);
        boolean boolean51 = atmosphereConfig45.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig52.getAtmosphereHandlerConfig();
        atmosphereConfig52.throwExceptionOnCloned = true;
        boolean boolean56 = atmosphereConfig52.isSupportSession();
        boolean boolean57 = atmosphereConfig52.isSessionTimeoutRemovalAllowed();
        boolean boolean58 = atmosphereConfig52.sessionTimeoutRemovalAllowed;
        boolean boolean59 = atmosphereConfig52.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = atmosphereConfig52.shutdownHooks;
        atmosphereConfig52.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig52.properties();
        atmosphereConfig45.setproperties(strMap63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = null;
        atmosphereConfig65.setframework(atmosphereFramework66);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig65.properties;
        atmosphereConfig45.setproperties(strMap68);
        atmosphereConfig42.setproperties(strMap68);
        atmosphereConfig18.setproperties(strMap68);
        atmosphereConfig0.properties = strMap68;
        boolean boolean75 = atmosphereConfig0.getInitParameter("", true);
        org.slf4j.Logger logger76 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(startupHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shutdownHookList60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(logger76);
    }

    @Test
    public void test09408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09408");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.getproperties();
        atmosphereConfig40.setproperties(strMap54);
        atmosphereConfig32.setproperties(strMap54);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig58.startUpHook;
        atmosphereConfig32.startUpHook = startupHookList60;
        boolean boolean62 = atmosphereConfig32.supportSession;
        boolean boolean63 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig0.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig65.getAtmosphereHandlerConfig();
        boolean boolean67 = atmosphereConfig65.throwExceptionOnCloned;
        atmosphereConfig65.destroy();
        atmosphereConfig65.initComplete();
        java.lang.String str72 = atmosphereConfig65.getInitParameter("hi!", "");
        boolean boolean73 = atmosphereConfig65.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList75 = atmosphereConfig74.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList76 = atmosphereConfig74.getshutdownHooks();
        atmosphereConfig74.setThrowExceptionOnCloned(false);
        java.lang.String str80 = atmosphereConfig74.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = atmosphereConfig74.properties;
        atmosphereConfig65.setproperties(strMap81);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig65.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList83;
        java.lang.String str86 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework87 = null;
        atmosphereConfig0.setframework(atmosphereFramework87);
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework90 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList75);
        org.junit.Assert.assertNotNull(shutdownHookList76);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNull(atmosphereFramework90);
    }

    @Test
    public void test09409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09409");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.setThrowExceptionOnCloned(false);
        boolean boolean16 = atmosphereConfig11.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap17);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test09410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09410");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.framework = atmosphereFramework13;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        int int20 = atmosphereConfig16.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig16.supportSession = false;
        atmosphereConfig16.setSupportSession(false);
        boolean boolean25 = atmosphereConfig16.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig16.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        atmosphereConfig16.properties = strMap27;
        boolean boolean29 = atmosphereConfig16.isSupportSession();
        boolean boolean30 = atmosphereConfig16.isSupportSession();
        boolean boolean31 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig16.startupHook(startupHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.populate(atmosphereConfig33);
        int int37 = atmosphereConfig33.getInitParameter("hi!", (int) (byte) 100);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
    }

    @Test
    public void test09411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09411");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.getframework();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        boolean boolean14 = atmosphereConfig11.getInitParameter("", false);
        java.lang.String str16 = atmosphereConfig11.getInitParameter("");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig11.atmosphereHandlerConfig;
        atmosphereConfig11.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
    }

    @Test
    public void test09412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09412");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = null;
        atmosphereConfig4.setstartUpHook(startupHookList8);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory10 = atmosphereConfig4.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
    }

    @Test
    public void test09413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09413");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        boolean boolean8 = atmosphereConfig4.supportSession;
        boolean boolean9 = atmosphereConfig4.supportSession;
        java.lang.String str11 = atmosphereConfig4.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(true);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext15 = atmosphereConfig4.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
    }

    @Test
    public void test09414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09414");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        atmosphereConfig9.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereConfig9);
    }

    @Test
    public void test09415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09415");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        int int11 = atmosphereConfig0.getInitParameter("hi!", (int) (short) -1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test09416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09416");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig0.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.getproperties();
        boolean boolean9 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.setframework(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        atmosphereConfig0.setSupportSession(false);
        java.lang.String str18 = atmosphereConfig0.getInitParameter("", "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test09417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09417");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.getframework();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig0.startUpHook;
        boolean boolean14 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean15 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09418");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.getproperties();
        atmosphereConfig40.setproperties(strMap54);
        atmosphereConfig32.setproperties(strMap54);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig58.startUpHook;
        atmosphereConfig32.startUpHook = startupHookList60;
        boolean boolean62 = atmosphereConfig32.supportSession;
        boolean boolean63 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig0.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig65.getAtmosphereHandlerConfig();
        boolean boolean67 = atmosphereConfig65.throwExceptionOnCloned;
        atmosphereConfig65.destroy();
        atmosphereConfig65.initComplete();
        java.lang.String str72 = atmosphereConfig65.getInitParameter("hi!", "");
        boolean boolean73 = atmosphereConfig65.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList75 = atmosphereConfig74.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList76 = atmosphereConfig74.getshutdownHooks();
        atmosphereConfig74.setThrowExceptionOnCloned(false);
        java.lang.String str80 = atmosphereConfig74.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = atmosphereConfig74.properties;
        atmosphereConfig65.setproperties(strMap81);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig65.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList83;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList85 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory88 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList75);
        org.junit.Assert.assertNotNull(shutdownHookList76);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList85);
    }

    @Test
    public void test09419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09419");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.shutdownHooks;
        boolean boolean11 = atmosphereConfig6.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        atmosphereConfig12.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig22.setframework(atmosphereFramework23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig22.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig22.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig22.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList27);
        atmosphereConfig6.startUpHook = startupHookList27;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig6.shutdownHook(shutdownHook30);
        boolean boolean32 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig6.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.startupHook(startupHook37);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
    }

    @Test
    public void test09420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09420");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig0.startupHook(startupHook4);
        boolean boolean6 = atmosphereConfig5.isThrowExceptionOnCloned();
        boolean boolean7 = atmosphereConfig5.isThrowExceptionOnCloned();
        atmosphereConfig5.throwExceptionOnCloned = false;
        boolean boolean10 = atmosphereConfig5.throwExceptionOnCloned;
        atmosphereConfig5.supportSession = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory13 = atmosphereConfig5.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09421");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        int int15 = atmosphereConfig0.getInitParameter("", 35);
        org.slf4j.Logger logger16 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 35 + "'", int15 == 35);
        org.junit.Assert.assertNotNull(logger16);
    }

    @Test
    public void test09422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09422");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList25;
        boolean boolean27 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.shutdownHook(shutdownHook33);
        boolean boolean35 = atmosphereConfig34.isSupportSession();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test09423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09423");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSupportSession(true);
    }

    @Test
    public void test09424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09424");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        atmosphereConfig11.throwExceptionOnCloned = true;
        boolean boolean15 = atmosphereConfig11.isSupportSession();
        boolean boolean16 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        boolean boolean17 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        boolean boolean18 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig11.shutdownHooks;
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig11.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        boolean boolean25 = atmosphereConfig24.isThrowExceptionOnCloned();
        java.lang.String str27 = atmosphereConfig24.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig28.startUpHook;
        atmosphereConfig24.startUpHook = startupHookList30;
        atmosphereConfig11.startUpHook = startupHookList30;
        atmosphereConfig0.setstartUpHook(startupHookList30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookList19);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(shutdownHookList34);
    }

    @Test
    public void test09425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09425");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        boolean boolean2 = atmosphereConfig1.isThrowExceptionOnCloned();
        java.lang.String str4 = atmosphereConfig1.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig1.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig7.getshutdownHooks();
        boolean boolean12 = atmosphereConfig7.getInitParameter("", true);
        boolean boolean13 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig7.getstartUpHook();
        atmosphereConfig1.setstartUpHook(startupHookList14);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig1.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig1.shutdownHooks;
        boolean boolean18 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig1.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig1.framework = atmosphereFramework21;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
    }

    @Test
    public void test09426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09426");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig4.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.startupHook(startupHook9);
        atmosphereConfig4.destroy();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
    }

    @Test
    public void test09427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09427");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig3.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig3.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig22.setframework(atmosphereFramework23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig22.getproperties();
        atmosphereConfig11.setproperties(strMap25);
        atmosphereConfig3.setproperties(strMap25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig28.throwExceptionOnCloned = true;
        boolean boolean32 = atmosphereConfig28.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig40.setframework(atmosphereFramework41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig40.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig28.setshutdownHooks(shutdownHookList44);
        atmosphereConfig28.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig48.getAtmosphereHandlerConfig();
        boolean boolean50 = atmosphereConfig48.throwExceptionOnCloned;
        atmosphereConfig48.destroy();
        atmosphereConfig48.initComplete();
        java.lang.String str55 = atmosphereConfig48.getInitParameter("hi!", "");
        boolean boolean56 = atmosphereConfig48.isSessionTimeoutRemovalAllowed();
        java.lang.String str58 = atmosphereConfig48.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray59 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList60, shutdownHookArray59);
        atmosphereConfig48.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList60);
        atmosphereConfig28.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList60);
        atmosphereConfig3.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList60);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig0.startupHook(startupHook66);
        boolean boolean68 = atmosphereConfig67.isSessionTimeoutRemovalAllowed();
        java.lang.String str71 = atmosphereConfig67.getInitParameter("hi!", "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(shutdownHookArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
    }

    @Test
    public void test09428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09428");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.getframework();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.shutdownHook(shutdownHook11);
        org.slf4j.Logger logger13 = atmosphereConfig12.getlogger();
        boolean boolean14 = atmosphereConfig12.isSupportSession();
        boolean boolean15 = atmosphereConfig12.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig16.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21, startupHookArray20);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21);
        atmosphereConfig12.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig12.framework();
        java.lang.String str27 = atmosphereConfig12.getInitParameter("");
        atmosphereConfig12.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig0.populate(atmosphereConfig12);
        int int32 = atmosphereConfig29.getInitParameter("", (int) (byte) 1);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig29.startUpHook;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap34 = atmosphereConfig29.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(startupHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(startupHookList33);
    }

    @Test
    public void test09429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09429");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean12 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.shutdownHook(shutdownHook20);
        atmosphereConfig21.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig21.startupHook(startupHook23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig24.properties;
        atmosphereConfig0.properties = strMap25;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig0.framework;
        boolean boolean28 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test09430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09430");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig13.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig13.framework();
        atmosphereConfig13.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.populate(atmosphereConfig13);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig13.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.slf4j.Logger logger27 = atmosphereConfig24.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig24.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        int int33 = atmosphereConfig29.getInitParameter("hi!", (int) (short) 0);
        boolean boolean34 = atmosphereConfig29.isSupportSession();
        atmosphereConfig29.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.shutdownHook(shutdownHook42);
        org.slf4j.Logger logger44 = atmosphereConfig43.getlogger();
        boolean boolean45 = atmosphereConfig43.isSupportSession();
        boolean boolean46 = atmosphereConfig43.isThrowExceptionOnCloned();
        org.slf4j.Logger logger47 = atmosphereConfig43.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig43.properties();
        atmosphereConfig43.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig29.populate(atmosphereConfig43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig51.throwExceptionOnCloned;
        atmosphereConfig51.destroy();
        atmosphereConfig51.initComplete();
        java.lang.String str58 = atmosphereConfig51.getInitParameter("hi!", "");
        boolean boolean59 = atmosphereConfig51.isSessionTimeoutRemovalAllowed();
        boolean boolean62 = atmosphereConfig51.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig63.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig63.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig63.getproperties();
        atmosphereConfig51.setproperties(strMap66);
        atmosphereConfig51.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig43.populate(atmosphereConfig51);
        boolean boolean70 = atmosphereConfig43.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList71 = atmosphereConfig43.getstartUpHook();
        atmosphereConfig24.setstartUpHook(startupHookList71);
        atmosphereConfig13.setstartUpHook(startupHookList71);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig13.shutdownHook(shutdownHook74);
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig75.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook77 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig75.startupHook(startupHook77);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory79 = atmosphereConfig78.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(logger27);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(logger44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(logger47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(startupHookList71);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
    }

    @Test
    public void test09431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09431");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig4.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig4.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.startupHook(startupHook10);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
    }

    @Test
    public void test09432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09432");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework11);
    }

    @Test
    public void test09433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09433");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig13.shutdownHook(shutdownHook14);
        org.slf4j.Logger logger16 = atmosphereConfig15.getlogger();
        boolean boolean17 = atmosphereConfig15.isSupportSession();
        boolean boolean18 = atmosphereConfig15.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24, startupHookArray23);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24);
        atmosphereConfig15.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24);
        atmosphereConfig0.startUpHook = startupHookList24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        boolean boolean31 = atmosphereConfig29.throwExceptionOnCloned;
        atmosphereConfig29.setThrowExceptionOnCloned(false);
        atmosphereConfig29.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig29.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        int int41 = atmosphereConfig37.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig37.supportSession = false;
        boolean boolean44 = atmosphereConfig37.isSessionTimeoutRemovalAllowed();
        atmosphereConfig37.destroy();
        java.lang.String str47 = atmosphereConfig37.getInitParameter("");
        atmosphereConfig37.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig37.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig37.getstartUpHook();
        atmosphereConfig29.startUpHook = startupHookList51;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig53.getAtmosphereHandlerConfig();
        boolean boolean55 = atmosphereConfig53.throwExceptionOnCloned;
        atmosphereConfig53.destroy();
        atmosphereConfig53.initComplete();
        java.lang.String str60 = atmosphereConfig53.getInitParameter("hi!", "");
        boolean boolean61 = atmosphereConfig53.isSupportSession();
        atmosphereConfig53.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig53.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig53.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList65;
        atmosphereConfig29.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig0.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig70.getAtmosphereHandlerConfig();
        boolean boolean72 = atmosphereConfig70.throwExceptionOnCloned;
        atmosphereConfig70.destroy();
        atmosphereConfig70.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig70.shutdownHook(shutdownHook76);
        atmosphereConfig70.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList80 = atmosphereConfig79.getAtmosphereHandlerConfig();
        int int83 = atmosphereConfig79.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework84 = atmosphereConfig79.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = atmosphereConfig79.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = atmosphereConfig79.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig79.getAtmosphereHandlerConfig();
        atmosphereConfig70.atmosphereHandlerConfig = atmosphereHandlerConfigList87;
        atmosphereConfig70.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig90 = atmosphereConfig0.populate(atmosphereConfig70);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework91 = null;
        atmosphereConfig90.framework = atmosphereFramework91;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList93 = atmosphereConfig90.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(startupHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(atmosphereFramework84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertNotNull(atmosphereConfig90);
        org.junit.Assert.assertNotNull(shutdownHookList93);
    }

    @Test
    public void test09434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09434");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig12.atmosphereHandlerConfig;
        boolean boolean16 = atmosphereConfig12.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList17);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        boolean boolean26 = atmosphereConfig24.throwExceptionOnCloned;
        atmosphereConfig24.destroy();
        atmosphereConfig24.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig24.shutdownHook(shutdownHook30);
        atmosphereConfig24.supportSession = true;
        boolean boolean34 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig24.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList35);
        boolean boolean37 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig38.getAtmosphereHandlerConfig();
        int int42 = atmosphereConfig38.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig38.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList45, startupHookArray44);
        atmosphereConfig38.startUpHook = startupHookList45;
        org.slf4j.Logger logger48 = atmosphereConfig38.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig38.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig38.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig52.getAtmosphereHandlerConfig();
        atmosphereConfig38.atmosphereHandlerConfig = atmosphereHandlerConfigList53;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig55.getproperties();
        atmosphereConfig38.setproperties(strMap56);
        atmosphereConfig0.properties = strMap56;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.supportSession = true;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNotNull(startupHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(logger48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test09435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09435");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.getproperties();
        atmosphereConfig8.setproperties(strMap22);
        atmosphereConfig0.setproperties(strMap22);
        java.lang.String str27 = atmosphereConfig0.getInitParameter("", "");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory28 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test09436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09436");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig9.throwExceptionOnCloned;
        atmosphereConfig9.destroy();
        atmosphereConfig9.initComplete();
        atmosphereConfig9.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig9.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        java.lang.String str20 = atmosphereConfig0.getInitParameter("hi!");
        java.lang.String str22 = atmosphereConfig0.getInitParameter("hi!");
        org.slf4j.Logger logger23 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
    }

    @Test
    public void test09437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09437");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig13.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig13.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig13.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig13.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig0.properties;
        java.lang.String str25 = atmosphereConfig0.getInitParameter("");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test09438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09438");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig4.getInitParameter("hi!");
        boolean boolean12 = atmosphereConfig4.getInitParameter("hi!", true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        boolean boolean16 = atmosphereConfig14.throwExceptionOnCloned;
        atmosphereConfig14.destroy();
        atmosphereConfig14.initComplete();
        java.lang.String str21 = atmosphereConfig14.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.startupHook(startupHook27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig28.setframework(atmosphereFramework29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig28.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig28.shutdownHooks;
        atmosphereConfig14.shutdownHooks = shutdownHookList32;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig14.startupHook(startupHook34);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig35.getproperties();
        java.lang.String str38 = atmosphereConfig35.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig4.populate(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
    }

    @Test
    public void test09439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09439");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig42.shutdownHook(shutdownHook43);
        int int47 = atmosphereConfig44.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig48.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig48.getshutdownHooks();
        atmosphereConfig44.shutdownHooks = shutdownHookList50;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig44.framework = atmosphereFramework52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig54.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig54.getshutdownHooks();
        boolean boolean59 = atmosphereConfig54.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig60.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = atmosphereConfig60.getshutdownHooks();
        atmosphereConfig60.setThrowExceptionOnCloned(false);
        java.lang.String str66 = atmosphereConfig60.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig60.properties;
        atmosphereConfig54.setproperties(strMap67);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig54.properties;
        atmosphereConfig44.properties = strMap69;
        atmosphereConfig0.setproperties(strMap69);
        boolean boolean72 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = atmosphereConfig0.shutdownHooks;
        boolean boolean74 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertNotNull(shutdownHookList62);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(shutdownHookList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test09440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09440");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig8.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList16;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig0.setframework(atmosphereFramework18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        atmosphereConfig0.setproperties(strMap20);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.startupHook(startupHook22);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig0.getshutdownHooks();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
    }

    @Test
    public void test09441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09441");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.shutdownHooks;
        boolean boolean11 = atmosphereConfig6.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        atmosphereConfig12.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig22.setframework(atmosphereFramework23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig22.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig22.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig22.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList27);
        atmosphereConfig6.startUpHook = startupHookList27;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig6.shutdownHook(shutdownHook30);
        boolean boolean32 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig6.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.shutdownHook(shutdownHook35);
        atmosphereConfig36.supportSession = true;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
    }

    @Test
    public void test09442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09442");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework;
        boolean boolean17 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig0.startupHook(startupHook18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.atmosphereHandlerConfig;
        boolean boolean21 = atmosphereConfig19.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.atmosphereHandlerConfig;
        java.lang.String str27 = atmosphereConfig23.getInitParameter("hi!", "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
    }

    @Test
    public void test09443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09443");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.getproperties();
        atmosphereConfig8.setproperties(strMap22);
        atmosphereConfig0.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig25.throwExceptionOnCloned = true;
        boolean boolean29 = atmosphereConfig25.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig25.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig35.startupHook(startupHook36);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig37.setframework(atmosphereFramework38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig37.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig37.getshutdownHooks();
        atmosphereConfig25.setshutdownHooks(shutdownHookList41);
        atmosphereConfig25.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        boolean boolean47 = atmosphereConfig45.throwExceptionOnCloned;
        atmosphereConfig45.destroy();
        atmosphereConfig45.initComplete();
        java.lang.String str52 = atmosphereConfig45.getInitParameter("hi!", "");
        boolean boolean53 = atmosphereConfig45.isSessionTimeoutRemovalAllowed();
        java.lang.String str55 = atmosphereConfig45.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray56 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList57, shutdownHookArray56);
        atmosphereConfig45.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList57);
        atmosphereConfig25.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList57);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList57);
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = atmosphereConfig0.framework;
        boolean boolean64 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = null;
        atmosphereConfig0.framework = atmosphereFramework65;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(shutdownHookArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(atmosphereFramework63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test09444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09444");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        int int14 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig10.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig10.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig10.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig4.populate(atmosphereConfig10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig20.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig37.startupHook(startupHook38);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig39.setframework(atmosphereFramework40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig39.getproperties();
        atmosphereConfig28.setproperties(strMap42);
        atmosphereConfig20.setproperties(strMap42);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig20.properties();
        atmosphereConfig4.properties = strMap45;
        boolean boolean49 = atmosphereConfig4.getInitParameter("", false);
        boolean boolean50 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = atmosphereConfig4.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test09445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09445");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig6.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig13.getshutdownHooks();
        boolean boolean18 = atmosphereConfig13.getInitParameter("", true);
        atmosphereConfig13.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig20.framework = atmosphereFramework25;
        int int29 = atmosphereConfig20.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig20.getstartUpHook();
        atmosphereConfig13.setstartUpHook(startupHookList30);
        atmosphereConfig6.setstartUpHook(startupHookList30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        boolean boolean35 = atmosphereConfig33.throwExceptionOnCloned;
        atmosphereConfig33.destroy();
        atmosphereConfig33.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig33.framework = atmosphereFramework38;
        int int42 = atmosphereConfig33.getInitParameter("hi!", (int) '#');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig33.framework;
        boolean boolean44 = atmosphereConfig33.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.getshutdownHooks();
        boolean boolean50 = atmosphereConfig45.getInitParameter("", true);
        boolean boolean51 = atmosphereConfig45.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig45.getstartUpHook();
        atmosphereConfig33.startUpHook = startupHookList52;
        atmosphereConfig6.setstartUpHook(startupHookList52);
        atmosphereConfig6.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig57.shutdownHook(shutdownHook60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig61.startupHook(startupHook62);
        org.slf4j.Logger logger64 = atmosphereConfig61.getlogger();
        atmosphereConfig61.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig61.sessionTimeoutRemovalAllowed = true;
        boolean boolean69 = atmosphereConfig61.supportSession;
        boolean boolean70 = atmosphereConfig61.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook71 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig61.shutdownHook(shutdownHook71);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList73 = atmosphereConfig61.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework74 = null;
        atmosphereConfig61.framework = atmosphereFramework74;
        atmosphereConfig61.supportSession = false;
        atmosphereConfig61.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework80 = null;
        atmosphereConfig61.framework = atmosphereFramework80;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig6.populate(atmosphereConfig61);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory83 = atmosphereConfig6.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 35 + "'", int29 == 35);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 35 + "'", int42 == 35);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(logger64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList73);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
    }

    @Test
    public void test09446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09446");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework;
        boolean boolean17 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.initComplete();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig26 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(startupHookList24);
    }

    @Test
    public void test09447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09447");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.shutdownHook(shutdownHook18);
        org.slf4j.Logger logger20 = atmosphereConfig19.getlogger();
        boolean boolean21 = atmosphereConfig19.isSupportSession();
        boolean boolean22 = atmosphereConfig19.isThrowExceptionOnCloned();
        org.slf4j.Logger logger23 = atmosphereConfig19.getlogger();
        boolean boolean24 = atmosphereConfig19.isThrowExceptionOnCloned();
        java.lang.String str27 = atmosphereConfig19.getInitParameter("hi!", "hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig19.properties;
        atmosphereConfig11.properties = strMap28;
        java.lang.Class<?> wildcardClass30 = atmosphereConfig11.getClass();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test09448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09448");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
    }

    @Test
    public void test09449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09449");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("", (int) (byte) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig6.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig6.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig6.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.startupHook(startupHook19);
        boolean boolean21 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig18.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        boolean boolean25 = atmosphereConfig23.throwExceptionOnCloned;
        atmosphereConfig23.destroy();
        atmosphereConfig23.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig23.shutdownHook(shutdownHook29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig31.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36, startupHookArray35);
        atmosphereConfig31.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        atmosphereConfig23.startUpHook = startupHookList36;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig23.shutdownHooks;
        atmosphereConfig18.shutdownHooks = shutdownHookList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        int int46 = atmosphereConfig42.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig42.supportSession = false;
        atmosphereConfig42.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig42.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig42.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = atmosphereConfig42.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig42.startUpHook;
        atmosphereConfig18.startUpHook = startupHookList54;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        atmosphereConfig18.setframework(atmosphereFramework56);
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig18.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig6.populate(atmosphereConfig18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig6.setframework(atmosphereFramework60);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(startupHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(atmosphereFramework53);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
    }

    @Test
    public void test09450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09450");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.shutdownHooks;
        boolean boolean15 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.throwExceptionOnCloned = true;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig22.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList27, startupHookArray26);
        atmosphereConfig22.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList27);
        atmosphereConfig22.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig22.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.populate(atmosphereConfig22);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig22.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(startupHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
    }

    @Test
    public void test09451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09451");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.destroy();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig13.getshutdownHooks();
        boolean boolean18 = atmosphereConfig13.getInitParameter("", true);
        boolean boolean19 = atmosphereConfig13.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig13.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig22.throwExceptionOnCloned;
        atmosphereConfig22.destroy();
        atmosphereConfig22.initComplete();
        java.lang.String str29 = atmosphereConfig22.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig36.setframework(atmosphereFramework37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig36.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig36.shutdownHooks;
        atmosphereConfig22.shutdownHooks = shutdownHookList40;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig22.shutdownHook(shutdownHook42);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig22.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList44;
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig49.getAtmosphereHandlerConfig();
        int int53 = atmosphereConfig49.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig49.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = atmosphereConfig49.framework();
        atmosphereConfig49.initComplete();
        atmosphereConfig49.destroy();
        atmosphereConfig49.sessionTimeoutRemovalAllowed = false;
        boolean boolean63 = atmosphereConfig49.getInitParameter("", true);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig49.getproperties();
        atmosphereConfig0.properties = strMap64;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap66 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(atmosphereFramework56);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strMap64);
    }

    @Test
    public void test09452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09452");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.getframework();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        atmosphereConfig11.setproperties(strMap13);
        boolean boolean15 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        boolean boolean16 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig11.framework;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework17);
    }

    @Test
    public void test09453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09453");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig4.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        java.lang.String str16 = atmosphereConfig11.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig11.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig11.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig11.properties;
        atmosphereConfig4.properties = strMap19;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig4.getframework();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(atmosphereFramework21);
    }

    @Test
    public void test09454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09454");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        boolean boolean12 = atmosphereConfig6.throwExceptionOnCloned;
        java.lang.String str15 = atmosphereConfig6.getInitParameter("", "hi!");
        boolean boolean16 = atmosphereConfig6.isThrowExceptionOnCloned();
        java.lang.String str18 = atmosphereConfig6.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig30.startupHook(startupHook31);
        boolean boolean33 = atmosphereConfig30.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig30.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        boolean boolean37 = atmosphereConfig35.throwExceptionOnCloned;
        atmosphereConfig35.setThrowExceptionOnCloned(false);
        atmosphereConfig35.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig35.shutdownHooks;
        atmosphereConfig30.setshutdownHooks(shutdownHookList42);
        atmosphereConfig23.shutdownHooks = shutdownHookList42;
        atmosphereConfig6.setshutdownHooks(shutdownHookList42);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig6.properties();
        boolean boolean49 = atmosphereConfig6.getInitParameter("", true);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(atmosphereFramework34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test09455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09455");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig4.startupHook(startupHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig4.startUpHook;
        boolean boolean11 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.supportSession = true;
        boolean boolean14 = atmosphereConfig4.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig4.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookList15);
    }

    @Test
    public void test09456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09456");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig0.startupHook(startupHook39);
        boolean boolean41 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig0.shutdownHook(shutdownHook42);
        boolean boolean46 = atmosphereConfig43.getInitParameter("", false);
        boolean boolean47 = atmosphereConfig43.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test09457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09457");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        boolean boolean33 = atmosphereConfig31.throwExceptionOnCloned;
        atmosphereConfig31.destroy();
        atmosphereConfig31.initComplete();
        java.lang.String str38 = atmosphereConfig31.getInitParameter("hi!", "");
        boolean boolean39 = atmosphereConfig31.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig31.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        atmosphereConfig42.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig42.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig42.getproperties();
        atmosphereConfig0.setproperties(strMap47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test09458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09458");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig0.atmosphereHandlerConfig;
        java.lang.String str14 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.startupHook(startupHook20);
        boolean boolean22 = atmosphereConfig19.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig19.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList23;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext25 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
    }

    @Test
    public void test09459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09459");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig27.setframework(atmosphereFramework28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig27.getproperties();
        atmosphereConfig16.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig16.framework;
        boolean boolean33 = atmosphereConfig16.supportSession;
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.populate(atmosphereConfig16);
        atmosphereConfig16.destroy();
        boolean boolean38 = atmosphereConfig16.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig16.properties;
        boolean boolean40 = atmosphereConfig16.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test09460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09460");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig16.getlogger();
        boolean boolean18 = atmosphereConfig16.isSupportSession();
        boolean boolean19 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig20.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig4.startUpHook = startupHookList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig30.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray34 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList35, startupHookArray34);
        atmosphereConfig30.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig30.framework = atmosphereFramework38;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig30.getstartUpHook();
        atmosphereConfig4.startUpHook = startupHookList40;
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = true;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(startupHookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
    }

    @Test
    public void test09461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09461");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig0.setframework(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig13.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList18, startupHookArray17);
        atmosphereConfig13.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList18);
        atmosphereConfig13.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.populate(atmosphereConfig13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        boolean boolean25 = atmosphereConfig23.throwExceptionOnCloned;
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig23.startUpHook;
        atmosphereConfig22.startUpHook = startupHookList28;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig22.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig22.properties;
        java.lang.String str33 = atmosphereConfig22.getInitParameter("");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(startupHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test09462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09462");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig4.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.startupHook(startupHook10);
        atmosphereConfig11.sessionTimeoutRemovalAllowed = true;
        boolean boolean14 = atmosphereConfig11.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09463");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig0.startUpHook;
        boolean boolean4 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.destroy();
        atmosphereConfig0.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test09464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09464");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList2 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean5 = atmosphereConfig1.isSupportSession();
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig12.atmosphereHandlerConfig;
        boolean boolean16 = atmosphereConfig12.supportSession;
        boolean boolean17 = atmosphereConfig12.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig12.properties;
        atmosphereConfig1.setproperties(strMap18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig24.startupHook(startupHook25);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig26.setframework(atmosphereFramework27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig26.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig26.getshutdownHooks();
        atmosphereConfig1.setshutdownHooks(shutdownHookList30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig33.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray37 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList38, startupHookArray37);
        atmosphereConfig33.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig50.startupHook(startupHook51);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        atmosphereConfig52.setframework(atmosphereFramework53);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig52.getproperties();
        atmosphereConfig41.setproperties(strMap55);
        atmosphereConfig33.setproperties(strMap55);
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig33.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig59.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig59.startUpHook;
        atmosphereConfig33.startUpHook = startupHookList61;
        boolean boolean63 = atmosphereConfig33.supportSession;
        boolean boolean64 = atmosphereConfig33.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig1.populate(atmosphereConfig33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig66.getAtmosphereHandlerConfig();
        boolean boolean68 = atmosphereConfig66.throwExceptionOnCloned;
        atmosphereConfig66.destroy();
        atmosphereConfig66.initComplete();
        java.lang.String str73 = atmosphereConfig66.getInitParameter("hi!", "");
        boolean boolean74 = atmosphereConfig66.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig75.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig75.getshutdownHooks();
        atmosphereConfig75.setThrowExceptionOnCloned(false);
        java.lang.String str81 = atmosphereConfig75.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig75.properties;
        atmosphereConfig66.setproperties(strMap82);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList84 = atmosphereConfig66.shutdownHooks;
        atmosphereConfig1.shutdownHooks = shutdownHookList84;
        java.lang.String str87 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework88 = null;
        atmosphereConfig1.setframework(atmosphereFramework88);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList90 = atmosphereConfig1.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList90;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(startupHookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertNotNull(shutdownHookList77);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(shutdownHookList84);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(startupHookList90);
    }

    @Test
    public void test09465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09465");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig0.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(strMap3);
    }

    @Test
    public void test09466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09466");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig6.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig6.framework = atmosphereFramework14;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig6.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig22.atmosphereHandlerConfig;
        boolean boolean26 = atmosphereConfig22.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig22.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList27;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig30.shutdownHook(shutdownHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig30.properties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test09467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09467");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig22.getshutdownHooks();
        atmosphereConfig22.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig27.getshutdownHooks();
        atmosphereConfig22.setshutdownHooks(shutdownHookList29);
        boolean boolean31 = atmosphereConfig22.isSessionTimeoutRemovalAllowed();
        atmosphereConfig22.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig22.shutdownHooks;
        atmosphereConfig19.shutdownHooks = shutdownHookList34;
        atmosphereConfig4.setshutdownHooks(shutdownHookList34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig4.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig4.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig40.getAtmosphereHandlerConfig();
        boolean boolean42 = atmosphereConfig40.throwExceptionOnCloned;
        atmosphereConfig40.destroy();
        atmosphereConfig40.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig40.shutdownHook(shutdownHook46);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig47.startupHook(startupHook48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig54.shutdownHook(shutdownHook55);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig54.getshutdownHooks();
        java.lang.String str59 = atmosphereConfig54.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig60.getAtmosphereHandlerConfig();
        boolean boolean62 = atmosphereConfig60.throwExceptionOnCloned;
        atmosphereConfig60.destroy();
        atmosphereConfig60.initComplete();
        java.lang.String str67 = atmosphereConfig60.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig60.startUpHook;
        atmosphereConfig54.setstartUpHook(startupHookList68);
        atmosphereConfig47.startUpHook = startupHookList68;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList71;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(startupHookList68);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
    }

    @Test
    public void test09468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09468");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig3.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        atmosphereConfig7.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.shutdownHook(shutdownHook18);
        org.slf4j.Logger logger20 = atmosphereConfig19.getlogger();
        boolean boolean21 = atmosphereConfig19.isSupportSession();
        boolean boolean22 = atmosphereConfig19.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig23.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig23.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig7.startUpHook = startupHookList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig7.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig37.getshutdownHooks();
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig42.getshutdownHooks();
        atmosphereConfig37.setshutdownHooks(shutdownHookList44);
        atmosphereConfig7.shutdownHooks = shutdownHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        int int51 = atmosphereConfig47.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig47.supportSession = false;
        boolean boolean54 = atmosphereConfig47.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig55.getshutdownHooks();
        atmosphereConfig47.setshutdownHooks(shutdownHookList57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.properties();
        atmosphereConfig47.properties = strMap62;
        atmosphereConfig7.setproperties(strMap62);
        atmosphereConfig0.properties = strMap62;
        boolean boolean68 = atmosphereConfig0.getInitParameter("", false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList69 = atmosphereConfig0.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory70 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList69);
    }

    @Test
    public void test09469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09469");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        atmosphereConfig0.throwExceptionOnCloned = false;
        boolean boolean10 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        int int16 = atmosphereConfig12.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig12.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19, startupHookArray18);
        atmosphereConfig12.startUpHook = startupHookList19;
        org.slf4j.Logger logger22 = atmosphereConfig12.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig12.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig12.startupHook(startupHook24);
        atmosphereConfig25.setSessionTimeoutRemovalAllowed(true);
        java.lang.String str29 = atmosphereConfig25.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig25.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList30;
        java.lang.String str34 = atmosphereConfig0.getInitParameter("", "");
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.throwExceptionOnCloned = false;
        atmosphereConfig37.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig37.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig37.initComplete();
        atmosphereConfig37.initComplete();
        atmosphereConfig37.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig37.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig37.getproperties();
        atmosphereConfig0.properties = strMap49;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(strMap49);
    }

    @Test
    public void test09470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09470");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig8.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.properties();
        atmosphereConfig0.properties = strMap15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig27.setframework(atmosphereFramework28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig27.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig27.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig27.startUpHook;
        atmosphereConfig17.setstartUpHook(startupHookList32);
        atmosphereConfig0.setstartUpHook(startupHookList32);
        boolean boolean35 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig0.framework = atmosphereFramework36;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory38 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test09471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09471");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.getproperties();
        boolean boolean13 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.initComplete();
        boolean boolean15 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        int int22 = atmosphereConfig18.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig18.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig18.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig18.framework();
        boolean boolean27 = atmosphereConfig18.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig18.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig18.shutdownHook(shutdownHook29);
        java.lang.String str33 = atmosphereConfig30.getInitParameter("", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig30.getproperties();
        atmosphereConfig0.setproperties(strMap34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(atmosphereFramework36);
    }

    @Test
    public void test09472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09472");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        atmosphereConfig0.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(startupHookList11);
    }

    @Test
    public void test09473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09473");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig16.getlogger();
        boolean boolean18 = atmosphereConfig16.isSupportSession();
        boolean boolean19 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig20.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig4.startUpHook = startupHookList25;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig4.framework;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.lang.String str33 = atmosphereConfig4.getInitParameter("hi!");
        boolean boolean34 = atmosphereConfig4.supportSession;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test09474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09474");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig5.throwExceptionOnCloned = true;
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        boolean boolean10 = atmosphereConfig5.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig5.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.slf4j.Logger logger20 = atmosphereConfig17.getlogger();
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig17.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig17.startUpHook;
        atmosphereConfig5.startUpHook = startupHookList24;
        boolean boolean26 = atmosphereConfig5.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig5.setframework(atmosphereFramework27);
        org.slf4j.Logger logger29 = atmosphereConfig5.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(logger29);
    }

    @Test
    public void test09475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09475");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig10.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray14 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15, startupHookArray14);
        atmosphereConfig10.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15);
        atmosphereConfig6.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig6.framework();
        java.lang.String str21 = atmosphereConfig6.getInitParameter("");
        java.lang.String str24 = atmosphereConfig6.getInitParameter("hi!", "");
        atmosphereConfig6.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig27.getshutdownHooks();
        atmosphereConfig27.setThrowExceptionOnCloned(false);
        java.lang.String str33 = atmosphereConfig27.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig27.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig27.startupHook(startupHook35);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig27.shutdownHooks;
        atmosphereConfig6.shutdownHooks = shutdownHookList37;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig6.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig6.getshutdownHooks();
        int int43 = atmosphereConfig6.getInitParameter("hi!", 10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig6.getshutdownHooks();
        atmosphereConfig6.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig6.properties;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(startupHookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test09476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09476");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        boolean boolean12 = atmosphereConfig6.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig13.throwExceptionOnCloned;
        atmosphereConfig13.destroy();
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig13.shutdownHook(shutdownHook19);
        atmosphereConfig13.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        boolean boolean25 = atmosphereConfig23.throwExceptionOnCloned;
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        boolean boolean28 = atmosphereConfig23.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig23.getproperties();
        atmosphereConfig13.setproperties(strMap29);
        atmosphereConfig6.properties = strMap29;
        boolean boolean34 = atmosphereConfig6.getInitParameter("", false);
        atmosphereConfig6.setThrowExceptionOnCloned(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig6.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig42.shutdownHook(shutdownHook43);
        int int47 = atmosphereConfig44.getInitParameter("", (int) (byte) -1);
        atmosphereConfig44.throwExceptionOnCloned = true;
        atmosphereConfig44.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig44.properties();
        atmosphereConfig6.setproperties(strMap51);
        atmosphereConfig6.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strMap51);
    }

    @Test
    public void test09477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09477");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.startupHook(startupHook2);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean6 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean9 = atmosphereConfig0.getInitParameter("", true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean11 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.getshutdownHooks();
        boolean boolean17 = atmosphereConfig12.getInitParameter("", true);
        boolean boolean20 = atmosphereConfig12.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.populate(atmosphereConfig12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig21.framework = atmosphereFramework22;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
    }

    @Test
    public void test09478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09478");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean7 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean10 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean13 = atmosphereConfig0.getInitParameter("hi!", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
    }

    @Test
    public void test09479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09479");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean7 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test09480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09480");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        atmosphereConfig0.throwExceptionOnCloned = false;
        boolean boolean10 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        int int16 = atmosphereConfig12.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig12.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19, startupHookArray18);
        atmosphereConfig12.startUpHook = startupHookList19;
        org.slf4j.Logger logger22 = atmosphereConfig12.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig12.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig12.startupHook(startupHook24);
        atmosphereConfig25.setSessionTimeoutRemovalAllowed(true);
        java.lang.String str29 = atmosphereConfig25.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig25.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList30;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig0.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap33 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
    }

    @Test
    public void test09481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09481");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        int int19 = atmosphereConfig16.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig24.shutdownHook(shutdownHook25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig24.atmosphereHandlerConfig;
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        int int31 = atmosphereConfig16.getInitParameter("", (int) (byte) 10);
        boolean boolean32 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig37.startupHook(startupHook38);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig39.setframework(atmosphereFramework40);
        atmosphereConfig39.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig39.properties;
        boolean boolean45 = atmosphereConfig39.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig46.getAtmosphereHandlerConfig();
        boolean boolean48 = atmosphereConfig46.throwExceptionOnCloned;
        atmosphereConfig46.destroy();
        atmosphereConfig46.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig46.shutdownHook(shutdownHook52);
        atmosphereConfig46.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig56.getAtmosphereHandlerConfig();
        boolean boolean58 = atmosphereConfig56.throwExceptionOnCloned;
        atmosphereConfig56.setThrowExceptionOnCloned(false);
        boolean boolean61 = atmosphereConfig56.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig56.getproperties();
        atmosphereConfig46.setproperties(strMap62);
        atmosphereConfig39.properties = strMap62;
        atmosphereConfig16.properties = strMap62;
        atmosphereConfig0.properties = strMap62;
        atmosphereConfig0.destroy();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory68 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMap62);
    }

    @Test
    public void test09482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09482");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("", (int) (byte) -1);
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig6.startupHook(startupHook13);
        boolean boolean17 = atmosphereConfig14.getInitParameter("", true);
        org.slf4j.Logger logger18 = atmosphereConfig14.getlogger();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(logger18);
    }

    @Test
    public void test09483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09483");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        boolean boolean10 = atmosphereConfig0.supportSession;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(startupHookList13);
    }

    @Test
    public void test09484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09484");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig0.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        int int9 = atmosphereConfig5.getInitParameter("hi!", (int) (short) 0);
        boolean boolean10 = atmosphereConfig5.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig5.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig5.framework = atmosphereFramework13;
        boolean boolean17 = atmosphereConfig5.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig5.shutdownHook(shutdownHook18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig19.properties;
        atmosphereConfig0.setproperties(strMap20);
        atmosphereConfig0.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        boolean boolean27 = atmosphereConfig25.throwExceptionOnCloned;
        atmosphereConfig25.setThrowExceptionOnCloned(false);
        boolean boolean30 = atmosphereConfig25.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig25.framework = atmosphereFramework31;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig37.shutdownHook(shutdownHook38);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig37.getstartUpHook();
        atmosphereConfig25.setstartUpHook(startupHookList40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig42.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray46 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList47, startupHookArray46);
        atmosphereConfig42.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList47);
        atmosphereConfig42.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig42.atmosphereHandlerConfig;
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList51;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig57.startupHook(startupHook58);
        boolean boolean60 = atmosphereConfig57.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig57.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig57.startUpHook;
        atmosphereConfig25.setstartUpHook(startupHookList62);
        atmosphereConfig0.startUpHook = startupHookList62;
        boolean boolean65 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(startupHookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(atmosphereFramework61);
        org.junit.Assert.assertNotNull(startupHookList62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test09485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09485");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        boolean boolean10 = atmosphereConfig8.throwExceptionOnCloned;
        atmosphereConfig8.destroy();
        atmosphereConfig8.initComplete();
        java.lang.String str15 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean16 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        java.lang.String str18 = atmosphereConfig8.getInitParameter("hi!");
        boolean boolean19 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig8.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig8.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList21);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.shutdownHook(shutdownHook30);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig29.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig29.getAtmosphereHandlerConfig();
        boolean boolean34 = atmosphereConfig29.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        int int39 = atmosphereConfig35.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig35.supportSession = false;
        boolean boolean42 = atmosphereConfig35.isSessionTimeoutRemovalAllowed();
        boolean boolean43 = atmosphereConfig35.throwExceptionOnCloned;
        java.lang.String str45 = atmosphereConfig35.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig46.getAtmosphereHandlerConfig();
        atmosphereConfig46.throwExceptionOnCloned = true;
        boolean boolean50 = atmosphereConfig46.isSupportSession();
        boolean boolean51 = atmosphereConfig46.isSessionTimeoutRemovalAllowed();
        boolean boolean52 = atmosphereConfig46.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig57.shutdownHook(shutdownHook58);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig57.atmosphereHandlerConfig;
        boolean boolean61 = atmosphereConfig57.supportSession;
        boolean boolean62 = atmosphereConfig57.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig57.properties;
        atmosphereConfig46.setproperties(strMap63);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig46.startUpHook;
        atmosphereConfig35.setstartUpHook(startupHookList65);
        atmosphereConfig29.startUpHook = startupHookList65;
        atmosphereConfig0.startUpHook = startupHookList65;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig0.shutdownHook(shutdownHook69);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig70.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(startupHookList65);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(strMap71);
    }

    @Test
    public void test09486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09486");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.destroy();
        atmosphereConfig10.initComplete();
        java.lang.String str17 = atmosphereConfig10.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig10.startUpHook;
        atmosphereConfig4.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        int int24 = atmosphereConfig20.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig20.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig20.framework();
        org.slf4j.Logger logger28 = atmosphereConfig20.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig4.populate(atmosphereConfig20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig4.shutdownHook(shutdownHook31);
        atmosphereConfig32.supportSession = true;
        boolean boolean35 = atmosphereConfig32.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test09487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09487");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test09488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09488");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig0.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig5.setframework(atmosphereFramework6);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider8 = atmosphereConfig5.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
    }

    @Test
    public void test09489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09489");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig4.initComplete();
        int int11 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig4.framework = atmosphereFramework12;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig4.shutdownHooks;
        boolean boolean15 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig4.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap17 = atmosphereConfig4.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test09490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09490");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig0.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.getproperties();
        boolean boolean9 = atmosphereConfig0.isSupportSession();
        boolean boolean10 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09491");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.getframework();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig0.startUpHook;
        boolean boolean14 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        boolean boolean19 = atmosphereConfig17.throwExceptionOnCloned;
        atmosphereConfig17.destroy();
        boolean boolean21 = atmosphereConfig17.sessionTimeoutRemovalAllowed;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(false);
        int int28 = atmosphereConfig17.getInitParameter("hi!", 100);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        boolean boolean31 = atmosphereConfig29.throwExceptionOnCloned;
        atmosphereConfig29.destroy();
        atmosphereConfig29.initComplete();
        java.lang.String str36 = atmosphereConfig29.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.startupHook(startupHook42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig43.setframework(atmosphereFramework44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig43.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig43.shutdownHooks;
        atmosphereConfig29.shutdownHooks = shutdownHookList47;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig29.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig17.populate(atmosphereConfig29);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig51.getproperties();
        atmosphereConfig0.properties = strMap53;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(strMap53);
    }

    @Test
    public void test09492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09492");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig5.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList7);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig0.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig21.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig21.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig21.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNull(atmosphereFramework28);
    }

    @Test
    public void test09493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09493");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig0.startupHook(startupHook4);
        boolean boolean6 = atmosphereConfig5.isThrowExceptionOnCloned();
        int int9 = atmosphereConfig5.getInitParameter("", (int) (byte) 10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        atmosphereConfig14.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig24.shutdownHook(shutdownHook25);
        org.slf4j.Logger logger27 = atmosphereConfig26.getlogger();
        boolean boolean28 = atmosphereConfig26.isSupportSession();
        boolean boolean29 = atmosphereConfig26.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig30.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray34 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList35, startupHookArray34);
        atmosphereConfig30.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList35);
        atmosphereConfig26.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList35);
        atmosphereConfig14.startUpHook = startupHookList35;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig40.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList45, startupHookArray44);
        atmosphereConfig40.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig40.framework = atmosphereFramework48;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig40.getstartUpHook();
        atmosphereConfig14.startUpHook = startupHookList50;
        atmosphereConfig5.setstartUpHook(startupHookList50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = atmosphereConfig5.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = atmosphereConfig5.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(logger27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(startupHookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(startupHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNull(atmosphereFramework53);
        org.junit.Assert.assertNull(atmosphereFramework54);
    }

    @Test
    public void test09494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09494");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig6.getshutdownHooks();
        atmosphereConfig6.setThrowExceptionOnCloned(false);
        java.lang.String str12 = atmosphereConfig6.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig6.properties;
        atmosphereConfig0.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.shutdownHook(shutdownHook16);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster18 = atmosphereConfig17.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
    }

    @Test
    public void test09495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09495");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean3 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.framework = atmosphereFramework4;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        int int11 = atmosphereConfig0.getInitParameter("", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.slf4j.Logger logger22 = atmosphereConfig19.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig23.getshutdownHooks();
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig28.getshutdownHooks();
        atmosphereConfig23.setshutdownHooks(shutdownHookList30);
        boolean boolean32 = atmosphereConfig23.isSessionTimeoutRemovalAllowed();
        atmosphereConfig23.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig23.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig19.populate(atmosphereConfig23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig42.startupHook(startupHook43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        atmosphereConfig44.setframework(atmosphereFramework45);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig44.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig37.populate(atmosphereConfig44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig49.getAtmosphereHandlerConfig();
        boolean boolean51 = atmosphereConfig49.throwExceptionOnCloned;
        atmosphereConfig49.destroy();
        boolean boolean53 = atmosphereConfig49.sessionTimeoutRemovalAllowed;
        atmosphereConfig49.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig49.setSessionTimeoutRemovalAllowed(false);
        int int60 = atmosphereConfig49.getInitParameter("hi!", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig49.startupHook(startupHook61);
        atmosphereConfig62.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig65.getAtmosphereHandlerConfig();
        int int69 = atmosphereConfig65.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = atmosphereConfig65.getframework();
        atmosphereConfig65.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = atmosphereConfig65.shutdownHooks;
        atmosphereConfig62.setshutdownHooks(shutdownHookList73);
        atmosphereConfig44.shutdownHooks = shutdownHookList73;
        atmosphereConfig0.shutdownHooks = shutdownHookList73;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(atmosphereFramework70);
        org.junit.Assert.assertNotNull(shutdownHookList73);
    }

    @Test
    public void test09496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09496");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig4.getshutdownHooks();
        boolean boolean8 = atmosphereConfig4.getInitParameter("hi!", true);
        atmosphereConfig4.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig4.framework;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(atmosphereFramework11);
    }

    @Test
    public void test09497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09497");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework;
        boolean boolean17 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig20.getshutdownHooks();
        boolean boolean25 = atmosphereConfig20.getInitParameter("", true);
        atmosphereConfig20.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig20.shutdownHook(shutdownHook27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig20.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.populate(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
    }

    @Test
    public void test09498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09498");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        boolean boolean15 = atmosphereConfig10.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.getproperties();
        atmosphereConfig0.setproperties(strMap16);
        boolean boolean18 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str20 = atmosphereConfig0.getInitParameter("");
        org.slf4j.Logger logger21 = atmosphereConfig0.getlogger();
        boolean boolean22 = atmosphereConfig0.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration23 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(logger21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test09499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09499");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        int int14 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig10.supportSession = false;
        atmosphereConfig10.setSupportSession(false);
        java.lang.String str20 = atmosphereConfig10.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig9.populate(atmosphereConfig10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = null;
        atmosphereConfig10.setstartUpHook(startupHookList22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        boolean boolean26 = atmosphereConfig24.throwExceptionOnCloned;
        atmosphereConfig24.destroy();
        atmosphereConfig24.initComplete();
        java.lang.String str31 = atmosphereConfig24.getInitParameter("hi!", "");
        boolean boolean32 = atmosphereConfig24.isSessionTimeoutRemovalAllowed();
        java.lang.String str34 = atmosphereConfig24.getInitParameter("hi!");
        boolean boolean35 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig24.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig24.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig24.getshutdownHooks();
        atmosphereConfig10.setshutdownHooks(shutdownHookList38);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.lang.String str42 = atmosphereConfig10.getInitParameter("");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory43 = atmosphereConfig10.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(shutdownHookList38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test09500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09500");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        boolean boolean15 = atmosphereConfig10.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.getproperties();
        atmosphereConfig0.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.getframework();
        boolean boolean19 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        int int24 = atmosphereConfig20.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig20.supportSession = false;
        boolean boolean27 = atmosphereConfig20.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.shutdownHook(shutdownHook33);
        org.slf4j.Logger logger35 = atmosphereConfig34.getlogger();
        boolean boolean36 = atmosphereConfig34.isSupportSession();
        boolean boolean37 = atmosphereConfig34.isThrowExceptionOnCloned();
        org.slf4j.Logger logger38 = atmosphereConfig34.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig34.properties();
        atmosphereConfig34.initComplete();
        boolean boolean41 = atmosphereConfig34.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig20.populate(atmosphereConfig34);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig34.shutdownHook(shutdownHook43);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList45;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(logger35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(logger38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(startupHookList45);
    }
}

